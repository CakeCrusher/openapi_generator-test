{
  "openapi": "3.0.0",
  "paths": {
      "/api/v1/accounts": {
          "get": {
              "operationId": "m_listAccounts",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.getAll()\n} catch (error) {\n\tconsole.log(error)\n}",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all accounts",
              "description": "Returns a list of the accounts linked to Unipile.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "title": "Mobile",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "MOBILE"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "phone_number": {
                                                                              "type": "string"
                                                                          },
                                                                          "sim_serial_number": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "phone_number",
                                                                          "sim_serial_number"
                                                                      ]
                                                                  },
                                                                  "call": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "phone_number": {
                                                                              "type": "string"
                                                                          },
                                                                          "sim_serial_number": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "phone_number",
                                                                          "sim_serial_number"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im",
                                                                  "call"
                                                              ]
                                                          },
                                                          "last_fetched_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Mail",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "MAIL"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "mail": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "imap_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "imap_user": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_encryption": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "tls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "ssl"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "starttls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "default"
                                                                                      ]
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "smtp_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "smtp_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "smtp_user": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "imap_host",
                                                                          "imap_port",
                                                                          "imap_user",
                                                                          "smtp_host",
                                                                          "smtp_port",
                                                                          "smtp_user"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "mail"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Google",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "GOOGLE_OAUTH"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "mail": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "mail"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "ICloud",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "ICLOUD"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "mail": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "imap_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "imap_user": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_encryption": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "tls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "ssl"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "starttls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "default"
                                                                                      ]
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "smtp_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "smtp_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "smtp_user": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "imap_host",
                                                                          "imap_port",
                                                                          "imap_user",
                                                                          "smtp_host",
                                                                          "smtp_port",
                                                                          "smtp_user"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "mail"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Outlook",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "OUTLOOK"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "mail": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "mail"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Google Calendar",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "GOOGLE_CALENDAR"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "calendar": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "calendar"
                                                              ]
                                                          },
                                                          "sync_token": {
                                                              "type": "string"
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Whatsapp",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "WHATSAPP"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "phone_number": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "phone_number"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Linkedin",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          },
                                                                          "premiumContractId": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "premiumFeatures": {
                                                                              "type": "array",
                                                                              "items": {
                                                                                  "anyOf": [
                                                                                      {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                              "recruiter"
                                                                                          ]
                                                                                      },
                                                                                      {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                              "sales_navigator"
                                                                                          ]
                                                                                      },
                                                                                      {
                                                                                          "type": "string",
                                                                                          "enum": [
                                                                                              "premium"
                                                                                          ]
                                                                                      }
                                                                                  ]
                                                                              }
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username",
                                                                          "premiumContractId"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Slack",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SLACK"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "user": {
                                                                              "type": "string"
                                                                          },
                                                                          "user_id": {
                                                                              "type": "string"
                                                                          },
                                                                          "team": {
                                                                              "type": "string"
                                                                          },
                                                                          "team_id": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "url",
                                                                          "user",
                                                                          "user_id",
                                                                          "team",
                                                                          "team_id"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Twitter",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TWITTER"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Exchange",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "EXCHANGE"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "mail": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "imap_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "imap_user": {
                                                                              "type": "string"
                                                                          },
                                                                          "imap_encryption": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "tls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "ssl"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "starttls"
                                                                                      ]
                                                                                  },
                                                                                  {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "default"
                                                                                      ]
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "smtp_host": {
                                                                              "type": "string"
                                                                          },
                                                                          "smtp_port": {
                                                                              "type": "number"
                                                                          },
                                                                          "smtp_user": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "imap_host",
                                                                          "imap_port",
                                                                          "imap_user",
                                                                          "smtp_host",
                                                                          "smtp_port",
                                                                          "smtp_user"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "mail"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Telegram",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TELEGRAM"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "user_id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "user_id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Instagram",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "INSTAGRAM"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Messenger",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Account"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "MESSENGER"
                                                              ]
                                                          },
                                                          "connection_params": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "im": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "username": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "username"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "im"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "created_at": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "current_signature": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "signatures": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "title": {
                                                                          "type": "string"
                                                                      },
                                                                      "content": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "title",
                                                                      "content"
                                                                  ]
                                                              }
                                                          },
                                                          "groups": {
                                                              "type": "array",
                                                              "items": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "sources": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "title": "AccountSourceServiceStatus",
                                                                          "anyOf": [
                                                                              {
                                                                                  "title": "OK",
                                                                                  "description": "The Service is running normally.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "STOPPED",
                                                                                  "description": "The Service has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "STOPPED"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "ERROR",
                                                                                  "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ERROR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CREDENTIALS",
                                                                                  "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CREDENTIALS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "PERMISSIONS",
                                                                                  "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "PERMISSIONS"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "title": "CONNECTING",
                                                                                  "description": "The Service is connecting.",
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CONNECTING"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "status"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "connection_params",
                                                          "id",
                                                          "name",
                                                          "created_at",
                                                          "groups",
                                                          "sources"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "title": "null",
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "m_createAccount",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "// LinkedIn example\nimport { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst username = \"your Linkedin username\"\nconst password = \"your Linkedin password\"\nconst provider = \"LINKEDIN\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.connect({\n\t\tusername,\n\t\tpassword,\n\t\tprovider,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Connect an account (native authentication)",
              "description": "Link to Uniple an account of the given type and provider.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "description": "The parameters required to perform the authentication depend on the type of account you are trying to connect.",
                  "content": {
                      "application/json": {
                          "schema": {
                              "anyOf": [
                                  {
                                      "title": "Linkedin",
                                      "description": "There is two different ways to authenticate a Linkedin account. Each way can benefit from some proxy options.",
                                      "anyOf": [
                                          {
                                              "title": "Basic authentication",
                                              "description": "Authenticate using your username and password",
                                              "type": "object",
                                              "properties": {
                                                  "disabled_features": {
                                                      "description": "An array of features that should be disabled for this account.",
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "linkedin_recruiter",
                                                              "linkedin_sales_navigator",
                                                              "linkedin_organizations_mailboxes"
                                                          ]
                                                      }
                                                  },
                                                  "sync_limit": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "provider": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LINKEDIN"
                                                      ]
                                                  },
                                                  "proxy": {
                                                      "type": "object",
                                                      "properties": {
                                                          "protocol": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "https",
                                                                  "http",
                                                                  "socks5"
                                                              ]
                                                          },
                                                          "port": {
                                                              "type": "number"
                                                          },
                                                          "host": {
                                                              "type": "string"
                                                          },
                                                          "username": {
                                                              "description": "Optional username for proxy’s authentication.",
                                                              "type": "string"
                                                          },
                                                          "password": {
                                                              "description": "Optional password for proxy’s authentication.",
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "port",
                                                          "host"
                                                      ]
                                                  },
                                                  "user_agent": {
                                                      "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                                      "type": "string"
                                                  },
                                                  "recruiter_contract_id": {
                                                      "description": "The contract that should be used with Linkedin Recruiter.",
                                                      "type": "string"
                                                  },
                                                  "username": {
                                                      "description": "Should be either an email address or a phone number.",
                                                      "type": "string"
                                                  },
                                                  "password": {
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "provider",
                                                  "username",
                                                  "password"
                                              ]
                                          },
                                          {
                                              "title": "Cookie authentication",
                                              "description": "Authenticate using cookies",
                                              "type": "object",
                                              "properties": {
                                                  "disabled_features": {
                                                      "description": "An array of features that should be disabled for this account.",
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "linkedin_recruiter",
                                                              "linkedin_sales_navigator",
                                                              "linkedin_organizations_mailboxes"
                                                          ]
                                                      }
                                                  },
                                                  "sync_limit": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "provider": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LINKEDIN"
                                                      ]
                                                  },
                                                  "proxy": {
                                                      "type": "object",
                                                      "properties": {
                                                          "protocol": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "https",
                                                                  "http",
                                                                  "socks5"
                                                              ]
                                                          },
                                                          "port": {
                                                              "type": "number"
                                                          },
                                                          "host": {
                                                              "type": "string"
                                                          },
                                                          "username": {
                                                              "description": "Optional username for proxy’s authentication.",
                                                              "type": "string"
                                                          },
                                                          "password": {
                                                              "description": "Optional password for proxy’s authentication.",
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "port",
                                                          "host"
                                                      ]
                                                  },
                                                  "user_agent": {
                                                      "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                                      "type": "string"
                                                  },
                                                  "recruiter_contract_id": {
                                                      "description": "The contract that should be used with Linkedin Recruiter.",
                                                      "type": "string"
                                                  },
                                                  "access_token": {
                                                      "description": "Linkedin access token, which is to be found under the key \"li_at\".",
                                                      "type": "string"
                                                  },
                                                  "premium_token": {
                                                      "description": "Linkedin Recruiter/Sales Navigator authentication cookie, which is to be found under the key \"li_a\". It should be used if you need to be logged to an existing session. It not provided, a new session will be started.",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "provider",
                                                  "access_token"
                                              ]
                                          }
                                      ]
                                  },
                                  {
                                      "title": "Whatsapp",
                                      "description": "You just need to set the provider parameter to \"WHATSAPP\" to begin the authentication. In response, you will receive a string which needs to be converted to a QR code and scanned to complete the authentication.",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "WHATSAPP"
                                              ]
                                          }
                                      },
                                      "required": [
                                          "provider"
                                      ]
                                  },
                                  {
                                      "title": "Instagram",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                              "type": "object",
                                              "properties": {
                                                  "chats": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  },
                                                  "messages": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  }
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "INSTAGRAM"
                                              ]
                                          },
                                          "username": {
                                              "description": "Your Instagram username.",
                                              "type": "string"
                                          },
                                          "password": {
                                              "description": "Your Instagram password.",
                                              "type": "string"
                                          },
                                          "user_agent": {
                                              "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "password"
                                      ]
                                  },
                                  {
                                      "title": "Messenger",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                              "type": "object",
                                              "properties": {
                                                  "chats": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  },
                                                  "messages": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  }
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "MESSENGER"
                                              ]
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "password": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "password"
                                      ]
                                  },
                                  {
                                      "title": "IMAP",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "MAIL"
                                              ]
                                          },
                                          "imap_user": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "smtp_user": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "imap_password": {
                                              "type": "string"
                                          },
                                          "smtp_password": {
                                              "type": "string"
                                          },
                                          "imap_host": {
                                              "type": "string"
                                          },
                                          "imap_port": {
                                              "type": "number"
                                          },
                                          "smtp_host": {
                                              "type": "string"
                                          },
                                          "smtp_port": {
                                              "type": "number"
                                          },
                                          "imap_encryption": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "imap_user",
                                          "smtp_user",
                                          "imap_password",
                                          "smtp_password",
                                          "imap_host",
                                          "imap_port",
                                          "smtp_host",
                                          "smtp_port",
                                          "imap_encryption"
                                      ]
                                  },
                                  {
                                      "title": "Gmail",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "GOOGLE_OAUTH"
                                              ]
                                          },
                                          "refresh_token": {
                                              "type": "string"
                                          },
                                          "access_token": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "refresh_token",
                                          "access_token"
                                      ]
                                  },
                                  {
                                      "title": "Telegram",
                                      "description": "You just need to set the provider parameter to \"TELEGRAM\" to begin the authentication. In response, you will receive a string which needs to be converted to a QR code and scanned to complete the authentication.",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "TELEGRAM"
                                              ]
                                          }
                                      },
                                      "required": [
                                          "provider"
                                      ]
                                  },
                                  {
                                      "title": "Outlook",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "OUTLOOK"
                                              ]
                                          },
                                          "refresh_token": {
                                              "type": "string"
                                          },
                                          "access_token": {
                                              "type": "string"
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "id": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "refresh_token",
                                          "access_token",
                                          "username",
                                          "id"
                                      ]
                                  },
                                  {
                                      "title": "Twitter",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "TWITTER"
                                              ]
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "email": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "password": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "email",
                                          "password"
                                      ]
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. The authentication succeeded and the account is linked to Unipile.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountCreated"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id"
                                  ]
                              }
                          }
                      }
                  },
                  "202": {
                      "description": "Accepted. The authentication request succeeded but some checkpoint needs to be solved to complete it.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Checkpoint"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "checkpoint": {
                                          "anyOf": [
                                              {
                                                  "title": "QR code",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string",
                                                          "enum": [
                                                              "QRCODE"
                                                          ]
                                                      },
                                                      "qrcode": {
                                                          "description": "This string needs to be converted into a QR code and scanned to complete the authentication.",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "qrcode"
                                                  ]
                                              },
                                              {
                                                  "title": "2FA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "2FA"
                                                          ]
                                                      },
                                                      "source": {
                                                          "anyOf": [
                                                              {
                                                                  "description": "The code has been sent via SMS.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "SMS"
                                                                  ]
                                                              },
                                                              {
                                                                  "description": "The code is available on your authentication app.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "APP"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "OTP",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "OTP"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "PHONE_REGISTER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a mobile phone number to receive a 2FA code. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "PHONE_REGISTER"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "IN_APP_VALIDATION",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to perform an action in the provider’s app to solve this checkpoint.",
                                                          "type": "string",
                                                          "enum": [
                                                              "IN_APP_VALIDATION"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CAPTCHA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "The captcha could not be solved by our automatized services.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CAPTCHA"
                                                          ]
                                                      },
                                                      "public_key": {
                                                          "description": "The public key of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      },
                                                      "data": {
                                                          "description": "The data payload of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CONTRACT_CHOOSER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "Gives options to pick the contract you need Recruiter to be connected to.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CONTRACT_CHOOSER"
                                                          ]
                                                      },
                                                      "contract_options": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name"
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "contract_options"
                                                  ]
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id",
                                      "checkpoint"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n## Unauthorized\n### Invalid credentials\nThe provided credentials are invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "AccountsInvalidCredentialsResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_credentials"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "\n## Forbidden\n### Insufficient permissions\nValid authentication but insufficient permissions to perform the request.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "407": {
                      "description": "\n## Proxy Authentication Required\n### Proxy authentication error\nPlease verify your proxy credentials and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ProxyAuthRequiredResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_auth_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              407
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "408": {
                      "description": "\n## Request Timeout\n### Request timed out\nRequest failed since the expected behaviour didn't happen in allocated time.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "RequestTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              408
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "425": {
                      "description": "\n## Too Early\n### Authentication in progress\nCannot start a new intent while another is still in progress.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "TooEarlyResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/auth_in_progress"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              425
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n## Not Implemented\n### Missing feature\nRequested feature is planned but has not been implemented yet.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "502": {
                      "description": "\n## Bad Gateway\n### Proxy error\nProvided proxy could not establish communication.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              502
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/accounts/{id}": {
          "get": {
              "operationId": "m_getAccountById",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.getOne(account_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve an account",
              "description": "Retrieve the details of an account.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the account to retrieve.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "anyOf": [
                                      {
                                          "title": "Mobile",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "MOBILE"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "phone_number": {
                                                                  "type": "string"
                                                              },
                                                              "sim_serial_number": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "phone_number",
                                                              "sim_serial_number"
                                                          ]
                                                      },
                                                      "call": {
                                                          "type": "object",
                                                          "properties": {
                                                              "phone_number": {
                                                                  "type": "string"
                                                              },
                                                              "sim_serial_number": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "phone_number",
                                                              "sim_serial_number"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im",
                                                      "call"
                                                  ]
                                              },
                                              "last_fetched_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Mail",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "MAIL"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "mail": {
                                                          "type": "object",
                                                          "properties": {
                                                              "imap_host": {
                                                                  "type": "string"
                                                              },
                                                              "imap_port": {
                                                                  "type": "number"
                                                              },
                                                              "imap_user": {
                                                                  "type": "string"
                                                              },
                                                              "imap_encryption": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "tls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "ssl"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "starttls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "default"
                                                                          ]
                                                                      }
                                                                  ]
                                                              },
                                                              "smtp_host": {
                                                                  "type": "string"
                                                              },
                                                              "smtp_port": {
                                                                  "type": "number"
                                                              },
                                                              "smtp_user": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "imap_host",
                                                              "imap_port",
                                                              "imap_user",
                                                              "smtp_host",
                                                              "smtp_port",
                                                              "smtp_user"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "mail"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Google",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "GOOGLE_OAUTH"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "mail": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "mail"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "ICloud",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "ICLOUD"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "mail": {
                                                          "type": "object",
                                                          "properties": {
                                                              "imap_host": {
                                                                  "type": "string"
                                                              },
                                                              "imap_port": {
                                                                  "type": "number"
                                                              },
                                                              "imap_user": {
                                                                  "type": "string"
                                                              },
                                                              "imap_encryption": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "tls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "ssl"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "starttls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "default"
                                                                          ]
                                                                      }
                                                                  ]
                                                              },
                                                              "smtp_host": {
                                                                  "type": "string"
                                                              },
                                                              "smtp_port": {
                                                                  "type": "number"
                                                              },
                                                              "smtp_user": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "imap_host",
                                                              "imap_port",
                                                              "imap_user",
                                                              "smtp_host",
                                                              "smtp_port",
                                                              "smtp_user"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "mail"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Outlook",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "OUTLOOK"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "mail": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "mail"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Google Calendar",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "GOOGLE_CALENDAR"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "calendar": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "calendar"
                                                  ]
                                              },
                                              "sync_token": {
                                                  "type": "string"
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Whatsapp",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "WHATSAPP"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "phone_number": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "phone_number"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Linkedin",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "LINKEDIN"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              },
                                                              "premiumContractId": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string"
                                                                      },
                                                                      {
                                                                          "nullable": true
                                                                      }
                                                                  ]
                                                              },
                                                              "premiumFeatures": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "recruiter"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "sales_navigator"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "premium"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username",
                                                              "premiumContractId"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Slack",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "SLACK"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "url": {
                                                                  "type": "string"
                                                              },
                                                              "user": {
                                                                  "type": "string"
                                                              },
                                                              "user_id": {
                                                                  "type": "string"
                                                              },
                                                              "team": {
                                                                  "type": "string"
                                                              },
                                                              "team_id": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "url",
                                                              "user",
                                                              "user_id",
                                                              "team",
                                                              "team_id"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Twitter",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TWITTER"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Exchange",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "EXCHANGE"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "mail": {
                                                          "type": "object",
                                                          "properties": {
                                                              "imap_host": {
                                                                  "type": "string"
                                                              },
                                                              "imap_port": {
                                                                  "type": "number"
                                                              },
                                                              "imap_user": {
                                                                  "type": "string"
                                                              },
                                                              "imap_encryption": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "tls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "ssl"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "starttls"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "default"
                                                                          ]
                                                                      }
                                                                  ]
                                                              },
                                                              "smtp_host": {
                                                                  "type": "string"
                                                              },
                                                              "smtp_port": {
                                                                  "type": "number"
                                                              },
                                                              "smtp_user": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "imap_host",
                                                              "imap_port",
                                                              "imap_user",
                                                              "smtp_host",
                                                              "smtp_port",
                                                              "smtp_user"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "mail"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Telegram",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TELEGRAM"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "user_id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "user_id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Instagram",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "INSTAGRAM"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      },
                                      {
                                          "title": "Messenger",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Account"
                                                  ]
                                              },
                                              "type": {
                                                  "type": "string",
                                                  "enum": [
                                                      "MESSENGER"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "im": {
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "username": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "username"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "im"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "created_at": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "current_signature": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "signatures": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "content": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "title",
                                                          "content"
                                                      ]
                                                  }
                                              },
                                              "groups": {
                                                  "type": "array",
                                                  "items": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "sources": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "status": {
                                                              "title": "AccountSourceServiceStatus",
                                                              "anyOf": [
                                                                  {
                                                                      "title": "OK",
                                                                      "description": "The Service is running normally.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "STOPPED",
                                                                      "description": "The Service has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "STOPPED"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "ERROR",
                                                                      "description": "The Service has encountered an unspecified error and has been stopped.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ERROR"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CREDENTIALS",
                                                                      "description": "Credentials needs to be refreshed for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CREDENTIALS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "PERMISSIONS",
                                                                      "description": "Some permissions are missing on the host Device for the Service to be able to run.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "PERMISSIONS"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "title": "CONNECTING",
                                                                      "description": "The Service is connecting.",
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CONNECTING"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "status"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "type",
                                              "connection_params",
                                              "id",
                                              "name",
                                              "created_at",
                                              "groups",
                                              "sources"
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "m_reconnectAccount",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "// Linkedin example\nimport { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst provider = \"LINKEDIN\"\nconst username = \"your Linkedin username\"\nconst password = \"your Linkedin password\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.reconnect({\n\t\taccount_id,\n\t\tprovider,\n\t\tusername,\n\t\tpassword,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Reconnect an account",
              "description": "Reconnect an account previously linked to Unipile that has been disconnected.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the account to reconnect.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "description": "The parameters required to perform the authentication depend on the type of account you are trying to connect.",
                  "content": {
                      "application/json": {
                          "schema": {
                              "anyOf": [
                                  {
                                      "title": "Linkedin",
                                      "description": "There is two different ways to authenticate a Linkedin account. Each way can benefit from some proxy options.",
                                      "anyOf": [
                                          {
                                              "title": "Basic authentication",
                                              "description": "Authenticate using your username and password",
                                              "type": "object",
                                              "properties": {
                                                  "disabled_features": {
                                                      "description": "An array of features that should be disabled for this account.",
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "linkedin_recruiter",
                                                              "linkedin_sales_navigator",
                                                              "linkedin_organizations_mailboxes"
                                                          ]
                                                      }
                                                  },
                                                  "sync_limit": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "provider": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LINKEDIN"
                                                      ]
                                                  },
                                                  "proxy": {
                                                      "type": "object",
                                                      "properties": {
                                                          "protocol": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "https",
                                                                  "http",
                                                                  "socks5"
                                                              ]
                                                          },
                                                          "port": {
                                                              "type": "number"
                                                          },
                                                          "host": {
                                                              "type": "string"
                                                          },
                                                          "username": {
                                                              "description": "Optional username for proxy’s authentication.",
                                                              "type": "string"
                                                          },
                                                          "password": {
                                                              "description": "Optional password for proxy’s authentication.",
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "port",
                                                          "host"
                                                      ]
                                                  },
                                                  "user_agent": {
                                                      "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                                      "type": "string"
                                                  },
                                                  "recruiter_contract_id": {
                                                      "description": "The contract that should be used with Linkedin Recruiter.",
                                                      "type": "string"
                                                  },
                                                  "username": {
                                                      "description": "Should be either an email address or a phone number.",
                                                      "type": "string"
                                                  },
                                                  "password": {
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "provider",
                                                  "username",
                                                  "password"
                                              ]
                                          },
                                          {
                                              "title": "Cookie authentication",
                                              "description": "Authenticate using cookies",
                                              "type": "object",
                                              "properties": {
                                                  "disabled_features": {
                                                      "description": "An array of features that should be disabled for this account.",
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "linkedin_recruiter",
                                                              "linkedin_sales_navigator",
                                                              "linkedin_organizations_mailboxes"
                                                          ]
                                                      }
                                                  },
                                                  "sync_limit": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "provider": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LINKEDIN"
                                                      ]
                                                  },
                                                  "proxy": {
                                                      "type": "object",
                                                      "properties": {
                                                          "protocol": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "https",
                                                                  "http",
                                                                  "socks5"
                                                              ]
                                                          },
                                                          "port": {
                                                              "type": "number"
                                                          },
                                                          "host": {
                                                              "type": "string"
                                                          },
                                                          "username": {
                                                              "description": "Optional username for proxy’s authentication.",
                                                              "type": "string"
                                                          },
                                                          "password": {
                                                              "description": "Optional password for proxy’s authentication.",
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "port",
                                                          "host"
                                                      ]
                                                  },
                                                  "user_agent": {
                                                      "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                                      "type": "string"
                                                  },
                                                  "recruiter_contract_id": {
                                                      "description": "The contract that should be used with Linkedin Recruiter.",
                                                      "type": "string"
                                                  },
                                                  "access_token": {
                                                      "description": "Linkedin access token, which is to be found under the key \"li_at\".",
                                                      "type": "string"
                                                  },
                                                  "premium_token": {
                                                      "description": "Linkedin Recruiter/Sales Navigator authentication cookie, which is to be found under the key \"li_a\". It should be used if you need to be logged to an existing session. It not provided, a new session will be started.",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "provider",
                                                  "access_token"
                                              ]
                                          }
                                      ]
                                  },
                                  {
                                      "title": "Whatsapp",
                                      "description": "You just need to set the provider parameter to \"WHATSAPP\" to begin the authentication. In response, you will receive a string which needs to be converted to a QR code and scanned to complete the authentication.",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "WHATSAPP"
                                              ]
                                          }
                                      },
                                      "required": [
                                          "provider"
                                      ]
                                  },
                                  {
                                      "title": "Instagram",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                              "type": "object",
                                              "properties": {
                                                  "chats": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  },
                                                  "messages": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  }
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "INSTAGRAM"
                                              ]
                                          },
                                          "username": {
                                              "description": "Your Instagram username.",
                                              "type": "string"
                                          },
                                          "password": {
                                              "description": "Your Instagram password.",
                                              "type": "string"
                                          },
                                          "user_agent": {
                                              "description": "If encountering disconnection issues, enter the exact user agent of the browser on which the account has been connected. You can easily retrieve it in the browser's console with this command : \"console.log(navigator.userAgent)\"",
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "password"
                                      ]
                                  },
                                  {
                                      "title": "Messenger",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                              "type": "object",
                                              "properties": {
                                                  "chats": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  },
                                                  "messages": {
                                                      "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                      "anyOf": [
                                                          {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          {
                                                              "minimum": 0,
                                                              "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                              "type": "number"
                                                          }
                                                      ]
                                                  }
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "MESSENGER"
                                              ]
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "password": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "password"
                                      ]
                                  },
                                  {
                                      "title": "IMAP",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "MAIL"
                                              ]
                                          },
                                          "imap_user": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "smtp_user": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "imap_password": {
                                              "type": "string"
                                          },
                                          "smtp_password": {
                                              "type": "string"
                                          },
                                          "imap_host": {
                                              "type": "string"
                                          },
                                          "imap_port": {
                                              "type": "number"
                                          },
                                          "smtp_host": {
                                              "type": "string"
                                          },
                                          "smtp_port": {
                                              "type": "number"
                                          },
                                          "imap_encryption": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "imap_user",
                                          "smtp_user",
                                          "imap_password",
                                          "smtp_password",
                                          "imap_host",
                                          "imap_port",
                                          "smtp_host",
                                          "smtp_port",
                                          "imap_encryption"
                                      ]
                                  },
                                  {
                                      "title": "Gmail",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "GOOGLE_OAUTH"
                                              ]
                                          },
                                          "refresh_token": {
                                              "type": "string"
                                          },
                                          "access_token": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "refresh_token",
                                          "access_token"
                                      ]
                                  },
                                  {
                                      "title": "Telegram",
                                      "description": "You just need to set the provider parameter to \"TELEGRAM\" to begin the authentication. In response, you will receive a string which needs to be converted to a QR code and scanned to complete the authentication.",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "TELEGRAM"
                                              ]
                                          }
                                      },
                                      "required": [
                                          "provider"
                                      ]
                                  },
                                  {
                                      "title": "Outlook",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "sync_limit": {
                                              "type": "string",
                                              "enum": [
                                                  "NO_HISTORY_SYNC"
                                              ]
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "OUTLOOK"
                                              ]
                                          },
                                          "refresh_token": {
                                              "type": "string"
                                          },
                                          "access_token": {
                                              "type": "string"
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "id": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "refresh_token",
                                          "access_token",
                                          "username",
                                          "id"
                                      ]
                                  },
                                  {
                                      "title": "Twitter",
                                      "type": "object",
                                      "properties": {
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled for this account.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "provider": {
                                              "type": "string",
                                              "enum": [
                                                  "TWITTER"
                                              ]
                                          },
                                          "username": {
                                              "type": "string"
                                          },
                                          "email": {
                                              "format": "emailLike",
                                              "type": "string"
                                          },
                                          "password": {
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "provider",
                                          "username",
                                          "email",
                                          "password"
                                      ]
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. The authentication succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountReconnected"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id"
                                  ]
                              }
                          }
                      }
                  },
                  "202": {
                      "description": "Accepted. The authentication request succeeded but some checkpoint needs to be solved to complete it.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Checkpoint"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "checkpoint": {
                                          "anyOf": [
                                              {
                                                  "title": "QR code",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string",
                                                          "enum": [
                                                              "QRCODE"
                                                          ]
                                                      },
                                                      "qrcode": {
                                                          "description": "This string needs to be converted into a QR code and scanned to complete the authentication.",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "qrcode"
                                                  ]
                                              },
                                              {
                                                  "title": "2FA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "2FA"
                                                          ]
                                                      },
                                                      "source": {
                                                          "anyOf": [
                                                              {
                                                                  "description": "The code has been sent via SMS.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "SMS"
                                                                  ]
                                                              },
                                                              {
                                                                  "description": "The code is available on your authentication app.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "APP"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "OTP",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "OTP"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "PHONE_REGISTER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a mobile phone number to receive a 2FA code. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "PHONE_REGISTER"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "IN_APP_VALIDATION",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to perform an action in the provider’s app to solve this checkpoint.",
                                                          "type": "string",
                                                          "enum": [
                                                              "IN_APP_VALIDATION"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CAPTCHA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "The captcha could not be solved by our automatized services.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CAPTCHA"
                                                          ]
                                                      },
                                                      "public_key": {
                                                          "description": "The public key of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      },
                                                      "data": {
                                                          "description": "The data payload of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CONTRACT_CHOOSER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "Gives options to pick the contract you need Recruiter to be connected to.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CONTRACT_CHOOSER"
                                                          ]
                                                      },
                                                      "contract_options": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name"
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "contract_options"
                                                  ]
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id",
                                      "checkpoint"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n## Unauthorized\n### Invalid credentials\nThe provided credentials are invalid.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "AccountsInvalidCredentialsResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_credentials"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "\n## Forbidden\n### Account restricted\nAccess to this account has been restricted by the provider.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "407": {
                      "description": "\n## Proxy Authentication Required\n### Proxy authentication error\nPlease verify your proxy credentials and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ProxyAuthRequiredResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_auth_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              407
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "408": {
                      "description": "\n## Request Timeout\n### Request timed out\nRequest failed since the expected behaviour didn't happen in allocated time.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "RequestTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              408
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "425": {
                      "description": "\n## Too Early\n### Authentication in progress\nCannot start a new intent while another is still in progress.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "TooEarlyResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/auth_in_progress"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              425
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "502": {
                      "description": "\n## Bad Gateway\n### Proxy error\nProvided proxy could not establish communication.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              502
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "delete": {
              "operationId": "m_deleteAccount",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.delete(account_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Delete an account",
              "description": "Unlink the given account to Unipile.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id account to be deleted.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. The account deletion succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountDeleted"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/accounts/{account_id}/sync": {
          "get": {
              "operationId": "m_resyncAccount",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.getOne(account_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Resynchronize account messaging data",
              "description": "This route can be used both to initiate a sync process (from scratch of within a specific time span) and to monitor its status via regular polling. Supported providers : Linkedin.",
              "parameters": [
                  {
                      "name": "linkedin_product",
                      "required": false,
                      "in": "query",
                      "description": "The Linkedin messaging feature to synchronize. Leave blank to process all connected features.",
                      "schema": {
                          "type": "string",
                          "enum": [
                              "classic",
                              "recruiter",
                              "sales_navigator"
                          ]
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "description": "The end of the time span (farthest Epoch time in ms).",
                      "schema": {
                          "type": "number"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "description": "The start of the time span (closest Epoch time in ms).",
                      "schema": {
                          "type": "number"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the account to retrieve.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountResync"
                                          ]
                                      },
                                      "status": {
                                          "description": "The status of the synchronization. You can setup a regular polling on the same route to get updates on its status. A new request after a SYNC_DONE or SYNC_ERROR response will start a fresh sync.",
                                          "type": "string",
                                          "enum": [
                                              "SYNC_STARTED",
                                              "SYNC_RUNNING",
                                              "SYNC_DONE",
                                              "SYNC_ERROR"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "\n          ## Forbidden\n          ### Feature not subscribed\n          The requested feature has either not been subscribed or not been authenticated properly.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/accounts/checkpoint": {
          "post": {
              "operationId": "m_solveCheckpoint",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "// Linkedin example\nimport { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst provider = \"LINKEDIN\"\nconst code = \"2FA/OTP code\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.solveCodeCheckpoint({\n\t\taccount_id,\n\t\tprovider,\n\t\tcode,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Solve a code checkpoint",
              "description": "Allows you to provide a code which will solve a checkpoint encountered during a native authentication. A checkpoint is a security step added by a provider which needs to be solved to complete the authentication. Checkpoints that require a code are 2FA (two-factor authentication) and OTP (one-time password). Depending on the way you have configured the account you are trying to authenticate, you can get your code from various ways such as a mail, a SMS or from a two-factor authentication app.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "Checkpoint code is required to pass authentication (2FA, OTP...)",
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "title": "UniqueId",
                                      "description": "A unique identifier.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "code": {
                                      "minLength": 1,
                                      "description": "The code to solve the checkpoint. If the code is a phone number, it should be preceded by the international dialling code in brackets (e.g. (+33)0612345678 for France).",
                                      "type": "string"
                                  },
                                  "provider": {
                                      "type": "string",
                                      "enum": [
                                          "LINKEDIN",
                                          "INSTAGRAM",
                                          "TWITTER",
                                          "MESSENGER"
                                      ]
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "code",
                                  "provider"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. The code is valid and the authentication is completed.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountCreated"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id"
                                  ]
                              }
                          }
                      }
                  },
                  "202": {
                      "description": "Accepted. The code is valid but more operations are required to complete the authentication.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Checkpoint"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "checkpoint": {
                                          "anyOf": [
                                              {
                                                  "title": "QR code",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "type": "string",
                                                          "enum": [
                                                              "QRCODE"
                                                          ]
                                                      },
                                                      "qrcode": {
                                                          "description": "This string needs to be converted into a QR code and scanned to complete the authentication.",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "qrcode"
                                                  ]
                                              },
                                              {
                                                  "title": "2FA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "2FA"
                                                          ]
                                                      },
                                                      "source": {
                                                          "anyOf": [
                                                              {
                                                                  "description": "The code has been sent via SMS.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "SMS"
                                                                  ]
                                                              },
                                                              {
                                                                  "description": "The code is available on your authentication app.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "APP"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "OTP",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a code to solve this checkpoint. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "OTP"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "PHONE_REGISTER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to provide a mobile phone number to receive a 2FA code. You can use the route \"Solve a code checkpoint\" to do it.",
                                                          "type": "string",
                                                          "enum": [
                                                              "PHONE_REGISTER"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "IN_APP_VALIDATION",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "You need to perform an action in the provider’s app to solve this checkpoint.",
                                                          "type": "string",
                                                          "enum": [
                                                              "IN_APP_VALIDATION"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CAPTCHA",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "The captcha could not be solved by our automatized services.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CAPTCHA"
                                                          ]
                                                      },
                                                      "public_key": {
                                                          "description": "The public key of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      },
                                                      "data": {
                                                          "description": "The data payload of the provider for on-device resolution (Arkose Labs captcha).",
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "type"
                                                  ]
                                              },
                                              {
                                                  "title": "CONTRACT_CHOOSER",
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "description": "Gives options to pick the contract you need Recruiter to be connected to.",
                                                          "type": "string",
                                                          "enum": [
                                                              "CONTRACT_CHOOSER"
                                                          ]
                                                      },
                                                      "contract_options": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name"
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "contract_options"
                                                  ]
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id",
                                      "checkpoint"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n## Unauthorized\n### Invalid checkpoint solution\nThe checkpoint resolution did not pass successfully. Please retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "AccountsInvalidCheckpointResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_checkpoint_solution"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "\n## Forbidden\n### Account restricted\nAccess to this account has been restricted by the provider.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "407": {
                      "description": "\n## Proxy Authentication Required\n### Proxy authentication error\nPlease verify your proxy credentials and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ProxyAuthRequiredResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_auth_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              407
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "408": {
                      "description": "\n## Request Timeout\n### Request timed out\nRequest failed since the expected behaviour didn't happen in allocated time.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "RequestTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              408
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "502": {
                      "description": "\n## Bad Gateway\n### Proxy error\nProvided proxy could not establish communication.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/proxy_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              502
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/accounts/checkpoint/resend": {
          "post": {
              "operationId": "m_resendCheckpoint",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "// Linkedin example\nimport { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst provider = \"LINKEDIN\"\nconst code = \"2FA/OTP code\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.solveCodeCheckpoint({\n\t\taccount_id,\n\t\tprovider,\n\t\tcode,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Resend checkpoint notification",
              "description": "Might it be 2FA, OTP or In-app Validation, this route makes you able on certain providers to resend the notification.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "title": "UniqueId",
                                      "description": "A unique identifier.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "provider": {
                                      "type": "string",
                                      "enum": [
                                          "LINKEDIN",
                                          "INSTAGRAM"
                                      ]
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "provider"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "CheckpointResend"
                                          ]
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "success": {
                                          "type": "boolean"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "account_id",
                                      "success"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n## Not Implemented\n### Missing feature\nRequested feature is planned but has not been implemented yet.\nEvent edition not supported",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/accounts/{id}/restart": {
          "post": {
              "operationId": "m_restartAccount",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "// Linkedin example\nimport { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst provider = \"LINKEDIN\"\nconst username = \"your Linkedin username\"\nconst password = \"your Linkedin password\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.reconnect({\n\t\taccount_id,\n\t\tprovider,\n\t\tusername,\n\t\tpassword,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Restart an account",
              "description": "Restart the sources of a frozen account.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the account to restart.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. The account sources have been restarted.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "AccountRestarted",
                                              "AccountFailedToRestart"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.\n\n### api.Error.BadRequest.invalid_invitation_id.title - Type: \"errors/invalid_invitation_id\"\napi.Error.BadRequest.invalid_invitation_id.detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/hosted/accounts/link": {
          "post": {
              "operationId": "U_requestLink",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst type = \"create\"\nconst providers = \"*\"\nconst api_url = \"url of your Unipile server\"\nconst expiresOn = \"a datetime (YYYY-MM-DDTHH:MM:SS.sssZ)\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.account.createHostedAuthLink({\n\t\ttype,\n\t\tproviders,\n\t\tapi_url,\n\t\texpiresOn,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Connect an account (hosted authentication)",
              "description": "Create a url which redirect to Unipile's hosted authentication to connect or reconnect an account.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "anyOf": [
                                  {
                                      "type": "object",
                                      "properties": {
                                          "expiresOn": {
                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                              "example": "2025-12-31T23:59:59.999Z",
                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                          },
                                          "name": {
                                              "minLength": 1,
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "success_redirect_url": {
                                              "description": "A url where you might want to redirect the user in case of a successful authentication."
                                          },
                                          "failure_redirect_url": {
                                              "description": "A url where you might want to redirect the user in case of a failed authentication."
                                          },
                                          "bypass_success_screen": {
                                              "description": "Whether to bypass the hosted auth success screen before accessing the success_redirect_url.",
                                              "type": "boolean"
                                          },
                                          "notify_url": {
                                              "description": "A url where you can be notified about events related to the authentication process."
                                          },
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled in this account. Accepted values : linkedin_recruiter | linkedin_sales_navigator | linkedin_organizations_mailboxes.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "disabled_options": {
                                              "description": "An array of options that should be disabled in hosted auth interface. Accepted values : proxy | cookie_auth | credentials_auth | sync_limit.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "proxy",
                                                      "cookie_auth",
                                                      "credentials_auth",
                                                      "sync_limit"
                                                  ]
                                              }
                                          },
                                          "proxy": {
                                              "type": "object",
                                              "properties": {
                                                  "protocol": {
                                                      "type": "string",
                                                      "enum": [
                                                          "https",
                                                          "http",
                                                          "socks5"
                                                      ]
                                                  },
                                                  "port": {
                                                      "type": "number"
                                                  },
                                                  "host": {
                                                      "type": "string"
                                                  },
                                                  "username": {
                                                      "description": "Optional username for proxy’s authentication.",
                                                      "type": "string"
                                                  },
                                                  "password": {
                                                      "description": "Optional password for proxy’s authentication.",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "port",
                                                  "host"
                                              ]
                                          },
                                          "api_url": {
                                              "description": "The url of your Unipile server  : https://{subdomain}.unipile.com:{port}"
                                          },
                                          "sync_limit": {
                                              "type": "object",
                                              "properties": {
                                                  "MAILING": {
                                                      "type": "string",
                                                      "enum": [
                                                          "NO_HISTORY_SYNC"
                                                      ]
                                                  },
                                                  "MESSAGING": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  }
                                              }
                                          },
                                          "type": {
                                              "description": "A litteral value to choose between a connection or a reconnection.",
                                              "type": "string",
                                              "enum": [
                                                  "create"
                                              ]
                                          },
                                          "providers": {
                                              "description": "The providers for whom you want to propose to connect an account.",
                                              "anyOf": [
                                                  {
                                                      "title": "Any provider",
                                                      "description": "Data type: string",
                                                      "type": "string",
                                                      "enum": [
                                                          "*"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Any mailing provider",
                                                      "description": "Data type: string",
                                                      "type": "string",
                                                      "enum": [
                                                          "*:MAILING"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Any messaging provider",
                                                      "description": "Data type: string",
                                                      "type": "string",
                                                      "enum": [
                                                          "*:MESSAGING"
                                                      ]
                                                  },
                                                  {
                                                      "title": "One or more providers",
                                                      "description": "Data type: Array of strings. Accepted values: LINKEDIN | WHATSAPP | INSTAGRAM | MESSENGER | TELEGRAM | GOOGLE | OUTLOOK | MAIL | TWITTER",
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "LINKEDIN",
                                                              "WHATSAPP",
                                                              "INSTAGRAM",
                                                              "MESSENGER",
                                                              "IMAP",
                                                              "TELEGRAM",
                                                              "GOOGLE",
                                                              "OUTLOOK",
                                                              "TWITTER",
                                                              "MAIL"
                                                          ]
                                                      }
                                                  }
                                              ]
                                          }
                                      },
                                      "required": [
                                          "expiresOn",
                                          "api_url",
                                          "type",
                                          "providers"
                                      ],
                                      "title": "Connection link"
                                  },
                                  {
                                      "type": "object",
                                      "properties": {
                                          "expiresOn": {
                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                              "example": "2025-12-31T23:59:59.999Z",
                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                          },
                                          "name": {
                                              "minLength": 1,
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "success_redirect_url": {
                                              "description": "A url where you might want to redirect the user in case of a successful authentication."
                                          },
                                          "failure_redirect_url": {
                                              "description": "A url where you might want to redirect the user in case of a failed authentication."
                                          },
                                          "bypass_success_screen": {
                                              "description": "Whether to bypass the hosted auth success screen before accessing the success_redirect_url.",
                                              "type": "boolean"
                                          },
                                          "notify_url": {
                                              "description": "A url where you can be notified about events related to the authentication process."
                                          },
                                          "disabled_features": {
                                              "description": "An array of features that should be disabled in this account. Accepted values : linkedin_recruiter | linkedin_sales_navigator | linkedin_organizations_mailboxes.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_recruiter",
                                                      "linkedin_sales_navigator",
                                                      "linkedin_organizations_mailboxes"
                                                  ]
                                              }
                                          },
                                          "disabled_options": {
                                              "description": "An array of options that should be disabled in hosted auth interface. Accepted values : proxy | cookie_auth | credentials_auth | sync_limit.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "proxy",
                                                      "cookie_auth",
                                                      "credentials_auth",
                                                      "sync_limit"
                                                  ]
                                              }
                                          },
                                          "proxy": {
                                              "type": "object",
                                              "properties": {
                                                  "protocol": {
                                                      "type": "string",
                                                      "enum": [
                                                          "https",
                                                          "http",
                                                          "socks5"
                                                      ]
                                                  },
                                                  "port": {
                                                      "type": "number"
                                                  },
                                                  "host": {
                                                      "type": "string"
                                                  },
                                                  "username": {
                                                      "description": "Optional username for proxy’s authentication.",
                                                      "type": "string"
                                                  },
                                                  "password": {
                                                      "description": "Optional password for proxy’s authentication.",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "port",
                                                  "host"
                                              ]
                                          },
                                          "api_url": {
                                              "description": "The url of your Unipile server  : https://{subdomain}.unipile.com:{port}"
                                          },
                                          "sync_limit": {
                                              "type": "object",
                                              "properties": {
                                                  "MAILING": {
                                                      "type": "string",
                                                      "enum": [
                                                          "NO_HISTORY_SYNC"
                                                      ]
                                                  },
                                                  "MESSAGING": {
                                                      "description": "Set a sync limit either for chats, messages or both. Chats limit will apply to each inbox, whereas messages limit will apply to each chat. No value will not apply any limit (default behaviour). Providers partial support.",
                                                      "type": "object",
                                                      "properties": {
                                                          "chats": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          },
                                                          "messages": {
                                                              "description": "Either a UTC Datetime to start sync from, or a quantity of data.",
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "minimum": 0,
                                                                      "description": "The quantity of data that should be synced from data history. 0 will not sync history.",
                                                                      "type": "number"
                                                                  }
                                                              ]
                                                          }
                                                      }
                                                  }
                                              }
                                          },
                                          "type": {
                                              "description": "A litteral value to choose between a connection or a reconnection.",
                                              "type": "string",
                                              "enum": [
                                                  "reconnect"
                                              ]
                                          },
                                          "reconnect_account": {
                                              "description": "The id of the account to reconnect.",
                                              "minLength": 1,
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "expiresOn",
                                          "api_url",
                                          "type",
                                          "reconnect_account"
                                      ],
                                      "title": "Reconnection link"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "HostedAuthUrl"
                                          ]
                                      },
                                      "url": {
                                          "description": "A url redirecting to Unipile's hosted authentication for account connection or reconnection.",
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "url"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "## Bad Request\n\n### Invalid parameters - Type: \"errors/invalid_parameters\"\nOne or more request parameters are invalid or missing.\n\n### Missing parameters - Type: \"errors/missing_parameters\"\nOne or more request parameters are missing.\n\n### Invalid parameters - Type: \"errors/invalid_request\"\nOne or a combination of request parameters are invalid.\n\n### Malformed request - Type: \"errors/malformed_request\"\nThe given request has been rejected by the provider.\n\n### Too many characters - Type: \"errors/too_many_characters\"\nThe provided content exceeds the character limit.\n\n### Unescaped characters - Type: \"errors/unescaped_characters\"\nThe request path contains unescaped characters.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Accounts"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/emails": {
          "get": {
              "operationId": "c_listMails",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.getAll()\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all emails",
              "description": "Returns a list of emails.",
              "parameters": [
                  {
                      "name": "meta_only",
                      "required": false,
                      "in": "query",
                      "description": "Speed up the response by only returning the email metadata, excluding the body and attachments metadata.",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "include_headers",
                      "required": false,
                      "in": "query",
                      "description": "Include the email headers in the response. `meta_only` must be false.",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "any_email",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items sent to or received from a comma-separated list of email addresses.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "to",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain recipient, either in the to, cc or bcc field.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "from",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain sender.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "folder",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain folder.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "role",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain role.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "A filter to target items related to a certain account.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo List of Emails.",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "EmailList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "title": "Mail reference",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Email"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "kind": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "0_ref"
                                                              ]
                                                          },
                                                          "account_id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "type": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "MAIL"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ICLOUD"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUTLOOK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "EXCHANGE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE_OAUTH"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "date": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "role": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "inbox"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "sent"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "archive"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "drafts"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "trash"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "spam"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "all"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "important"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "starred"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unknown"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "folders": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "folderIds": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "read_date": {
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "message_id": {
                                                              "type": "string"
                                                          },
                                                          "provider_id": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "id",
                                                          "kind",
                                                          "account_id",
                                                          "type",
                                                          "date",
                                                          "role",
                                                          "folders",
                                                          "folderIds",
                                                          "message_id",
                                                          "provider_id"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Mail metas",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Email"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "account_id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "type": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "MAIL"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ICLOUD"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUTLOOK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "EXCHANGE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE_OAUTH"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "date": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "role": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "inbox"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "sent"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "archive"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "drafts"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "trash"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "spam"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "all"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "important"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "starred"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unknown"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "folders": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "folderIds": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "read_date": {
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "message_id": {
                                                              "type": "string"
                                                          },
                                                          "provider_id": {
                                                              "type": "string"
                                                          },
                                                          "kind": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "1_meta"
                                                              ]
                                                          },
                                                          "body_plain": {
                                                              "type": "string",
                                                              "enum": [
                                                                  ""
                                                              ]
                                                          },
                                                          "body": {
                                                              "type": "string",
                                                              "enum": [
                                                                  ""
                                                              ]
                                                          },
                                                          "from_attendee": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          },
                                                          "to_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "cc_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "bcc_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "reply_to_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "subject": {
                                                              "type": "string"
                                                          },
                                                          "has_attachments": {
                                                              "type": "boolean"
                                                          },
                                                          "origin": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unipile"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "external"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "in_reply_to": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "message_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "message_id",
                                                                  "id"
                                                              ]
                                                          },
                                                          "tracking_id": {
                                                              "type": "string"
                                                          },
                                                          "thread_id": {
                                                              "type": "string"
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "name": {
                                                                          "type": "string"
                                                                      },
                                                                      "size": {
                                                                          "type": "number"
                                                                      },
                                                                      "extension": {
                                                                          "type": "string"
                                                                      },
                                                                      "mime": {
                                                                          "type": "string"
                                                                      },
                                                                      "cid": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "name",
                                                                      "size",
                                                                      "extension",
                                                                      "mime"
                                                                  ]
                                                              }
                                                          },
                                                          "parent_mail": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  },
                                                                  "account_id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "MAIL"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "GOOGLE"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "ICLOUD"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "OUTLOOK"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "EXCHANGE"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "GOOGLE_OAUTH"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  },
                                                                  "date": {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  "role": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "inbox"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "sent"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "archive"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "drafts"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "trash"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "spam"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "all"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "important"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "starred"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "unknown"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  },
                                                                  "folders": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "folderIds": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "read_date": {
                                                                      "anyOf": [
                                                                          {
                                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                              "example": "2025-12-31T23:59:59.999Z",
                                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                          },
                                                                          {
                                                                              "nullable": true
                                                                          }
                                                                      ]
                                                                  },
                                                                  "message_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "provider_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "1_meta"
                                                                      ]
                                                                  },
                                                                  "body_plain": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          ""
                                                                      ]
                                                                  },
                                                                  "body": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          ""
                                                                      ]
                                                                  },
                                                                  "from_attendee": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "display_name": {
                                                                              "type": "string"
                                                                          },
                                                                          "profile_picture": {
                                                                              "type": "string"
                                                                          },
                                                                          "identifier": {
                                                                              "type": "string"
                                                                          },
                                                                          "identifier_type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CHAT_ATTENDEE_ID",
                                                                                  "PHONE_NUMBER",
                                                                                  "EMAIL_ADDRESS",
                                                                                  "MESSENGER_ID",
                                                                                  "MESSENGER_THREAD_ID",
                                                                                  "TIKTOK_ID",
                                                                                  "TIKTOK_THREAD_ID",
                                                                                  "TWITTER_ID",
                                                                                  "TWITTER_THREAD_ID",
                                                                                  "INSTAGRAM_ID",
                                                                                  "INSTAGRAM_THREAD_ID",
                                                                                  "LINKEDIN_ID",
                                                                                  "LINKEDIN_THREAD_ID",
                                                                                  "GROUP_THREAD"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "identifier",
                                                                          "identifier_type"
                                                                      ]
                                                                  },
                                                                  "to_attendees": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "display_name": {
                                                                                  "type": "string"
                                                                              },
                                                                              "profile_picture": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier_type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CHAT_ATTENDEE_ID",
                                                                                      "PHONE_NUMBER",
                                                                                      "EMAIL_ADDRESS",
                                                                                      "MESSENGER_ID",
                                                                                      "MESSENGER_THREAD_ID",
                                                                                      "TIKTOK_ID",
                                                                                      "TIKTOK_THREAD_ID",
                                                                                      "TWITTER_ID",
                                                                                      "TWITTER_THREAD_ID",
                                                                                      "INSTAGRAM_ID",
                                                                                      "INSTAGRAM_THREAD_ID",
                                                                                      "LINKEDIN_ID",
                                                                                      "LINKEDIN_THREAD_ID",
                                                                                      "GROUP_THREAD"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "identifier",
                                                                              "identifier_type"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "cc_attendees": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "display_name": {
                                                                                  "type": "string"
                                                                              },
                                                                              "profile_picture": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier_type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CHAT_ATTENDEE_ID",
                                                                                      "PHONE_NUMBER",
                                                                                      "EMAIL_ADDRESS",
                                                                                      "MESSENGER_ID",
                                                                                      "MESSENGER_THREAD_ID",
                                                                                      "TIKTOK_ID",
                                                                                      "TIKTOK_THREAD_ID",
                                                                                      "TWITTER_ID",
                                                                                      "TWITTER_THREAD_ID",
                                                                                      "INSTAGRAM_ID",
                                                                                      "INSTAGRAM_THREAD_ID",
                                                                                      "LINKEDIN_ID",
                                                                                      "LINKEDIN_THREAD_ID",
                                                                                      "GROUP_THREAD"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "identifier",
                                                                              "identifier_type"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "bcc_attendees": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "display_name": {
                                                                                  "type": "string"
                                                                              },
                                                                              "profile_picture": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier_type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CHAT_ATTENDEE_ID",
                                                                                      "PHONE_NUMBER",
                                                                                      "EMAIL_ADDRESS",
                                                                                      "MESSENGER_ID",
                                                                                      "MESSENGER_THREAD_ID",
                                                                                      "TIKTOK_ID",
                                                                                      "TIKTOK_THREAD_ID",
                                                                                      "TWITTER_ID",
                                                                                      "TWITTER_THREAD_ID",
                                                                                      "INSTAGRAM_ID",
                                                                                      "INSTAGRAM_THREAD_ID",
                                                                                      "LINKEDIN_ID",
                                                                                      "LINKEDIN_THREAD_ID",
                                                                                      "GROUP_THREAD"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "identifier",
                                                                              "identifier_type"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "reply_to_attendees": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "display_name": {
                                                                                  "type": "string"
                                                                              },
                                                                              "profile_picture": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier": {
                                                                                  "type": "string"
                                                                              },
                                                                              "identifier_type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CHAT_ATTENDEE_ID",
                                                                                      "PHONE_NUMBER",
                                                                                      "EMAIL_ADDRESS",
                                                                                      "MESSENGER_ID",
                                                                                      "MESSENGER_THREAD_ID",
                                                                                      "TIKTOK_ID",
                                                                                      "TIKTOK_THREAD_ID",
                                                                                      "TWITTER_ID",
                                                                                      "TWITTER_THREAD_ID",
                                                                                      "INSTAGRAM_ID",
                                                                                      "INSTAGRAM_THREAD_ID",
                                                                                      "LINKEDIN_ID",
                                                                                      "LINKEDIN_THREAD_ID",
                                                                                      "GROUP_THREAD"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "identifier",
                                                                              "identifier_type"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "subject": {
                                                                      "type": "string"
                                                                  },
                                                                  "has_attachments": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "origin": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "unipile"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "external"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  },
                                                                  "in_reply_to": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "message_id": {
                                                                              "type": "string"
                                                                          },
                                                                          "id": {
                                                                              "title": "UniqueId",
                                                                              "description": "A unique identifier.",
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "message_id",
                                                                          "id"
                                                                      ]
                                                                  },
                                                                  "tracking_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "thread_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "attachments": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "name": {
                                                                                  "type": "string"
                                                                              },
                                                                              "size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "extension": {
                                                                                  "type": "string"
                                                                              },
                                                                              "mime": {
                                                                                  "type": "string"
                                                                              },
                                                                              "cid": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "name",
                                                                              "size",
                                                                              "extension",
                                                                              "mime"
                                                                          ]
                                                                      }
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "account_id",
                                                                  "type",
                                                                  "date",
                                                                  "role",
                                                                  "folders",
                                                                  "folderIds",
                                                                  "message_id",
                                                                  "provider_id",
                                                                  "kind",
                                                                  "body_plain",
                                                                  "body",
                                                                  "from_attendee",
                                                                  "subject",
                                                                  "has_attachments",
                                                                  "origin",
                                                                  "attachments"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "id",
                                                          "account_id",
                                                          "type",
                                                          "date",
                                                          "role",
                                                          "folders",
                                                          "folderIds",
                                                          "message_id",
                                                          "provider_id",
                                                          "kind",
                                                          "body_plain",
                                                          "body",
                                                          "from_attendee",
                                                          "subject",
                                                          "has_attachments",
                                                          "origin",
                                                          "attachments"
                                                      ]
                                                  },
                                                  {
                                                      "title": "Full mail",
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Email"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "account_id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "type": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "MAIL"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "ICLOUD"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUTLOOK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "EXCHANGE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "GOOGLE_OAUTH"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "date": {
                                                              "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                              "example": "2025-12-31T23:59:59.999Z",
                                                              "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                          },
                                                          "role": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "inbox"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "sent"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "archive"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "drafts"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "trash"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "spam"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "all"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "important"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "starred"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unknown"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "folders": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "folderIds": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "read_date": {
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "message_id": {
                                                              "type": "string"
                                                          },
                                                          "provider_id": {
                                                              "type": "string"
                                                          },
                                                          "from_attendee": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          },
                                                          "to_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "cc_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "bcc_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "reply_to_attendees": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "display_name": {
                                                                          "type": "string"
                                                                      },
                                                                      "profile_picture": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier": {
                                                                          "type": "string"
                                                                      },
                                                                      "identifier_type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CHAT_ATTENDEE_ID",
                                                                              "PHONE_NUMBER",
                                                                              "EMAIL_ADDRESS",
                                                                              "MESSENGER_ID",
                                                                              "MESSENGER_THREAD_ID",
                                                                              "TIKTOK_ID",
                                                                              "TIKTOK_THREAD_ID",
                                                                              "TWITTER_ID",
                                                                              "TWITTER_THREAD_ID",
                                                                              "INSTAGRAM_ID",
                                                                              "INSTAGRAM_THREAD_ID",
                                                                              "LINKEDIN_ID",
                                                                              "LINKEDIN_THREAD_ID",
                                                                              "GROUP_THREAD"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "identifier",
                                                                      "identifier_type"
                                                                  ]
                                                              }
                                                          },
                                                          "subject": {
                                                              "type": "string"
                                                          },
                                                          "has_attachments": {
                                                              "type": "boolean"
                                                          },
                                                          "origin": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unipile"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "external"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "in_reply_to": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "message_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "message_id",
                                                                  "id"
                                                              ]
                                                          },
                                                          "tracking_id": {
                                                              "type": "string"
                                                          },
                                                          "thread_id": {
                                                              "type": "string"
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "name": {
                                                                          "type": "string"
                                                                      },
                                                                      "size": {
                                                                          "type": "number"
                                                                      },
                                                                      "extension": {
                                                                          "type": "string"
                                                                      },
                                                                      "mime": {
                                                                          "type": "string"
                                                                      },
                                                                      "cid": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "name",
                                                                      "size",
                                                                      "extension",
                                                                      "mime"
                                                                  ]
                                                              }
                                                          },
                                                          "kind": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "2_full"
                                                              ]
                                                          },
                                                          "body_plain": {
                                                              "type": "string"
                                                          },
                                                          "body": {
                                                              "type": "string"
                                                          },
                                                          "headers": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "name": {
                                                                          "type": "string"
                                                                      },
                                                                      "value": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "name",
                                                                      "value"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "id",
                                                          "account_id",
                                                          "type",
                                                          "date",
                                                          "role",
                                                          "folders",
                                                          "folderIds",
                                                          "message_id",
                                                          "provider_id",
                                                          "from_attendee",
                                                          "subject",
                                                          "has_attachments",
                                                          "origin",
                                                          "attachments",
                                                          "kind",
                                                          "body_plain",
                                                          "body"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "c_sendMail",
              "summary": "Send an email",
              "description": "⚠️ Interactive documentation does not work on this route (child parameters not correctly applied in snippet), please use our ready to copy past example of this page : https://developer.unipile.com/docs/send-email",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "description": "",
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "title": "UniqueId",
                                      "description": "A unique identifier.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "from": {
                                      "type": "object",
                                      "properties": {
                                          "display_name": {
                                              "description": "The name of the attendee.",
                                              "type": "string"
                                          },
                                          "identifier": {
                                              "description": "The email address of the attendee.",
                                              "type": "string"
                                          }
                                      }
                                  },
                                  "to": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "display_name": {
                                                  "description": "The name of the attendee.",
                                                  "type": "string"
                                              },
                                              "identifier": {
                                                  "description": "The email address of the attendee.",
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "identifier"
                                          ]
                                      }
                                  },
                                  "cc": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "display_name": {
                                                  "description": "The name of the attendee.",
                                                  "type": "string"
                                              },
                                              "identifier": {
                                                  "description": "The email address of the attendee.",
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "identifier"
                                          ]
                                      }
                                  },
                                  "bcc": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "display_name": {
                                                  "description": "The name of the attendee.",
                                                  "type": "string"
                                              },
                                              "identifier": {
                                                  "description": "The email address of the attendee.",
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "identifier"
                                          ]
                                      }
                                  },
                                  "subject": {
                                      "type": "string"
                                  },
                                  "body": {
                                      "type": "string"
                                  },
                                  "reply_to": {
                                      "description": "Either the Unipile ID or the provider ID of the email to reply to.",
                                      "type": "string"
                                  },
                                  "custom_headers": {
                                      "description": "An array of custom headers to be added to the email.",
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "name": {
                                                  "description": "The header name. Must start with 'X-' or 'x-'.",
                                                  "type": "string"
                                              },
                                              "value": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "name",
                                              "value"
                                          ]
                                      }
                                  },
                                  "tracking_options": {
                                      "type": "object",
                                      "properties": {
                                          "opens": {
                                              "type": "boolean"
                                          },
                                          "links": {
                                              "type": "boolean"
                                          },
                                          "label": {
                                              "type": "string"
                                          },
                                          "custom_domain": {
                                              "type": "string"
                                          }
                                      }
                                  },
                                  "attachments": {
                                      "type": "array",
                                      "items": {
                                          "format": "binary",
                                          "type": "string"
                                      }
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "to",
                                  "body"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Email sent successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo Email has been sent.",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "EmailSent"
                                          ]
                                      },
                                      "tracking_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "tracking_id"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Parent mail not found\n          The parent mail could not be found.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/emails/{email_id}": {
          "get": {
              "operationId": "c_getMail",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst email_id = \"email id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.getOne(email_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve an email",
              "description": "Retrieve the details of an email.",
              "parameters": [
                  {
                      "name": "email_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the email to be retrieved. Either the Unipile id or the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account related to the email. Required when using the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "include_headers",
                      "required": false,
                      "in": "query",
                      "description": "Include the email headers in the response.",
                      "schema": {
                          "type": "boolean"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo Email",
                                  "anyOf": [
                                      {
                                          "title": "Mail reference",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Email"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "kind": {
                                                  "type": "string",
                                                  "enum": [
                                                      "0_ref"
                                                  ]
                                              },
                                              "account_id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "type": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "MAIL"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "ICLOUD"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "OUTLOOK"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "EXCHANGE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE_OAUTH"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "date": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "role": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "inbox"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "sent"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "archive"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "drafts"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "trash"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "spam"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "all"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "important"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "starred"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unknown"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "folders": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "folderIds": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "read_date": {
                                                  "anyOf": [
                                                      {
                                                          "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                          "example": "2025-12-31T23:59:59.999Z",
                                                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "message_id": {
                                                  "type": "string"
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "id",
                                              "kind",
                                              "account_id",
                                              "type",
                                              "date",
                                              "role",
                                              "folders",
                                              "folderIds",
                                              "message_id",
                                              "provider_id"
                                          ]
                                      },
                                      {
                                          "title": "Mail metas",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Email"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "account_id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "type": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "MAIL"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "ICLOUD"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "OUTLOOK"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "EXCHANGE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE_OAUTH"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "date": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "role": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "inbox"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "sent"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "archive"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "drafts"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "trash"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "spam"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "all"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "important"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "starred"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unknown"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "folders": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "folderIds": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "read_date": {
                                                  "anyOf": [
                                                      {
                                                          "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                          "example": "2025-12-31T23:59:59.999Z",
                                                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "message_id": {
                                                  "type": "string"
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "kind": {
                                                  "type": "string",
                                                  "enum": [
                                                      "1_meta"
                                                  ]
                                              },
                                              "body_plain": {
                                                  "type": "string",
                                                  "enum": [
                                                      ""
                                                  ]
                                              },
                                              "body": {
                                                  "type": "string",
                                                  "enum": [
                                                      ""
                                                  ]
                                              },
                                              "from_attendee": {
                                                  "type": "object",
                                                  "properties": {
                                                      "display_name": {
                                                          "type": "string"
                                                      },
                                                      "profile_picture": {
                                                          "type": "string"
                                                      },
                                                      "identifier": {
                                                          "type": "string"
                                                      },
                                                      "identifier_type": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CHAT_ATTENDEE_ID",
                                                              "PHONE_NUMBER",
                                                              "EMAIL_ADDRESS",
                                                              "MESSENGER_ID",
                                                              "MESSENGER_THREAD_ID",
                                                              "TIKTOK_ID",
                                                              "TIKTOK_THREAD_ID",
                                                              "TWITTER_ID",
                                                              "TWITTER_THREAD_ID",
                                                              "INSTAGRAM_ID",
                                                              "INSTAGRAM_THREAD_ID",
                                                              "LINKEDIN_ID",
                                                              "LINKEDIN_THREAD_ID",
                                                              "GROUP_THREAD"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "identifier",
                                                      "identifier_type"
                                                  ]
                                              },
                                              "to_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "cc_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "bcc_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "reply_to_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "subject": {
                                                  "type": "string"
                                              },
                                              "has_attachments": {
                                                  "type": "boolean"
                                              },
                                              "origin": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unipile"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "external"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "in_reply_to": {
                                                  "type": "object",
                                                  "properties": {
                                                      "message_id": {
                                                          "type": "string"
                                                      },
                                                      "id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "message_id",
                                                      "id"
                                                  ]
                                              },
                                              "tracking_id": {
                                                  "type": "string"
                                              },
                                              "thread_id": {
                                                  "type": "string"
                                              },
                                              "attachments": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "size": {
                                                              "type": "number"
                                                          },
                                                          "extension": {
                                                              "type": "string"
                                                          },
                                                          "mime": {
                                                              "type": "string"
                                                          },
                                                          "cid": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "name",
                                                          "size",
                                                          "extension",
                                                          "mime"
                                                      ]
                                                  }
                                              },
                                              "parent_mail": {
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "account_id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "type": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "MAIL"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "GOOGLE"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "ICLOUD"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "OUTLOOK"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "EXCHANGE"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "GOOGLE_OAUTH"
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "date": {
                                                          "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                          "example": "2025-12-31T23:59:59.999Z",
                                                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                      },
                                                      "role": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "inbox"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "sent"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "archive"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "drafts"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "trash"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "spam"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "all"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "important"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "starred"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "unknown"
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "folders": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "folderIds": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "read_date": {
                                                          "anyOf": [
                                                              {
                                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                  "example": "2025-12-31T23:59:59.999Z",
                                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                              },
                                                              {
                                                                  "nullable": true
                                                              }
                                                          ]
                                                      },
                                                      "message_id": {
                                                          "type": "string"
                                                      },
                                                      "provider_id": {
                                                          "type": "string"
                                                      },
                                                      "kind": {
                                                          "type": "string",
                                                          "enum": [
                                                              "1_meta"
                                                          ]
                                                      },
                                                      "body_plain": {
                                                          "type": "string",
                                                          "enum": [
                                                              ""
                                                          ]
                                                      },
                                                      "body": {
                                                          "type": "string",
                                                          "enum": [
                                                              ""
                                                          ]
                                                      },
                                                      "from_attendee": {
                                                          "type": "object",
                                                          "properties": {
                                                              "display_name": {
                                                                  "type": "string"
                                                              },
                                                              "profile_picture": {
                                                                  "type": "string"
                                                              },
                                                              "identifier": {
                                                                  "type": "string"
                                                              },
                                                              "identifier_type": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CHAT_ATTENDEE_ID",
                                                                      "PHONE_NUMBER",
                                                                      "EMAIL_ADDRESS",
                                                                      "MESSENGER_ID",
                                                                      "MESSENGER_THREAD_ID",
                                                                      "TIKTOK_ID",
                                                                      "TIKTOK_THREAD_ID",
                                                                      "TWITTER_ID",
                                                                      "TWITTER_THREAD_ID",
                                                                      "INSTAGRAM_ID",
                                                                      "INSTAGRAM_THREAD_ID",
                                                                      "LINKEDIN_ID",
                                                                      "LINKEDIN_THREAD_ID",
                                                                      "GROUP_THREAD"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "identifier",
                                                              "identifier_type"
                                                          ]
                                                      },
                                                      "to_attendees": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          }
                                                      },
                                                      "cc_attendees": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          }
                                                      },
                                                      "bcc_attendees": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          }
                                                      },
                                                      "reply_to_attendees": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "display_name": {
                                                                      "type": "string"
                                                                  },
                                                                  "profile_picture": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "identifier_type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "CHAT_ATTENDEE_ID",
                                                                          "PHONE_NUMBER",
                                                                          "EMAIL_ADDRESS",
                                                                          "MESSENGER_ID",
                                                                          "MESSENGER_THREAD_ID",
                                                                          "TIKTOK_ID",
                                                                          "TIKTOK_THREAD_ID",
                                                                          "TWITTER_ID",
                                                                          "TWITTER_THREAD_ID",
                                                                          "INSTAGRAM_ID",
                                                                          "INSTAGRAM_THREAD_ID",
                                                                          "LINKEDIN_ID",
                                                                          "LINKEDIN_THREAD_ID",
                                                                          "GROUP_THREAD"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "identifier",
                                                                  "identifier_type"
                                                              ]
                                                          }
                                                      },
                                                      "subject": {
                                                          "type": "string"
                                                      },
                                                      "has_attachments": {
                                                          "type": "boolean"
                                                      },
                                                      "origin": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "unipile"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "external"
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "in_reply_to": {
                                                          "type": "object",
                                                          "properties": {
                                                              "message_id": {
                                                                  "type": "string"
                                                              },
                                                              "id": {
                                                                  "title": "UniqueId",
                                                                  "description": "A unique identifier.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "message_id",
                                                              "id"
                                                          ]
                                                      },
                                                      "tracking_id": {
                                                          "type": "string"
                                                      },
                                                      "thread_id": {
                                                          "type": "string"
                                                      },
                                                      "attachments": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "size": {
                                                                      "type": "number"
                                                                  },
                                                                  "extension": {
                                                                      "type": "string"
                                                                  },
                                                                  "mime": {
                                                                      "type": "string"
                                                                  },
                                                                  "cid": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name",
                                                                  "size",
                                                                  "extension",
                                                                  "mime"
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "required": [
                                                      "id",
                                                      "account_id",
                                                      "type",
                                                      "date",
                                                      "role",
                                                      "folders",
                                                      "folderIds",
                                                      "message_id",
                                                      "provider_id",
                                                      "kind",
                                                      "body_plain",
                                                      "body",
                                                      "from_attendee",
                                                      "subject",
                                                      "has_attachments",
                                                      "origin",
                                                      "attachments"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "id",
                                              "account_id",
                                              "type",
                                              "date",
                                              "role",
                                              "folders",
                                              "folderIds",
                                              "message_id",
                                              "provider_id",
                                              "kind",
                                              "body_plain",
                                              "body",
                                              "from_attendee",
                                              "subject",
                                              "has_attachments",
                                              "origin",
                                              "attachments"
                                          ]
                                      },
                                      {
                                          "title": "Full mail",
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Email"
                                                  ]
                                              },
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "account_id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "type": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "MAIL"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "ICLOUD"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "OUTLOOK"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "EXCHANGE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GOOGLE_OAUTH"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "date": {
                                                  "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                  "example": "2025-12-31T23:59:59.999Z",
                                                  "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                              },
                                              "role": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "inbox"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "sent"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "archive"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "drafts"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "trash"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "spam"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "all"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "important"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "starred"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unknown"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "folders": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "folderIds": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "read_date": {
                                                  "anyOf": [
                                                      {
                                                          "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                          "example": "2025-12-31T23:59:59.999Z",
                                                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "message_id": {
                                                  "type": "string"
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "from_attendee": {
                                                  "type": "object",
                                                  "properties": {
                                                      "display_name": {
                                                          "type": "string"
                                                      },
                                                      "profile_picture": {
                                                          "type": "string"
                                                      },
                                                      "identifier": {
                                                          "type": "string"
                                                      },
                                                      "identifier_type": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CHAT_ATTENDEE_ID",
                                                              "PHONE_NUMBER",
                                                              "EMAIL_ADDRESS",
                                                              "MESSENGER_ID",
                                                              "MESSENGER_THREAD_ID",
                                                              "TIKTOK_ID",
                                                              "TIKTOK_THREAD_ID",
                                                              "TWITTER_ID",
                                                              "TWITTER_THREAD_ID",
                                                              "INSTAGRAM_ID",
                                                              "INSTAGRAM_THREAD_ID",
                                                              "LINKEDIN_ID",
                                                              "LINKEDIN_THREAD_ID",
                                                              "GROUP_THREAD"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "identifier",
                                                      "identifier_type"
                                                  ]
                                              },
                                              "to_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "cc_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "bcc_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "reply_to_attendees": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "profile_picture": {
                                                              "type": "string"
                                                          },
                                                          "identifier": {
                                                              "type": "string"
                                                          },
                                                          "identifier_type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CHAT_ATTENDEE_ID",
                                                                  "PHONE_NUMBER",
                                                                  "EMAIL_ADDRESS",
                                                                  "MESSENGER_ID",
                                                                  "MESSENGER_THREAD_ID",
                                                                  "TIKTOK_ID",
                                                                  "TIKTOK_THREAD_ID",
                                                                  "TWITTER_ID",
                                                                  "TWITTER_THREAD_ID",
                                                                  "INSTAGRAM_ID",
                                                                  "INSTAGRAM_THREAD_ID",
                                                                  "LINKEDIN_ID",
                                                                  "LINKEDIN_THREAD_ID",
                                                                  "GROUP_THREAD"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "identifier",
                                                          "identifier_type"
                                                      ]
                                                  }
                                              },
                                              "subject": {
                                                  "type": "string"
                                              },
                                              "has_attachments": {
                                                  "type": "boolean"
                                              },
                                              "origin": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unipile"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "external"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "in_reply_to": {
                                                  "type": "object",
                                                  "properties": {
                                                      "message_id": {
                                                          "type": "string"
                                                      },
                                                      "id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "message_id",
                                                      "id"
                                                  ]
                                              },
                                              "tracking_id": {
                                                  "type": "string"
                                              },
                                              "thread_id": {
                                                  "type": "string"
                                              },
                                              "attachments": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "size": {
                                                              "type": "number"
                                                          },
                                                          "extension": {
                                                              "type": "string"
                                                          },
                                                          "mime": {
                                                              "type": "string"
                                                          },
                                                          "cid": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "name",
                                                          "size",
                                                          "extension",
                                                          "mime"
                                                      ]
                                                  }
                                              },
                                              "kind": {
                                                  "type": "string",
                                                  "enum": [
                                                      "2_full"
                                                  ]
                                              },
                                              "body_plain": {
                                                  "type": "string"
                                              },
                                              "body": {
                                                  "type": "string"
                                              },
                                              "headers": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "value": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "name",
                                                          "value"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "object",
                                              "id",
                                              "account_id",
                                              "type",
                                              "date",
                                              "role",
                                              "folders",
                                              "folderIds",
                                              "message_id",
                                              "provider_id",
                                              "from_attendee",
                                              "subject",
                                              "has_attachments",
                                              "origin",
                                              "attachments",
                                              "kind",
                                              "body_plain",
                                              "body"
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nEmail not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "delete": {
              "operationId": "c_deleteMail",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst email_id = \"email id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.delete(email_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Delete an email",
              "description": "Delete an email by moving it to the Trash folder.",
              "parameters": [
                  {
                      "name": "email_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the email to be deleted. Either the Unipile id or the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account related to the email. Required when using the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo Email has been deleted.",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "EmailDeleted"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "\n          ## Service Unavailable\n          ### Network down\n          Network is down on server side. Please wait a moment and retry.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "put": {
              "operationId": "c_updateMail",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst email_id = \"email id\"\nconst folders = [\"archive\"]\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.update({\n\t\temail_id,\n\t\tfolders,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Update an email",
              "description": "Update an email.",
              "parameters": [
                  {
                      "name": "email_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the email to be updated. Either the Unipile id or the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account related to the email. Required when using the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "unread": {
                                      "description": "Indicates whether the email should be marked as unread.",
                                      "type": "boolean"
                                  },
                                  "folders": {
                                      "description": "The names of the folders to which the email should be moved. Outlook and IMAP accounts accept only one folder.",
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      }
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo Email has been updated.",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "EmailUpdated"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "\n          ## Service Unavailable\n          ### Network down\n          Network is down on server side. Please wait a moment and retry.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/emails/{email_id}/attachments/{attachment_id}": {
          "get": {
              "operationId": "c_getAttachment",
              "summary": "Retrieve an attachment from an email",
              "description": "Retrieve one of the attachment linked to an email.",
              "parameters": [
                  {
                      "name": "email_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the email to which the attachment is linked. Either the Unipile id or the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account related to the email. Required when using the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "attachment_id",
                      "required": true,
                      "in": "path",
                      "schema": {
                          "title": "UniqueId",
                          "description": "A unique identifier. The id of the attachment to be retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "string",
                                  "format": "binary"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nEmail or attachment not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chats": {
          "get": {
              "operationId": "T_listAllChats",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllChats()\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all chats",
              "description": "Returns a list of chats. Some optional parameters are available to filter the results.",
              "parameters": [
                  {
                      "name": "unread",
                      "required": false,
                      "in": "query",
                      "description": "Whether you want to get either unread chats only, or read chats only.",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_type",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain provider.",
                      "schema": {
                          "enum": [
                              "WHATSAPP",
                              "LINKEDIN",
                              "SLACK",
                              "TWITTER",
                              "MESSENGER",
                              "INSTAGRAM",
                              "TELEGRAM"
                          ],
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain account. Can be a comma-separated list of ids.",
                      "schema": {
                          "title": "AccountIdOrIdsParam",
                          "description": "An Unipile account id or a list of Unipile account ids separated by commas.",
                          "minLength": 1,
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Chat"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "WHATSAPP"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SLACK"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TWITTER"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "MESSENGER"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "INSTAGRAM"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TELEGRAM"
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "attendee_provider_id": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "timestamp": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "unread_count": {
                                                      "type": "number"
                                                  },
                                                  "archived": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "muted_until": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  -1
                                                              ]
                                                          },
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "read_only": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "disabledFeatures": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "reactions"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "reply"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "subject": {
                                                      "type": "string"
                                                  },
                                                  "organization_id": {
                                                      "description": "Linkedin specific ID for organization mailboxes.",
                                                      "type": "string"
                                                  },
                                                  "mailbox_id": {
                                                      "description": "Linkedin specific ID for organization mailboxes.",
                                                      "type": "string"
                                                  },
                                                  "content_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "inmail"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "sponsored"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "linkedin_offer"
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "folder": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_CLASSIC"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_RECRUITER"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_SALES_NAVIGATOR"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_ORGANIZATION"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "account_id",
                                                  "account_type",
                                                  "provider_id",
                                                  "name",
                                                  "type",
                                                  "timestamp",
                                                  "unread_count",
                                                  "archived",
                                                  "muted_until",
                                                  "read_only"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "T_startNewChat",
              "summary": "Start a new chat",
              "description": "Start a new conversation with one or more attendee. ⚠️ Interactive documentation does not work for Linkedin specific parameters (child parameters not correctly applied in snippet), the correct format is linkedin[inmail] = true, linkedin[api]...",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "title": "AccountIdParam",
                                      "description": "An Unipile account id.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "text": {
                                      "description": "The message that will start the new conversation.",
                                      "type": "string"
                                  },
                                  "attachments": {
                                      "type": "array",
                                      "items": {
                                          "format": "binary",
                                          "type": "string"
                                      }
                                  },
                                  "voice_message": {
                                      "format": "binary",
                                      "description": "For Linkedin messaging only.",
                                      "type": "string"
                                  },
                                  "attendees_ids": {
                                      "description": "One or more attendee provider_id.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      }
                                  },
                                  "subject": {
                                      "description": "An optional field to set the subject of the conversation.",
                                      "type": "string"
                                  },
                                  "linkedin": {
                                      "description": "Extra fields for Linkedin products",
                                      "anyOf": [
                                          {
                                              "description": "Standard Linkedin fields",
                                              "type": "object",
                                              "properties": {
                                                  "api": {
                                                      "description": "The Linkedin API that should be used to start chatting (relative feature must be subscribed). Default is classic.",
                                                      "type": "string",
                                                      "enum": [
                                                          "classic"
                                                      ]
                                                  },
                                                  "inmail": {
                                                      "description": "If set to true, start the new conversation with an inMail.",
                                                      "type": "boolean"
                                                  }
                                              }
                                          },
                                          {
                                              "description": "Recruiter Linkedin fields",
                                              "type": "object",
                                              "properties": {
                                                  "api": {
                                                      "description": "The Linkedin API that should be used to start chatting (relative feature must be subscribed).",
                                                      "type": "string",
                                                      "enum": [
                                                          "recruiter"
                                                      ]
                                                  },
                                                  "signature": {
                                                      "description": "The signature of the sender",
                                                      "type": "string"
                                                  },
                                                  "hiring_project_id": {
                                                      "description": "The ID of the project the chat should be started in",
                                                      "type": "string"
                                                  },
                                                  "email_address": {
                                                      "description": "The email address of the recipient in case the chat should be started with email instead of inMail",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "api"
                                              ]
                                          },
                                          {
                                              "description": "Sales Navigator Linkedin fields",
                                              "type": "object",
                                              "properties": {
                                                  "api": {
                                                      "description": "The Linkedin API that should be used to start chatting (relative features must be subscribed).",
                                                      "type": "string",
                                                      "enum": [
                                                          "sales_navigator"
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "api"
                                              ]
                                          }
                                      ]
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "attendees_ids"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. New chat created and message sent successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatStarted"
                                          ]
                                      },
                                      "chat_id": {
                                          "description": "The Unipile ID of the newly started chat.",
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "chat_id"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "415": {
                      "description": "\n          ## Unsupported Media Type\n          ### Unsupported media\n          The media has been rejected by the provider.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnsupportedMediaResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unsupported_media_type"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              415
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Recipient cannot be reached\n          The recipient appears not to be first degree connection.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chats/{chat_id}": {
          "get": {
              "operationId": "T_getChat",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getChat(chat_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve a chat",
              "description": "Retrieve the details of a chat.",
              "parameters": [
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the wanted chat.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "account_type": {
                                          "anyOf": [
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "WHATSAPP"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "LINKEDIN"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "SLACK"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "TWITTER"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "MESSENGER"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "INSTAGRAM"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "TELEGRAM"
                                                  ]
                                              }
                                          ]
                                      },
                                      "provider_id": {
                                          "type": "string"
                                      },
                                      "attendee_provider_id": {
                                          "type": "string"
                                      },
                                      "name": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "type": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      2
                                                  ]
                                              }
                                          ]
                                      },
                                      "timestamp": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "unread_count": {
                                          "type": "number"
                                      },
                                      "archived": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "muted_until": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      -1
                                                  ]
                                              },
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "read_only": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      2
                                                  ]
                                              }
                                          ]
                                      },
                                      "disabledFeatures": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "reactions"
                                                      ]
                                                  },
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "reply"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "subject": {
                                          "type": "string"
                                      },
                                      "organization_id": {
                                          "description": "Linkedin specific ID for organization mailboxes.",
                                          "type": "string"
                                      },
                                      "mailbox_id": {
                                          "description": "Linkedin specific ID for organization mailboxes.",
                                          "type": "string"
                                      },
                                      "content_type": {
                                          "anyOf": [
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "inmail"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "sponsored"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "linkedin_offer"
                                                  ]
                                              }
                                          ]
                                      },
                                      "folder": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "INBOX"
                                                      ]
                                                  },
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "INBOX_LINKEDIN_CLASSIC"
                                                      ]
                                                  },
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "INBOX_LINKEDIN_RECRUITER"
                                                      ]
                                                  },
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "INBOX_LINKEDIN_SALES_NAVIGATOR"
                                                      ]
                                                  },
                                                  {
                                                      "type": "string",
                                                      "enum": [
                                                          "INBOX_LINKEDIN_ORGANIZATION"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Chat"
                                          ]
                                      },
                                      "lastMessage": {
                                          "anyOf": [
                                              {
                                                  "type": "object",
                                                  "properties": {
                                                      "provider_id": {
                                                          "type": "string"
                                                      },
                                                      "sender_id": {
                                                          "type": "string"
                                                      },
                                                      "text": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string"
                                                              },
                                                              {
                                                                  "nullable": true
                                                              }
                                                          ]
                                                      },
                                                      "attachments": {
                                                          "type": "array",
                                                          "items": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "file_size": {
                                                                              "type": "number"
                                                                          },
                                                                          "unavailable": {
                                                                              "type": "boolean"
                                                                          },
                                                                          "mimetype": {
                                                                              "type": "string"
                                                                          },
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "url_expires_at": {
                                                                              "type": "number"
                                                                          },
                                                                          "type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "img"
                                                                              ]
                                                                          },
                                                                          "size": {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "width": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "height": {
                                                                                      "type": "number"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "width",
                                                                                  "height"
                                                                              ]
                                                                          },
                                                                          "sticker": {
                                                                              "type": "boolean"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "unavailable",
                                                                          "type",
                                                                          "size",
                                                                          "sticker"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "file_size": {
                                                                              "type": "number"
                                                                          },
                                                                          "unavailable": {
                                                                              "type": "boolean"
                                                                          },
                                                                          "mimetype": {
                                                                              "type": "string"
                                                                          },
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "url_expires_at": {
                                                                              "type": "number"
                                                                          },
                                                                          "type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "video"
                                                                              ]
                                                                          },
                                                                          "size": {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "width": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "height": {
                                                                                      "type": "number"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "width",
                                                                                  "height"
                                                                              ]
                                                                          },
                                                                          "gif": {
                                                                              "type": "boolean"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "unavailable",
                                                                          "type",
                                                                          "size",
                                                                          "gif"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "file_size": {
                                                                              "type": "number"
                                                                          },
                                                                          "unavailable": {
                                                                              "type": "boolean"
                                                                          },
                                                                          "mimetype": {
                                                                              "type": "string"
                                                                          },
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "url_expires_at": {
                                                                              "type": "number"
                                                                          },
                                                                          "type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "audio"
                                                                              ]
                                                                          },
                                                                          "duration": {
                                                                              "type": "number"
                                                                          },
                                                                          "voice_note": {
                                                                              "type": "boolean"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "unavailable",
                                                                          "type",
                                                                          "voice_note"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "file_size": {
                                                                              "type": "number"
                                                                          },
                                                                          "unavailable": {
                                                                              "type": "boolean"
                                                                          },
                                                                          "mimetype": {
                                                                              "type": "string"
                                                                          },
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "url_expires_at": {
                                                                              "type": "number"
                                                                          },
                                                                          "type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "file"
                                                                              ]
                                                                          },
                                                                          "file_name": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "unavailable",
                                                                          "type",
                                                                          "file_name"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string"
                                                                          },
                                                                          "file_size": {
                                                                              "type": "number"
                                                                          },
                                                                          "unavailable": {
                                                                              "type": "boolean"
                                                                          },
                                                                          "mimetype": {
                                                                              "type": "string"
                                                                          },
                                                                          "url": {
                                                                              "type": "string"
                                                                          },
                                                                          "url_expires_at": {
                                                                              "type": "number"
                                                                          },
                                                                          "type": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "linkedin_post"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "unavailable",
                                                                          "type"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "account_id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "chat_id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "chat_provider_id": {
                                                          "type": "string"
                                                      },
                                                      "timestamp": {
                                                          "type": "string"
                                                      },
                                                      "is_sender": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "quoted": {
                                                          "type": "object",
                                                          "properties": {
                                                              "provider_id": {
                                                                  "type": "string"
                                                              },
                                                              "sender_id": {
                                                                  "type": "string"
                                                              },
                                                              "text": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string"
                                                                      },
                                                                      {
                                                                          "nullable": true
                                                                      }
                                                                  ]
                                                              },
                                                              "attachments": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "file_size": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "unavailable": {
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "mimetype": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url_expires_at": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "type": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "img"
                                                                                      ]
                                                                                  },
                                                                                  "size": {
                                                                                      "type": "object",
                                                                                      "properties": {
                                                                                          "width": {
                                                                                              "type": "number"
                                                                                          },
                                                                                          "height": {
                                                                                              "type": "number"
                                                                                          }
                                                                                      },
                                                                                      "required": [
                                                                                          "width",
                                                                                          "height"
                                                                                      ]
                                                                                  },
                                                                                  "sticker": {
                                                                                      "type": "boolean"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "unavailable",
                                                                                  "type",
                                                                                  "size",
                                                                                  "sticker"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "file_size": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "unavailable": {
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "mimetype": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url_expires_at": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "type": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "video"
                                                                                      ]
                                                                                  },
                                                                                  "size": {
                                                                                      "type": "object",
                                                                                      "properties": {
                                                                                          "width": {
                                                                                              "type": "number"
                                                                                          },
                                                                                          "height": {
                                                                                              "type": "number"
                                                                                          }
                                                                                      },
                                                                                      "required": [
                                                                                          "width",
                                                                                          "height"
                                                                                      ]
                                                                                  },
                                                                                  "gif": {
                                                                                      "type": "boolean"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "unavailable",
                                                                                  "type",
                                                                                  "size",
                                                                                  "gif"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "file_size": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "unavailable": {
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "mimetype": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url_expires_at": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "type": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "audio"
                                                                                      ]
                                                                                  },
                                                                                  "duration": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "voice_note": {
                                                                                      "type": "boolean"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "unavailable",
                                                                                  "type",
                                                                                  "voice_note"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "file_size": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "unavailable": {
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "mimetype": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url_expires_at": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "type": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "file"
                                                                                      ]
                                                                                  },
                                                                                  "file_name": {
                                                                                      "type": "string"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "unavailable",
                                                                                  "type",
                                                                                  "file_name"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "file_size": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "unavailable": {
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "mimetype": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "url_expires_at": {
                                                                                      "type": "number"
                                                                                  },
                                                                                  "type": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "linkedin_post"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "unavailable",
                                                                                  "type"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "provider_id",
                                                              "sender_id",
                                                              "text",
                                                              "attachments"
                                                          ]
                                                      },
                                                      "reactions": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "value": {
                                                                      "type": "string"
                                                                  },
                                                                  "sender_id": {
                                                                      "type": "string"
                                                                  },
                                                                  "is_sender": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "value",
                                                                  "sender_id",
                                                                  "is_sender"
                                                              ]
                                                          }
                                                      },
                                                      "seen": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "seen_by": {
                                                          "type": "object",
                                                          "x-patternProperties": {
                                                              "^(.*)$": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string"
                                                                      },
                                                                      {
                                                                          "type": "boolean"
                                                                      }
                                                                  ]
                                                              }
                                                          },
                                                          "additionalProperties": true
                                                      },
                                                      "hidden": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "deleted": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "edited": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "is_event": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "delivered": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "behavior": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "nullable": true
                                                              }
                                                          ]
                                                      },
                                                      "event_type": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      0
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      1
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      2
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      3
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      4
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      5
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      6
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      7
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      8
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "number",
                                                                  "enum": [
                                                                      9
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "original": {
                                                          "type": "string"
                                                      },
                                                      "replies": {
                                                          "type": "number"
                                                      },
                                                      "reply_by": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "parent": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      },
                                                      "sender_attendee_id": {
                                                          "title": "UniqueId",
                                                          "description": "A unique identifier.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "provider_id",
                                                      "sender_id",
                                                      "text",
                                                      "attachments",
                                                      "id",
                                                      "account_id",
                                                      "chat_id",
                                                      "chat_provider_id",
                                                      "timestamp",
                                                      "is_sender",
                                                      "reactions",
                                                      "seen",
                                                      "seen_by",
                                                      "hidden",
                                                      "deleted",
                                                      "edited",
                                                      "is_event",
                                                      "delivered",
                                                      "behavior",
                                                      "original",
                                                      "sender_attendee_id"
                                                  ]
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "id",
                                      "account_id",
                                      "account_type",
                                      "provider_id",
                                      "name",
                                      "type",
                                      "timestamp",
                                      "unread_count",
                                      "archived",
                                      "muted_until",
                                      "read_only",
                                      "object",
                                      "lastMessage"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nChat not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "patch": {
              "operationId": "T_patchChat",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\nconst action = \"setReadStatus\"\nconst value = true\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.performAction({\n\t\tchat_id,\n\t\taction,\n\t\tvalue,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Perform an action on a given chat",
              "description": "Perform an action like changing the read status, muting the chat, etc.",
              "parameters": [
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the chat to be patched",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "description": "Set new chat read status",
                              "type": "object",
                              "properties": {
                                  "action": {
                                      "type": "string",
                                      "enum": [
                                          "setReadStatus"
                                      ]
                                  },
                                  "value": {
                                      "type": "boolean"
                                  }
                              },
                              "required": [
                                  "action",
                                  "value"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatPatched"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nChat not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chats/{chat_id}/messages": {
          "get": {
              "operationId": "T_listChatMessages",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllMessagesFromChat({\n\t\tchat_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all messages from a chat",
              "description": "Returns a list of messages related to the given chat. Some  parameters are available to filter the results.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "sender_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target messages received from a certain sender. The id of the sender targeted.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the chat related to requested messages.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "MessageList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Message"
                                                      ]
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "sender_id": {
                                                      "type": "string"
                                                  },
                                                  "text": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "attachments": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "img"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "sticker": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "sticker"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "video"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "gif": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "gif"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "audio"
                                                                          ]
                                                                      },
                                                                      "duration": {
                                                                          "type": "number"
                                                                      },
                                                                      "voice_note": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "voice_note"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "file"
                                                                          ]
                                                                      },
                                                                      "file_name": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "file_name"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "linkedin_post"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_provider_id": {
                                                      "type": "string"
                                                  },
                                                  "timestamp": {
                                                      "type": "string"
                                                  },
                                                  "is_sender": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "quoted": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider_id": {
                                                              "type": "string"
                                                          },
                                                          "sender_id": {
                                                              "type": "string"
                                                          },
                                                          "text": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "img"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "sticker": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "sticker"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "video"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "gif": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "gif"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "audio"
                                                                                  ]
                                                                              },
                                                                              "duration": {
                                                                                  "type": "number"
                                                                              },
                                                                              "voice_note": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "voice_note"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "file"
                                                                                  ]
                                                                              },
                                                                              "file_name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "file_name"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "linkedin_post"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "provider_id",
                                                          "sender_id",
                                                          "text",
                                                          "attachments"
                                                      ]
                                                  },
                                                  "reactions": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "object",
                                                          "properties": {
                                                              "value": {
                                                                  "type": "string"
                                                              },
                                                              "sender_id": {
                                                                  "type": "string"
                                                              },
                                                              "is_sender": {
                                                                  "type": "boolean"
                                                              }
                                                          },
                                                          "required": [
                                                              "value",
                                                              "sender_id",
                                                              "is_sender"
                                                          ]
                                                      }
                                                  },
                                                  "seen": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "seen_by": {
                                                      "type": "object",
                                                      "x-patternProperties": {
                                                          "^(.*)$": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "type": "boolean"
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "additionalProperties": true
                                                  },
                                                  "hidden": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "deleted": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "edited": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "is_event": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "delivered": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "behavior": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "event_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  3
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  4
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  5
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  6
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  7
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  8
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  9
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "original": {
                                                      "type": "string"
                                                  },
                                                  "replies": {
                                                      "type": "number"
                                                  },
                                                  "reply_by": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "parent": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "sender_attendee_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "provider_id",
                                                  "sender_id",
                                                  "text",
                                                  "attachments",
                                                  "id",
                                                  "account_id",
                                                  "chat_id",
                                                  "chat_provider_id",
                                                  "timestamp",
                                                  "is_sender",
                                                  "reactions",
                                                  "seen",
                                                  "seen_by",
                                                  "hidden",
                                                  "deleted",
                                                  "edited",
                                                  "is_event",
                                                  "delivered",
                                                  "behavior",
                                                  "original",
                                                  "sender_attendee_id"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nChat not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "T_sendMessageInChat",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\nconst text = \"text\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.sendMessage({\n\t\tchat_id,\n\t\ttext,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Send a message in a chat",
              "description": "Send a message to the given chat with the possibility to link some attachments.",
              "parameters": [
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the chat where to send the message.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "text": {
                                      "type": "string"
                                  },
                                  "thread_id": {
                                      "description": "Optional and for Slack’s messaging only. The id of a sub thread associated with a chat.",
                                      "type": "string"
                                  },
                                  "attachments": {
                                      "type": "array",
                                      "items": {
                                          "format": "binary",
                                          "type": "string"
                                      }
                                  }
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. Message sent successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "MessageSent"
                                          ]
                                      },
                                      "message_id": {
                                          "description": "The Unipile ID of the newly sent message.",
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "message_id"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount, chat or thread not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "415": {
                      "description": "\n          ## Unsupported Media Type\n          ### Unsupported media\n          The media has been rejected by the provider.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnsupportedMediaResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unsupported_media_type"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              415
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Message couldn't pass validation\n          Provider cannot execute request because of an invalid message.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "\n          ## Service Unavailable\n          ### Network down\n          Network is down on server side. Please wait a moment and retry.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chats/{chat_id}/attendees": {
          "get": {
              "operationId": "T_listAttendees",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllAttendeesFromChat(chat_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all attendees from a chat",
              "description": "Returns a list of messaging attendees related to a given chat. Some optional parameters are available to filter the results.",
              "parameters": [
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the chat related to requested attendees.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatAttendeeList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "ChatAttendee"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "type": "string"
                                                  },
                                                  "is_self": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "hidden": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "picture_url": {
                                                      "type": "string"
                                                  },
                                                  "profile_url": {
                                                      "type": "string"
                                                  },
                                                  "specifics": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "member_urn": {
                                                              "type": "string"
                                                          },
                                                          "occupation": {
                                                              "type": "string"
                                                          },
                                                          "network_distance": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_1"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_2"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_3"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUT_OF_NETWORK"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "pending_invitation": {
                                                              "type": "boolean"
                                                          },
                                                          "location": {
                                                              "type": "string"
                                                          },
                                                          "headline": {
                                                              "type": "string"
                                                          },
                                                          "contact_info": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "emails": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "phone_numbers": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "websites": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "social_handles": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "type": {
                                                                                  "type": "string"
                                                                              },
                                                                              "name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "type",
                                                                              "name"
                                                                          ]
                                                                      }
                                                                  }
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "provider",
                                                          "member_urn"
                                                      ],
                                                      "description": "Provider specific additional data."
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "account_id",
                                                  "provider_id",
                                                  "name",
                                                  "is_self"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nChat not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chats/{chat_id}/sync": {
          "get": {
              "operationId": "T_syncChatHistory",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst chat_id = \"chat id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllAttendeesFromChat(chat_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Synchronize a conversation from its beginning",
              "description": "This route can be used both to initiate a synchronization process and to monitor its status via regular polling.",
              "parameters": [
                  {
                      "name": "chat_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the chat to be synced.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatHistorySync"
                                          ]
                                      },
                                      "chat_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "status": {
                                          "description": "The status of the chat synchronization. You can setup a regular polling on the same route to get updates on its status. A new request after a SYNC_DONE or SYNC_ERROR response will start a fresh sync.",
                                          "type": "string",
                                          "enum": [
                                              "SYNC_STARTED",
                                              "SYNC_RUNNING",
                                              "SYNC_DONE",
                                              "SYNC_ERROR"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "chat_id",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nChat not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "\n          ## Service Unavailable\n          ### Network down\n          Network is down on server side. Please wait a moment and retry.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/messages/{id}": {
          "get": {
              "operationId": "o_getMessage",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst message_id = \"message id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getMessage(message_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve a message",
              "description": "Retrieve the details of a message.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the message to retrieve.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "provider_id": {
                                          "type": "string"
                                      },
                                      "sender_id": {
                                          "type": "string"
                                      },
                                      "text": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "attachments": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "img"
                                                              ]
                                                          },
                                                          "size": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "width": {
                                                                      "type": "number"
                                                                  },
                                                                  "height": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "width",
                                                                  "height"
                                                              ]
                                                          },
                                                          "sticker": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "size",
                                                          "sticker"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "video"
                                                              ]
                                                          },
                                                          "size": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "width": {
                                                                      "type": "number"
                                                                  },
                                                                  "height": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "width",
                                                                  "height"
                                                              ]
                                                          },
                                                          "gif": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "size",
                                                          "gif"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "audio"
                                                              ]
                                                          },
                                                          "duration": {
                                                              "type": "number"
                                                          },
                                                          "voice_note": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "voice_note"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "file"
                                                              ]
                                                          },
                                                          "file_name": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "file_name"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "linkedin_post"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "chat_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "chat_provider_id": {
                                          "type": "string"
                                      },
                                      "timestamp": {
                                          "type": "string"
                                      },
                                      "is_sender": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "quoted": {
                                          "type": "object",
                                          "properties": {
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "sender_id": {
                                                  "type": "string"
                                              },
                                              "text": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "attachments": {
                                                  "type": "array",
                                                  "items": {
                                                      "anyOf": [
                                                          {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "file_size": {
                                                                      "type": "number"
                                                                  },
                                                                  "unavailable": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "mimetype": {
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "type": "string"
                                                                  },
                                                                  "url_expires_at": {
                                                                      "type": "number"
                                                                  },
                                                                  "type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "img"
                                                                      ]
                                                                  },
                                                                  "size": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "width": {
                                                                              "type": "number"
                                                                          },
                                                                          "height": {
                                                                              "type": "number"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "width",
                                                                          "height"
                                                                      ]
                                                                  },
                                                                  "sticker": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "unavailable",
                                                                  "type",
                                                                  "size",
                                                                  "sticker"
                                                              ]
                                                          },
                                                          {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "file_size": {
                                                                      "type": "number"
                                                                  },
                                                                  "unavailable": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "mimetype": {
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "type": "string"
                                                                  },
                                                                  "url_expires_at": {
                                                                      "type": "number"
                                                                  },
                                                                  "type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "video"
                                                                      ]
                                                                  },
                                                                  "size": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "width": {
                                                                              "type": "number"
                                                                          },
                                                                          "height": {
                                                                              "type": "number"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "width",
                                                                          "height"
                                                                      ]
                                                                  },
                                                                  "gif": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "unavailable",
                                                                  "type",
                                                                  "size",
                                                                  "gif"
                                                              ]
                                                          },
                                                          {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "file_size": {
                                                                      "type": "number"
                                                                  },
                                                                  "unavailable": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "mimetype": {
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "type": "string"
                                                                  },
                                                                  "url_expires_at": {
                                                                      "type": "number"
                                                                  },
                                                                  "type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "audio"
                                                                      ]
                                                                  },
                                                                  "duration": {
                                                                      "type": "number"
                                                                  },
                                                                  "voice_note": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "unavailable",
                                                                  "type",
                                                                  "voice_note"
                                                              ]
                                                          },
                                                          {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "file_size": {
                                                                      "type": "number"
                                                                  },
                                                                  "unavailable": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "mimetype": {
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "type": "string"
                                                                  },
                                                                  "url_expires_at": {
                                                                      "type": "number"
                                                                  },
                                                                  "type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "file"
                                                                      ]
                                                                  },
                                                                  "file_name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "unavailable",
                                                                  "type",
                                                                  "file_name"
                                                              ]
                                                          },
                                                          {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "file_size": {
                                                                      "type": "number"
                                                                  },
                                                                  "unavailable": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "mimetype": {
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "type": "string"
                                                                  },
                                                                  "url_expires_at": {
                                                                      "type": "number"
                                                                  },
                                                                  "type": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "linkedin_post"
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "unavailable",
                                                                  "type"
                                                              ]
                                                          }
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "provider_id",
                                              "sender_id",
                                              "text",
                                              "attachments"
                                          ]
                                      },
                                      "reactions": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "value": {
                                                      "type": "string"
                                                  },
                                                  "sender_id": {
                                                      "type": "string"
                                                  },
                                                  "is_sender": {
                                                      "type": "boolean"
                                                  }
                                              },
                                              "required": [
                                                  "value",
                                                  "sender_id",
                                                  "is_sender"
                                              ]
                                          }
                                      },
                                      "seen": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "seen_by": {
                                          "type": "object",
                                          "x-patternProperties": {
                                              "^(.*)$": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              }
                                          },
                                          "additionalProperties": true
                                      },
                                      "hidden": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "deleted": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "edited": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "is_event": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "delivered": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              }
                                          ]
                                      },
                                      "behavior": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "event_type": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      2
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      3
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      4
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      5
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      6
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      7
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      8
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      9
                                                  ]
                                              }
                                          ]
                                      },
                                      "original": {
                                          "type": "string"
                                      },
                                      "replies": {
                                          "type": "number"
                                      },
                                      "reply_by": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          }
                                      },
                                      "parent": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "sender_attendee_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Message"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "provider_id",
                                      "sender_id",
                                      "text",
                                      "attachments",
                                      "id",
                                      "account_id",
                                      "chat_id",
                                      "chat_provider_id",
                                      "timestamp",
                                      "is_sender",
                                      "reactions",
                                      "seen",
                                      "seen_by",
                                      "hidden",
                                      "deleted",
                                      "edited",
                                      "is_event",
                                      "delivered",
                                      "behavior",
                                      "original",
                                      "sender_attendee_id",
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nMessage not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/messages": {
          "get": {
              "operationId": "o_listAllMessages",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllMessages()\n} catch (error) {\n\tconsole.log(error)\n}",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all messages",
              "description": "Returns a list of messages. Some optional parameters are available to filter the results.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "sender_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target messages received from a certain sender. The id of the sender targeted.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target messages received in a certain linked account. The id of the account targeted.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "MessageList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Message"
                                                      ]
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "sender_id": {
                                                      "type": "string"
                                                  },
                                                  "text": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "attachments": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "img"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "sticker": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "sticker"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "video"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "gif": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "gif"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "audio"
                                                                          ]
                                                                      },
                                                                      "duration": {
                                                                          "type": "number"
                                                                      },
                                                                      "voice_note": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "voice_note"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "file"
                                                                          ]
                                                                      },
                                                                      "file_name": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "file_name"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "linkedin_post"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_provider_id": {
                                                      "type": "string"
                                                  },
                                                  "timestamp": {
                                                      "type": "string"
                                                  },
                                                  "is_sender": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "quoted": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider_id": {
                                                              "type": "string"
                                                          },
                                                          "sender_id": {
                                                              "type": "string"
                                                          },
                                                          "text": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "img"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "sticker": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "sticker"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "video"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "gif": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "gif"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "audio"
                                                                                  ]
                                                                              },
                                                                              "duration": {
                                                                                  "type": "number"
                                                                              },
                                                                              "voice_note": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "voice_note"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "file"
                                                                                  ]
                                                                              },
                                                                              "file_name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "file_name"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "linkedin_post"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "provider_id",
                                                          "sender_id",
                                                          "text",
                                                          "attachments"
                                                      ]
                                                  },
                                                  "reactions": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "object",
                                                          "properties": {
                                                              "value": {
                                                                  "type": "string"
                                                              },
                                                              "sender_id": {
                                                                  "type": "string"
                                                              },
                                                              "is_sender": {
                                                                  "type": "boolean"
                                                              }
                                                          },
                                                          "required": [
                                                              "value",
                                                              "sender_id",
                                                              "is_sender"
                                                          ]
                                                      }
                                                  },
                                                  "seen": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "seen_by": {
                                                      "type": "object",
                                                      "x-patternProperties": {
                                                          "^(.*)$": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "type": "boolean"
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "additionalProperties": true
                                                  },
                                                  "hidden": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "deleted": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "edited": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "is_event": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "delivered": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "behavior": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "event_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  3
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  4
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  5
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  6
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  7
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  8
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  9
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "original": {
                                                      "type": "string"
                                                  },
                                                  "replies": {
                                                      "type": "number"
                                                  },
                                                  "reply_by": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "parent": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "sender_attendee_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "provider_id",
                                                  "sender_id",
                                                  "text",
                                                  "attachments",
                                                  "id",
                                                  "account_id",
                                                  "chat_id",
                                                  "chat_provider_id",
                                                  "timestamp",
                                                  "is_sender",
                                                  "reactions",
                                                  "seen",
                                                  "seen_by",
                                                  "hidden",
                                                  "deleted",
                                                  "edited",
                                                  "is_event",
                                                  "delivered",
                                                  "behavior",
                                                  "original",
                                                  "sender_attendee_id"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount or sender not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/messages/{message_id}/attachments/{attachment_id}": {
          "get": {
              "operationId": "o_getAttachment",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst attachment_id = \"attachment id\"\nconst message_id = \"message id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getMessageAttachment({\n\t\tattachment_id,\n\t\tmessage_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve an attachment from a message",
              "description": "Retrieve one of the attachment linked to a message.",
              "parameters": [
                  {
                      "name": "attachment_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the wanted attachment.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "message_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the message to which the attachment is linked.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "string",
                                  "format": "binary"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nMessage or attachment not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chat_attendees": {
          "get": {
              "operationId": "d_listAllAttendees",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllAttendees()\n} catch (error) {\n\tconsole.log(error)\n}",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all attendees",
              "description": "Returns a list of messaging attendees. Some optional parameters are available to filter the results.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target attendees related to a certain linked account. The id of the account targeted.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatAttendeeList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "ChatAttendee"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "type": "string"
                                                  },
                                                  "is_self": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "hidden": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "picture_url": {
                                                      "type": "string"
                                                  },
                                                  "profile_url": {
                                                      "type": "string"
                                                  },
                                                  "specifics": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "member_urn": {
                                                              "type": "string"
                                                          },
                                                          "occupation": {
                                                              "type": "string"
                                                          },
                                                          "network_distance": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_1"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_2"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_3"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUT_OF_NETWORK"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "pending_invitation": {
                                                              "type": "boolean"
                                                          },
                                                          "location": {
                                                              "type": "string"
                                                          },
                                                          "headline": {
                                                              "type": "string"
                                                          },
                                                          "contact_info": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "emails": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "phone_numbers": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "websites": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "social_handles": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "type": {
                                                                                  "type": "string"
                                                                              },
                                                                              "name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "type",
                                                                              "name"
                                                                          ]
                                                                      }
                                                                  }
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "provider",
                                                          "member_urn"
                                                      ],
                                                      "description": "Provider specific additional data."
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "account_id",
                                                  "provider_id",
                                                  "name",
                                                  "is_self"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n      ## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chat_attendees/{id}": {
          "get": {
              "operationId": "d_getAttendeeById",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst attendee_id = \"attendee id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAttendee(attendee_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve an attendee",
              "description": "The id of the wanted attendee.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the wanted attendee.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "account_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "provider_id": {
                                          "type": "string"
                                      },
                                      "name": {
                                          "type": "string"
                                      },
                                      "is_self": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              }
                                          ]
                                      },
                                      "hidden": {
                                          "anyOf": [
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      1
                                                  ]
                                              },
                                              {
                                                  "type": "number",
                                                  "enum": [
                                                      0
                                                  ]
                                              }
                                          ]
                                      },
                                      "picture_url": {
                                          "type": "string"
                                      },
                                      "profile_url": {
                                          "type": "string"
                                      },
                                      "specifics": {
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "LINKEDIN"
                                                  ]
                                              },
                                              "member_urn": {
                                                  "type": "string"
                                              },
                                              "occupation": {
                                                  "type": "string"
                                              },
                                              "network_distance": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "DISTANCE_1"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "DISTANCE_2"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "DISTANCE_3"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "OUT_OF_NETWORK"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "pending_invitation": {
                                                  "type": "boolean"
                                              },
                                              "location": {
                                                  "type": "string"
                                              },
                                              "headline": {
                                                  "type": "string"
                                              },
                                              "contact_info": {
                                                  "type": "object",
                                                  "properties": {
                                                      "emails": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "phone_numbers": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "websites": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "social_handles": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "type": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "type",
                                                                  "name"
                                                              ]
                                                          }
                                                      }
                                                  }
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "member_urn"
                                          ],
                                          "description": "Provider specific additional data."
                                      },
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatAttendee"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "id",
                                      "account_id",
                                      "provider_id",
                                      "name",
                                      "is_self",
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAttendee not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chat_attendees/{id}/picture": {
          "get": {
              "operationId": "d_getAttendeeProfilePicture",
              "summary": "Download a chat attendee picture",
              "description": "Download the profile picture of an attendee or picture of a group chat.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the attendee. Use a chat id to get the picture of a group chat.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": ""
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chat_attendees/{attendee_id}/chats": {
          "get": {
              "operationId": "d_listChatsByAttendee",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst attendee_id = \"attendee id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllChatsFromAttendee({\n\t\tattendee_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all 1to1 chats for a given attendee",
              "description": "Returns a list of chats where a given attendee is involved.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain account. Can be a comma-separated list of ids.",
                      "schema": {
                          "title": "AccountIdOrIdsParam",
                          "description": "An Unipile account id or a list of Unipile account ids separated by commas.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "attendee_id",
                      "required": true,
                      "in": "path",
                      "description": "The Unipile ID OR provider_id of the attendee.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ChatList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Chat"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "WHATSAPP"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SLACK"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TWITTER"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "MESSENGER"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "INSTAGRAM"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TELEGRAM"
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "attendee_provider_id": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "timestamp": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "unread_count": {
                                                      "type": "number"
                                                  },
                                                  "archived": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "muted_until": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  -1
                                                              ]
                                                          },
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "read_only": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "disabledFeatures": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "reactions"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "reply"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "subject": {
                                                      "type": "string"
                                                  },
                                                  "organization_id": {
                                                      "description": "Linkedin specific ID for organization mailboxes.",
                                                      "type": "string"
                                                  },
                                                  "mailbox_id": {
                                                      "description": "Linkedin specific ID for organization mailboxes.",
                                                      "type": "string"
                                                  },
                                                  "content_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "inmail"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "sponsored"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "linkedin_offer"
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "folder": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_CLASSIC"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_RECRUITER"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_SALES_NAVIGATOR"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "INBOX_LINKEDIN_ORGANIZATION"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "account_id",
                                                  "account_type",
                                                  "provider_id",
                                                  "name",
                                                  "type",
                                                  "timestamp",
                                                  "unread_count",
                                                  "archived",
                                                  "muted_until",
                                                  "read_only"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAttendee not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/chat_attendees/{sender_id}/messages": {
          "get": {
              "operationId": "d_listMessagesByAttendee",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst attendee_id = \"attendee id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.messaging.getAllMessagesFromAttendee({\n\t\tattendee_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all messages for a given attendee",
              "description": "Returns a list of messages where a given attendee is involved.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "before",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created before the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "after",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "description": "A filter to target items created after the datetime (exclusive). Must be an ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ).",
                          "example": "2025-12-31T23:59:59.999Z",
                          "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$",
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain account. Can be a comma-separated list of ids.",
                      "schema": {
                          "title": "AccountIdOrIdsParam",
                          "description": "An Unipile account id or a list of Unipile account ids separated by commas.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "sender_id",
                      "required": true,
                      "in": "path",
                      "description": "The Unipile ID OR provider_id of the attendee.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "MessageList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Message"
                                                      ]
                                                  },
                                                  "provider_id": {
                                                      "type": "string"
                                                  },
                                                  "sender_id": {
                                                      "type": "string"
                                                  },
                                                  "text": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "attachments": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "img"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "sticker": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "sticker"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "video"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "gif": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "gif"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "audio"
                                                                          ]
                                                                      },
                                                                      "duration": {
                                                                          "type": "number"
                                                                      },
                                                                      "voice_note": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "voice_note"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "file"
                                                                          ]
                                                                      },
                                                                      "file_name": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "file_name"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "linkedin_post"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "account_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "chat_provider_id": {
                                                      "type": "string"
                                                  },
                                                  "timestamp": {
                                                      "type": "string"
                                                  },
                                                  "is_sender": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "quoted": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider_id": {
                                                              "type": "string"
                                                          },
                                                          "sender_id": {
                                                              "type": "string"
                                                          },
                                                          "text": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "img"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "sticker": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "sticker"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "video"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "gif": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "gif"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "audio"
                                                                                  ]
                                                                              },
                                                                              "duration": {
                                                                                  "type": "number"
                                                                              },
                                                                              "voice_note": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "voice_note"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "file"
                                                                                  ]
                                                                              },
                                                                              "file_name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "file_name"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "linkedin_post"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "provider_id",
                                                          "sender_id",
                                                          "text",
                                                          "attachments"
                                                      ]
                                                  },
                                                  "reactions": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "object",
                                                          "properties": {
                                                              "value": {
                                                                  "type": "string"
                                                              },
                                                              "sender_id": {
                                                                  "type": "string"
                                                              },
                                                              "is_sender": {
                                                                  "type": "boolean"
                                                              }
                                                          },
                                                          "required": [
                                                              "value",
                                                              "sender_id",
                                                              "is_sender"
                                                          ]
                                                      }
                                                  },
                                                  "seen": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "seen_by": {
                                                      "type": "object",
                                                      "x-patternProperties": {
                                                          "^(.*)$": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "type": "boolean"
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "additionalProperties": true
                                                  },
                                                  "hidden": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "deleted": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "edited": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "is_event": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "delivered": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "behavior": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "event_type": {
                                                      "anyOf": [
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  0
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  1
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  2
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  3
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  4
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  5
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  6
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  7
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  8
                                                              ]
                                                          },
                                                          {
                                                              "type": "number",
                                                              "enum": [
                                                                  9
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "original": {
                                                      "type": "string"
                                                  },
                                                  "replies": {
                                                      "type": "number"
                                                  },
                                                  "reply_by": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "parent": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "sender_attendee_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "provider_id",
                                                  "sender_id",
                                                  "text",
                                                  "attachments",
                                                  "id",
                                                  "account_id",
                                                  "chat_id",
                                                  "chat_provider_id",
                                                  "timestamp",
                                                  "is_sender",
                                                  "reactions",
                                                  "seen",
                                                  "seen_by",
                                                  "hidden",
                                                  "deleted",
                                                  "edited",
                                                  "is_event",
                                                  "delivered",
                                                  "behavior",
                                                  "original",
                                                  "sender_attendee_id"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAttendee not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Messaging"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/webhooks": {
          "get": {
              "operationId": "o_listWebhooks",
              "summary": "List all webhooks",
              "description": "Returns a list of the webhooks.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "WebhookList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Webhook"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "account_ids": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "title": "UniqueId",
                                                                          "description": "A unique identifier.",
                                                                          "minLength": 1,
                                                                          "type": "string"
                                                                      },
                                                                      "name": {
                                                                          "type": "string"
                                                                      },
                                                                      "type": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "GOOGLE"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "GOOGLE_CALENDAR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ICLOUD"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "LINKEDIN"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "MAIL"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "MOBILE"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OUTLOOK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "TWITTER"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "WHATSAPP"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "SLACK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "TELEGRAM"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "type"
                                                                  ]
                                                              }
                                                          },
                                                          "enabled": {
                                                              "type": "boolean"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "request_url": {
                                                              "type": "string"
                                                          },
                                                          "format": {
                                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                                              "example": "json",
                                                              "type": "string",
                                                              "enum": [
                                                                  "json",
                                                                  "form"
                                                              ]
                                                          },
                                                          "headers": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "key": {
                                                                          "type": "string"
                                                                      },
                                                                      "value": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "key",
                                                                      "value"
                                                                  ]
                                                              }
                                                          },
                                                          "data": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "account_id",
                                                                                      "account_type",
                                                                                      "chat_id",
                                                                                      "timestamp",
                                                                                      "webhook_name",
                                                                                      "message_id",
                                                                                      "message",
                                                                                      "reaction",
                                                                                      "reaction_sender",
                                                                                      "sender",
                                                                                      "attendees",
                                                                                      "attachments"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  },
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "email_id",
                                                                                      "account_id",
                                                                                      "webhook_name",
                                                                                      "date",
                                                                                      "from_attendee",
                                                                                      "to_attendees",
                                                                                      "cc_attendees",
                                                                                      "bcc_attendees",
                                                                                      "reply_to_attendees",
                                                                                      "subject",
                                                                                      "body",
                                                                                      "body_plain",
                                                                                      "message_id",
                                                                                      "provider_id",
                                                                                      "tracking_id",
                                                                                      "read_date",
                                                                                      "is_complete",
                                                                                      "in_reply_to",
                                                                                      "has_attachments",
                                                                                      "attachments",
                                                                                      "folders",
                                                                                      "role",
                                                                                      "origin"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  },
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "event_id",
                                                                                      "tracking_id",
                                                                                      "type",
                                                                                      "date",
                                                                                      "email_id",
                                                                                      "account_id",
                                                                                      "ip",
                                                                                      "user_agent",
                                                                                      "url",
                                                                                      "label",
                                                                                      "custom_domain"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  }
                                                              ]
                                                          },
                                                          "events": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "message_received",
                                                                              "message_read",
                                                                              "message_reaction"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "mail_sent",
                                                                              "mail_received"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "mail_opened",
                                                                              "mail_link_clicked"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "creation_success",
                                                                              "creation_fail",
                                                                              "deleted",
                                                                              "reconnected",
                                                                              "sync_success",
                                                                              "stopped",
                                                                              "ok",
                                                                              "connecting",
                                                                              "error",
                                                                              "credentials",
                                                                              "permissions"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "AUTO"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "id",
                                                          "account_ids",
                                                          "enabled",
                                                          "request_url",
                                                          "format",
                                                          "headers",
                                                          "data",
                                                          "type"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Webhook"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "account_ids": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "title": "UniqueId",
                                                                          "description": "A unique identifier.",
                                                                          "minLength": 1,
                                                                          "type": "string"
                                                                      },
                                                                      "name": {
                                                                          "type": "string"
                                                                      },
                                                                      "type": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "GOOGLE"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "GOOGLE_CALENDAR"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "ICLOUD"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "LINKEDIN"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "MAIL"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "MOBILE"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "OUTLOOK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "TWITTER"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "WHATSAPP"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "SLACK"
                                                                                  ]
                                                                              },
                                                                              {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "TELEGRAM"
                                                                                  ]
                                                                              }
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "type"
                                                                  ]
                                                              }
                                                          },
                                                          "enabled": {
                                                              "type": "boolean"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "request_url": {
                                                              "type": "string"
                                                          },
                                                          "format": {
                                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                                              "example": "json",
                                                              "type": "string",
                                                              "enum": [
                                                                  "json",
                                                                  "form"
                                                              ]
                                                          },
                                                          "headers": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "key": {
                                                                          "type": "string"
                                                                      },
                                                                      "value": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "key",
                                                                      "value"
                                                                  ]
                                                              }
                                                          },
                                                          "data": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "account_id",
                                                                                      "account_type",
                                                                                      "chat_id",
                                                                                      "timestamp",
                                                                                      "webhook_name",
                                                                                      "message_id",
                                                                                      "message",
                                                                                      "reaction",
                                                                                      "reaction_sender",
                                                                                      "sender",
                                                                                      "attendees",
                                                                                      "attachments"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  },
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "email_id",
                                                                                      "account_id",
                                                                                      "webhook_name",
                                                                                      "date",
                                                                                      "from_attendee",
                                                                                      "to_attendees",
                                                                                      "cc_attendees",
                                                                                      "bcc_attendees",
                                                                                      "reply_to_attendees",
                                                                                      "subject",
                                                                                      "body",
                                                                                      "body_plain",
                                                                                      "message_id",
                                                                                      "provider_id",
                                                                                      "tracking_id",
                                                                                      "read_date",
                                                                                      "is_complete",
                                                                                      "in_reply_to",
                                                                                      "has_attachments",
                                                                                      "attachments",
                                                                                      "folders",
                                                                                      "role",
                                                                                      "origin"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  },
                                                                  {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "name": {
                                                                                  "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                                                  "type": "string"
                                                                              },
                                                                              "key": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "event_id",
                                                                                      "tracking_id",
                                                                                      "type",
                                                                                      "date",
                                                                                      "email_id",
                                                                                      "account_id",
                                                                                      "ip",
                                                                                      "user_agent",
                                                                                      "url",
                                                                                      "label",
                                                                                      "custom_domain"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "name",
                                                                              "key"
                                                                          ]
                                                                      }
                                                                  }
                                                              ]
                                                          },
                                                          "events": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "message_received",
                                                                              "message_read",
                                                                              "message_reaction"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "mail_sent",
                                                                              "mail_received"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "mail_opened",
                                                                              "mail_link_clicked"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "creation_success",
                                                                              "creation_fail",
                                                                              "deleted",
                                                                              "reconnected",
                                                                              "sync_success",
                                                                              "stopped",
                                                                              "ok",
                                                                              "connecting",
                                                                              "error",
                                                                              "credentials",
                                                                              "permissions"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "TRIGGER"
                                                              ]
                                                          },
                                                          "trigger": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "icon": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "WebhookIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "SettingsInputIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "LeakAddIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "Diversity2Icon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "AutoFixHighIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "SignPostIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "ShutterSpeedIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "SyncAltIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "WhatsAppIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "LinkedInIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "ImportExportIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "PodcastsIcon"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CableIcon"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "context": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "MESSAGE"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CHAT"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "required": [
                                                                  "icon",
                                                                  "name",
                                                                  "context"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "id",
                                                          "account_ids",
                                                          "enabled",
                                                          "request_url",
                                                          "format",
                                                          "headers",
                                                          "data",
                                                          "type",
                                                          "trigger"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Webhooks"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "o_createWebhook",
              "summary": "Create a webhook",
              "description": "Create a webhook.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "anyOf": [
                                  {
                                      "title": "Messaging webhook",
                                      "type": "object",
                                      "properties": {
                                          "request_url": {
                                              "description": "The url to associate with the webhook.",
                                              "type": "string"
                                          },
                                          "name": {
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "format": {
                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                              "example": "json",
                                              "type": "string",
                                              "enum": [
                                                  "json",
                                                  "form"
                                              ]
                                          },
                                          "account_ids": {
                                              "description": "An optional list of account ids to be targeted by the webhook. If not set, the webhook will apply to all current and future accounts connected to Unipile.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string"
                                              }
                                          },
                                          "enabled": {
                                              "description": "A boolean to activate or disable the webhook.",
                                              "type": "boolean"
                                          },
                                          "headers": {
                                              "description": "An optional field to add some headers to the webhook.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "key": {
                                                          "type": "string"
                                                      },
                                                      "value": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "key",
                                                      "value"
                                                  ]
                                              }
                                          },
                                          "source": {
                                              "description": "A litteral to pick the kind of data you expect to receive from the webhook.",
                                              "type": "string",
                                              "enum": [
                                                  "messaging"
                                              ]
                                          },
                                          "events": {
                                              "description": "An array of events on which the webhook should be triggered. Default value include \"message_received\".",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "message_received",
                                                      "message_read",
                                                      "message_reaction"
                                                  ]
                                              }
                                          },
                                          "data": {
                                              "type": "array",
                                              "items": {
                                                  "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                  "type": "object",
                                                  "properties": {
                                                      "name": {
                                                          "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                          "type": "string"
                                                      },
                                                      "key": {
                                                          "type": "string",
                                                          "enum": [
                                                              "account_id",
                                                              "account_type",
                                                              "chat_id",
                                                              "timestamp",
                                                              "webhook_name",
                                                              "message_id",
                                                              "message",
                                                              "reaction",
                                                              "reaction_sender",
                                                              "sender",
                                                              "attendees",
                                                              "attachments"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "name",
                                                      "key"
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "request_url",
                                          "source"
                                      ]
                                  },
                                  {
                                      "title": "Account status webhook",
                                      "type": "object",
                                      "properties": {
                                          "request_url": {
                                              "description": "The url to associate with the webhook.",
                                              "type": "string"
                                          },
                                          "name": {
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "format": {
                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                              "example": "json",
                                              "type": "string",
                                              "enum": [
                                                  "json",
                                                  "form"
                                              ]
                                          },
                                          "account_ids": {
                                              "description": "An optional list of account ids to be targeted by the webhook. If not set, the webhook will apply to all current and future accounts connected to Unipile.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string"
                                              }
                                          },
                                          "enabled": {
                                              "description": "A boolean to activate or disable the webhook.",
                                              "type": "boolean"
                                          },
                                          "headers": {
                                              "description": "An optional field to add some headers to the webhook.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "key": {
                                                          "type": "string"
                                                      },
                                                      "value": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "key",
                                                      "value"
                                                  ]
                                              }
                                          },
                                          "source": {
                                              "description": "A litteral to pick the kind of data you expect to receive from the webhook.",
                                              "type": "string",
                                              "enum": [
                                                  "account_status"
                                              ]
                                          },
                                          "events": {
                                              "description": "An array of events on which the webhook should be triggered. Default settings cover the usual statuses, except for CONNECTING, OK and STOPPED.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "creation_success",
                                                      "creation_fail",
                                                      "deleted",
                                                      "reconnected",
                                                      "sync_success",
                                                      "stopped",
                                                      "ok",
                                                      "connecting",
                                                      "error",
                                                      "credentials",
                                                      "permissions"
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "request_url",
                                          "source"
                                      ]
                                  },
                                  {
                                      "title": "Email webhook",
                                      "type": "object",
                                      "properties": {
                                          "request_url": {
                                              "description": "The url to associate with the webhook.",
                                              "type": "string"
                                          },
                                          "name": {
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "format": {
                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                              "example": "json",
                                              "type": "string",
                                              "enum": [
                                                  "json",
                                                  "form"
                                              ]
                                          },
                                          "account_ids": {
                                              "description": "An optional list of account ids to be targeted by the webhook. If not set, the webhook will apply to all current and future accounts connected to Unipile.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string"
                                              }
                                          },
                                          "enabled": {
                                              "description": "A boolean to activate or disable the webhook.",
                                              "type": "boolean"
                                          },
                                          "headers": {
                                              "description": "An optional field to add some headers to the webhook.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "key": {
                                                          "type": "string"
                                                      },
                                                      "value": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "key",
                                                      "value"
                                                  ]
                                              }
                                          },
                                          "source": {
                                              "description": "A litteral to pick the kind of data you expect to receive from the webhook.",
                                              "type": "string",
                                              "enum": [
                                                  "email"
                                              ]
                                          },
                                          "events": {
                                              "description": "An array of events on which the webhook should be triggered. Default value include \"mail_received\".",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "mail_sent",
                                                      "mail_received"
                                                  ]
                                              }
                                          },
                                          "data": {
                                              "type": "array",
                                              "items": {
                                                  "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                  "type": "object",
                                                  "properties": {
                                                      "name": {
                                                          "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                          "type": "string"
                                                      },
                                                      "key": {
                                                          "type": "string",
                                                          "enum": [
                                                              "email_id",
                                                              "account_id",
                                                              "webhook_name",
                                                              "date",
                                                              "from_attendee",
                                                              "to_attendees",
                                                              "cc_attendees",
                                                              "bcc_attendees",
                                                              "reply_to_attendees",
                                                              "subject",
                                                              "body",
                                                              "body_plain",
                                                              "message_id",
                                                              "provider_id",
                                                              "tracking_id",
                                                              "read_date",
                                                              "is_complete",
                                                              "in_reply_to",
                                                              "has_attachments",
                                                              "attachments",
                                                              "folders",
                                                              "role",
                                                              "origin"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "name",
                                                      "key"
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "request_url",
                                          "source"
                                      ]
                                  },
                                  {
                                      "title": "Email Tracking webhook",
                                      "type": "object",
                                      "properties": {
                                          "request_url": {
                                              "description": "The url to associate with the webhook.",
                                              "type": "string"
                                          },
                                          "name": {
                                              "description": "This field will be sent back to you in the notify_url to help match the added account with your user.",
                                              "type": "string"
                                          },
                                          "format": {
                                              "description": "The format of data you recieve from the webhook. Accepted values: json | form",
                                              "example": "json",
                                              "type": "string",
                                              "enum": [
                                                  "json",
                                                  "form"
                                              ]
                                          },
                                          "account_ids": {
                                              "description": "An optional list of account ids to be targeted by the webhook. If not set, the webhook will apply to all current and future accounts connected to Unipile.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string"
                                              }
                                          },
                                          "enabled": {
                                              "description": "A boolean to activate or disable the webhook.",
                                              "type": "boolean"
                                          },
                                          "headers": {
                                              "description": "An optional field to add some headers to the webhook.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "key": {
                                                          "type": "string"
                                                      },
                                                      "value": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "key",
                                                      "value"
                                                  ]
                                              }
                                          },
                                          "source": {
                                              "description": "A litteral to pick the kind of data you expect to receive from the webhook.",
                                              "type": "string",
                                              "enum": [
                                                  "email_tracking"
                                              ]
                                          },
                                          "events": {
                                              "description": "An array of events on which the webhook should be triggered. Default value include \"mail_opened\".",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "mail_opened",
                                                      "mail_link_clicked"
                                                  ]
                                              }
                                          },
                                          "data": {
                                              "type": "array",
                                              "items": {
                                                  "description": "You can use this field to change the name of the properties you will receive from the webhook.",
                                                  "type": "object",
                                                  "properties": {
                                                      "name": {
                                                          "description": "The name of the property you want to receive. It will replace the original name of the property.",
                                                          "type": "string"
                                                      },
                                                      "key": {
                                                          "type": "string",
                                                          "enum": [
                                                              "event_id",
                                                              "tracking_id",
                                                              "type",
                                                              "date",
                                                              "email_id",
                                                              "account_id",
                                                              "ip",
                                                              "user_agent",
                                                              "url",
                                                              "label",
                                                              "custom_domain"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "name",
                                                      "key"
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "request_url",
                                          "source"
                                      ]
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. Webhook sucessfully added.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "WebhookCreated"
                                          ]
                                      },
                                      "webhook_id": {
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "webhook_id"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Webhooks"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/webhooks/{id}": {
          "delete": {
              "operationId": "o_deleteWebhook",
              "summary": "Delete a webhook",
              "description": "Delete a webhook.",
              "parameters": [
                  {
                      "name": "id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the webhook to be deleted.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Webhook sucessfully deleted.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "WebhookDeleted"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nWebhook not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Webhooks"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/folders": {
          "get": {
              "operationId": "n_listFolders",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.getAllFolders()\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all folders",
              "description": "Returns a list of all email folders.",
              "parameters": [
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "A filter to target items related to a certain account.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "description": "@todo List of Folders.",
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "FolderList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "allOf": [
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "Folder"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "account_id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "role": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "inbox"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "sent"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "archive"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "drafts"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "trash"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "spam"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "all"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "important"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "starred"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "unknown"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "nb_mails": {
                                                              "type": "number"
                                                          },
                                                          "provider_id": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "name",
                                                          "account_id",
                                                          "role",
                                                          "provider_id"
                                                      ]
                                                  }
                                              ]
                                          }
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/folders/{folder_id}": {
          "get": {
              "operationId": "n_getFolder",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst folder_id = \"folder id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.email.getOneFolder(folder_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve a folder",
              "description": "Retrieve the details of a mail folder.",
              "parameters": [
                  {
                      "name": "folder_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the wanted folder. Either the Unipile id or the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account related to the folder. Required when using the provider uid.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "allOf": [
                                      {
                                          "type": "object",
                                          "properties": {
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "Folder"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "object"
                                          ]
                                      },
                                      {
                                          "type": "object",
                                          "properties": {
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "account_id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "role": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "inbox"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "sent"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "archive"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "drafts"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "trash"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "spam"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "all"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "important"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "starred"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "unknown"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "nb_mails": {
                                                  "type": "number"
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "id",
                                              "name",
                                              "account_id",
                                              "role",
                                              "provider_id"
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nFolder not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Emails"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/invite/sent": {
          "get": {
              "operationId": "y_listAllUserInvitationsSent",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllInvitationsSent({\n\t\taccount_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all invitations sent",
              "description": "Returns a list of all invitations sent that are pending.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 100.",
                          "default": 10,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "InvitationList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "InvitationSent"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "invited_user": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_id": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_public_id": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_description": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "date": {
                                                      "type": "string"
                                                  },
                                                  "parsed_datetime": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invitation_text": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "inviter": {
                                                      "type": "object",
                                                      "properties": {
                                                          "inviter_name": {
                                                              "type": "string"
                                                          },
                                                          "inviter_id": {
                                                              "type": "string"
                                                          },
                                                          "inviter_public_identifier": {
                                                              "type": "string"
                                                          },
                                                          "inviter_description": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "inviter_name",
                                                          "inviter_id",
                                                          "inviter_public_identifier",
                                                          "inviter_description"
                                                      ]
                                                  },
                                                  "specifics": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "shared_secret": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "provider",
                                                          "shared_secret"
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "invited_user",
                                                  "invited_user_id",
                                                  "invited_user_public_id",
                                                  "invited_user_description",
                                                  "date",
                                                  "parsed_datetime",
                                                  "invitation_text"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/invite/received": {
          "get": {
              "operationId": "y_listAllUserInvitationsReceived",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllInvitationsSent({\n\t\taccount_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all invitations received",
              "description": "Returns a list of all invitations that have been received.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 100.",
                          "default": 10,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "InvitationList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "InvitationReceived"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "invited_user": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_id": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_public_id": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invited_user_description": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "date": {
                                                      "type": "string"
                                                  },
                                                  "parsed_datetime": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "invitation_text": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "inviter": {
                                                      "type": "object",
                                                      "properties": {
                                                          "inviter_name": {
                                                              "type": "string"
                                                          },
                                                          "inviter_id": {
                                                              "type": "string"
                                                          },
                                                          "inviter_public_identifier": {
                                                              "type": "string"
                                                          },
                                                          "inviter_description": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "inviter_name",
                                                          "inviter_id",
                                                          "inviter_public_identifier",
                                                          "inviter_description"
                                                      ]
                                                  },
                                                  "specifics": {
                                                      "type": "object",
                                                      "properties": {
                                                          "provider": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "shared_secret": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "provider",
                                                          "shared_secret"
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "invited_user",
                                                  "invited_user_id",
                                                  "invited_user_public_id",
                                                  "invited_user_description",
                                                  "date",
                                                  "parsed_datetime",
                                                  "invitation_text"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/invite/received/{invitation_id}": {
          "post": {
              "operationId": "y_handleInvitationReceived",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllInvitationsSent({\n\t\taccount_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Handle a received invitation",
              "description": "Accept or decline a connection invitation.",
              "parameters": [
                  {
                      "name": "invitation_id",
                      "required": true,
                      "in": "path",
                      "description": "The invitation ID.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "LINKEDIN",
                              "type": "object",
                              "properties": {
                                  "provider": {
                                      "type": "string",
                                      "enum": [
                                          "LINKEDIN"
                                      ]
                                  },
                                  "shared_secret": {
                                      "minLength": 1,
                                      "description": "This token provided by Linkedin is mandatory to handle received invitations. It can be retrieved along with each invitation using the List all invitations received route.",
                                      "type": "string"
                                  },
                                  "account_id": {
                                      "title": "UniqueId",
                                      "description": "A unique identifier.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "action": {
                                      "type": "string",
                                      "enum": [
                                          "accept",
                                          "decline"
                                      ]
                                  }
                              },
                              "required": [
                                  "provider",
                                  "shared_secret",
                                  "account_id",
                                  "action"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "UserInvitationHandled"
                                          ]
                                      },
                                      "status": {
                                          "anyOf": [
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "ACCEPTED"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "DECLINED"
                                                  ]
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/me": {
          "get": {
              "operationId": "y_getAccountOwnerProfile",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getOwnProfile(account_id)\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve own profile",
              "description": "Retrieve informations about account owner.",
              "parameters": [
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "anyOf": [
                                      {
                                          "title": "LinkedIn",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "LINKEDIN"
                                                  ]
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "entity_urn": {
                                                  "type": "string"
                                              },
                                              "object_urn": {
                                                  "type": "string"
                                              },
                                              "first_name": {
                                                  "type": "string"
                                              },
                                              "last_name": {
                                                  "type": "string"
                                              },
                                              "profile_picture_url": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "public_profile_url": {
                                                  "type": "string"
                                              },
                                              "public_identifier": {
                                                  "type": "string"
                                              },
                                              "headline": {
                                                  "type": "string"
                                              },
                                              "location": {
                                                  "type": "string"
                                              },
                                              "email": {
                                                  "type": "string"
                                              },
                                              "premium": {
                                                  "type": "boolean"
                                              },
                                              "open_profile": {
                                                  "type": "boolean"
                                              },
                                              "occupation": {
                                                  "type": "string"
                                              },
                                              "recruiter": {
                                                  "anyOf": [
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "owner_seat_id": {
                                                                  "type": "string"
                                                              },
                                                              "contract_id": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "owner_seat_id",
                                                              "contract_id"
                                                          ]
                                                      },
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "error": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "MULTIPLE_SESSIONS"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "DISCONNECTED"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "error"
                                                          ]
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "sales_navigator": {
                                                  "anyOf": [
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "owner_seat_id": {
                                                                  "type": "string"
                                                              },
                                                              "contract_id": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "owner_seat_id",
                                                              "contract_id"
                                                          ]
                                                      },
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "error": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "DISCONNECTED"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "error"
                                                          ]
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "provider_id",
                                              "entity_urn",
                                              "object_urn",
                                              "first_name",
                                              "last_name",
                                              "profile_picture_url",
                                              "email",
                                              "premium",
                                              "open_profile",
                                              "recruiter",
                                              "sales_navigator",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Telegram",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TELEGRAM"
                                                  ]
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "self": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "contact": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "mutual_contact": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "deleted": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "bot": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "verified": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "restricted": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "fake": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "premium": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "close_friend": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "first_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "last_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "username": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "phone": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "profile_picture_url": {
                                                  "type": "string"
                                              },
                                              "status": {
                                                  "anyOf": [
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "name": {
                                                                  "type": "string"
                                                              },
                                                              "expires": {
                                                                  "type": "number"
                                                              },
                                                              "was_online": {
                                                                  "type": "number"
                                                              }
                                                          },
                                                          "required": [
                                                              "name"
                                                          ]
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "restriction_reason": {
                                                  "anyOf": [
                                                      {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "platform": {
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "type": "string"
                                                                  },
                                                                  "text": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "platform",
                                                                  "reason",
                                                                  "text"
                                                              ]
                                                          }
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "lang_code": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "provider_id",
                                              "profile_picture_url",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Twitter",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TWITTER"
                                                  ]
                                              },
                                              "id": {
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "screen_name": {
                                                  "type": "string"
                                              },
                                              "location": {
                                                  "type": "string"
                                              },
                                              "description": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "url": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "entities": {
                                                  "type": "object",
                                                  "properties": {
                                                      "description": {
                                                          "type": "object",
                                                          "properties": {
                                                              "urls": {
                                                                  "type": "array",
                                                                  "items": {}
                                                              }
                                                          },
                                                          "required": [
                                                              "urls"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "description"
                                                  ]
                                              },
                                              "protected": {
                                                  "type": "boolean"
                                              },
                                              "verified": {
                                                  "type": "boolean"
                                              },
                                              "followers_count": {
                                                  "type": "number"
                                              },
                                              "friends_count": {
                                                  "type": "number"
                                              },
                                              "listed_count": {
                                                  "type": "number"
                                              },
                                              "favourites_count": {
                                                  "type": "number"
                                              },
                                              "statuses_count": {
                                                  "type": "number"
                                              },
                                              "created_at": {
                                                  "type": "string"
                                              },
                                              "profile_banner_url": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "profile_image_url_https": {
                                                  "type": "string"
                                              },
                                              "default_profile": {
                                                  "type": "boolean"
                                              },
                                              "default_profile_image": {
                                                  "type": "boolean"
                                              },
                                              "withheld_in_countries": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "followed_by": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "following": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "follow_request_sent": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "has_extended_profile": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "notifications": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "advertiser_account_type": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "business_profile_state": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "require_some_consent": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "id",
                                              "name",
                                              "screen_name",
                                              "location",
                                              "description",
                                              "url",
                                              "entities",
                                              "protected",
                                              "verified",
                                              "followers_count",
                                              "friends_count",
                                              "listed_count",
                                              "favourites_count",
                                              "statuses_count",
                                              "created_at",
                                              "profile_image_url_https",
                                              "default_profile",
                                              "default_profile_image",
                                              "withheld_in_countries",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Gmail",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "GMAIL"
                                                  ]
                                              },
                                              "email": {
                                                  "type": "string"
                                              },
                                              "messages_total": {
                                                  "type": "number"
                                              },
                                              "threads_total": {
                                                  "type": "number"
                                              },
                                              "aliases": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "email": {
                                                              "type": "string"
                                                          },
                                                          "display_name": {
                                                              "type": "string"
                                                          },
                                                          "reply_to": {
                                                              "type": "string"
                                                          },
                                                          "signature": {
                                                              "type": "string"
                                                          },
                                                          "is_primary": {
                                                              "type": "boolean"
                                                          },
                                                          "is_default": {
                                                              "type": "boolean"
                                                          },
                                                          "verification_status": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "email"
                                                      ]
                                                  }
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "email",
                                              "aliases",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Outlook",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "OUTLOOK"
                                                  ]
                                              },
                                              "id": {
                                                  "type": "string"
                                              },
                                              "email": {
                                                  "type": "string"
                                              },
                                              "display_name": {
                                                  "type": "string"
                                              },
                                              "given_name": {
                                                  "type": "string"
                                              },
                                              "surname": {
                                                  "type": "string"
                                              },
                                              "user_principal_name": {
                                                  "type": "string"
                                              },
                                              "job_title": {
                                                  "type": "string"
                                              },
                                              "mobile_phone": {
                                                  "type": "string"
                                              },
                                              "preferred_language": {
                                                  "type": "string"
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "id",
                                              "email",
                                              "display_name",
                                              "given_name",
                                              "surname",
                                              "user_principal_name",
                                              "job_title",
                                              "mobile_phone",
                                              "preferred_language",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Imap",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "IMAP"
                                                  ]
                                              },
                                              "connection_params": {
                                                  "type": "object",
                                                  "properties": {
                                                      "imap": {
                                                          "type": "object",
                                                          "properties": {
                                                              "username": {
                                                                  "type": "string"
                                                              },
                                                              "port": {
                                                                  "type": "number"
                                                              },
                                                              "host": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "username",
                                                              "port",
                                                              "host"
                                                          ]
                                                      },
                                                      "smtp": {
                                                          "type": "object",
                                                          "properties": {
                                                              "username": {
                                                                  "type": "string"
                                                              },
                                                              "port": {
                                                                  "type": "number"
                                                              },
                                                              "host": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "username",
                                                              "port",
                                                              "host"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "imap",
                                                      "smtp"
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "AccountOwnerProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "connection_params",
                                              "object"
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nUser not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "429": {
                      "description": "\n        ## Too Many Requests\n        ### Too many requests\n        The provider cannot accept any more requests at the moment. Please try again later.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "TooManyRequestsResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/too_many_requests"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              429
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/relations": {
          "get": {
              "operationId": "y_getRelations",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllRelations({\n\t\taccount_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all relations",
              "description": "Returns a list of all the relations of an account. Ensure careful implementation of this action and consult provider limits and restrictions: https://developer.unipile.com/docs/provider-limits-and-restrictions",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 1000,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 1000.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The account to get the relations from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "UserRelationsList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "UserRelation"
                                                      ]
                                                  },
                                                  "first_name": {
                                                      "type": "string"
                                                  },
                                                  "last_name": {
                                                      "type": "string"
                                                  },
                                                  "headline": {
                                                      "type": "string"
                                                  },
                                                  "public_identifier": {
                                                      "type": "string"
                                                  },
                                                  "public_profile_url": {
                                                      "type": "string"
                                                  },
                                                  "created_at": {
                                                      "type": "number"
                                                  },
                                                  "member_id": {
                                                      "type": "string"
                                                  },
                                                  "member_urn": {
                                                      "type": "string"
                                                  },
                                                  "connection_urn": {
                                                      "type": "string"
                                                  },
                                                  "profile_picture_url": {
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "first_name",
                                                  "last_name",
                                                  "headline",
                                                  "public_identifier",
                                                  "public_profile_url",
                                                  "created_at",
                                                  "member_id",
                                                  "member_urn",
                                                  "connection_urn"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nUser not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/{identifier}": {
          "get": {
              "operationId": "y_getProfileByIdentifier",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst identifier = \"identifier\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getProfile({\n\t\taccount_id,\n\t\tidentifier,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve a profile",
              "description": "Retrieve the profile of a user. Ensure careful implementation of this action and consult provider limits and restrictions: https://developer.unipile.com/docs/provider-limits-and-restrictions",
              "parameters": [
                  {
                      "name": "linkedin_sections",
                      "required": false,
                      "in": "query",
                      "description": "The sections that should be synchronized on Linkedin calls.",
                      "schema": {
                          "anyOf": [
                              {
                                  "description": "A string with a section name.",
                                  "type": "string",
                                  "enum": [
                                      "experience",
                                      "education",
                                      "languages",
                                      "skills",
                                      "certifications",
                                      "about"
                                  ]
                              },
                              {
                                  "description": "A string with * character that stands for all sections.",
                                  "type": "string",
                                  "enum": [
                                      "*"
                                  ]
                              },
                              {
                                  "description": "An array of section names.",
                                  "type": "array",
                                  "items": {
                                      "description": "A string with a section name.",
                                      "type": "string",
                                      "enum": [
                                          "experience",
                                          "education",
                                          "languages",
                                          "skills",
                                          "certifications",
                                          "about"
                                      ]
                                  }
                              }
                          ]
                      }
                  },
                  {
                      "name": "linkedin_api",
                      "required": false,
                      "in": "query",
                      "description": "The LinkedIn API that should be used to get the profile (relative features must be subscribed), if different from classic.",
                      "schema": {
                          "enum": [
                              "recruiter",
                              "sales_navigator"
                          ],
                          "type": "string"
                      }
                  },
                  {
                      "name": "notify",
                      "required": false,
                      "in": "query",
                      "description": "Whether the profile visit should be notified to the viewee or not. Default is false.",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "identifier",
                      "required": true,
                      "in": "path",
                      "description": "Can be the provider’s internal id OR the provider’s public id of the requested user.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "anyOf": [
                                      {
                                          "title": "LinkedIn",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "LINKEDIN"
                                                  ]
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "public_identifier": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "first_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "last_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "headline": {
                                                  "type": "string"
                                              },
                                              "summary": {
                                                  "type": "string"
                                              },
                                              "contact_info": {
                                                  "type": "object",
                                                  "properties": {
                                                      "emails": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "phones": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "adresses": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "socials": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "type": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "type",
                                                                  "name"
                                                              ]
                                                          }
                                                      }
                                                  }
                                              },
                                              "birthdate": {
                                                  "type": "object",
                                                  "properties": {
                                                      "month": {
                                                          "type": "number"
                                                      },
                                                      "day": {
                                                          "type": "number"
                                                      }
                                                  },
                                                  "required": [
                                                      "month",
                                                      "day"
                                                  ]
                                              },
                                              "primary_locale": {
                                                  "type": "object",
                                                  "properties": {
                                                      "country": {
                                                          "type": "string"
                                                      },
                                                      "language": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "country",
                                                      "language"
                                                  ]
                                              },
                                              "location": {
                                                  "type": "string"
                                              },
                                              "websites": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "profile_picture_url": {
                                                  "type": "string"
                                              },
                                              "background_picture_url": {
                                                  "type": "string"
                                              },
                                              "hashtags": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "can_send_inmail": {
                                                  "type": "boolean"
                                              },
                                              "is_open_profile": {
                                                  "type": "boolean"
                                              },
                                              "is_premium": {
                                                  "type": "boolean"
                                              },
                                              "is_influencer": {
                                                  "type": "boolean"
                                              },
                                              "is_creator": {
                                                  "type": "boolean"
                                              },
                                              "is_hiring": {
                                                  "type": "boolean"
                                              },
                                              "is_open_to_work": {
                                                  "type": "boolean"
                                              },
                                              "is_saved_lead": {
                                                  "type": "boolean"
                                              },
                                              "is_crm_imported": {
                                                  "type": "boolean"
                                              },
                                              "is_relationship": {
                                                  "type": "boolean"
                                              },
                                              "is_self": {
                                                  "type": "boolean"
                                              },
                                              "invitation": {
                                                  "type": "object",
                                                  "properties": {
                                                      "type": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "SENT"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "RECEIVED"
                                                                  ]
                                                              }
                                                          ]
                                                      },
                                                      "status": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "PENDING"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "IGNORED"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "WITHDRAWN"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "type",
                                                      "status"
                                                  ]
                                              },
                                              "work_experience": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "position": {
                                                              "type": "string"
                                                          },
                                                          "company_id": {
                                                              "type": "string"
                                                          },
                                                          "company": {
                                                              "type": "string"
                                                          },
                                                          "location": {
                                                              "type": "string"
                                                          },
                                                          "description": {
                                                              "type": "string"
                                                          },
                                                          "current": {
                                                              "type": "boolean"
                                                          },
                                                          "status": {
                                                              "type": "string"
                                                          },
                                                          "start": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "end": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "position",
                                                          "company",
                                                          "start",
                                                          "end"
                                                      ]
                                                  }
                                              },
                                              "volunteering_experience": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "company": {
                                                              "type": "string"
                                                          },
                                                          "description": {
                                                              "type": "string"
                                                          },
                                                          "role": {
                                                              "type": "string"
                                                          },
                                                          "cause": {
                                                              "type": "string"
                                                          },
                                                          "start": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "end": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "company",
                                                          "description",
                                                          "role",
                                                          "cause",
                                                          "start",
                                                          "end"
                                                      ]
                                                  }
                                              },
                                              "education": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "degree": {
                                                              "type": "string"
                                                          },
                                                          "school": {
                                                              "type": "string"
                                                          },
                                                          "field_of_study": {
                                                              "type": "string"
                                                          },
                                                          "start": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "end": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "school",
                                                          "start",
                                                          "end"
                                                      ]
                                                  }
                                              },
                                              "skills": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "endorsement_count": {
                                                              "type": "number"
                                                          }
                                                      },
                                                      "required": [
                                                          "name",
                                                          "endorsement_count"
                                                      ]
                                                  }
                                              },
                                              "languages": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "proficiency": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "name"
                                                      ]
                                                  }
                                              },
                                              "certifications": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "organization": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "name",
                                                          "organization"
                                                      ]
                                                  }
                                              },
                                              "follower_count": {
                                                  "type": "number"
                                              },
                                              "connections_count": {
                                                  "type": "number"
                                              },
                                              "shared_connections_count": {
                                                  "type": "number"
                                              },
                                              "network_distance": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "FIRST_DEGREE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "SECOND_DEGREE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "THIRD_DEGREE"
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "OUT_OF_NETWORK"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "public_profile_url": {
                                                  "type": "string"
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "UserProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "provider_id",
                                              "public_identifier",
                                              "first_name",
                                              "last_name",
                                              "headline",
                                              "websites",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Whatsapp",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "WHATSAPP"
                                                  ]
                                              },
                                              "id": {
                                                  "type": "string"
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "UserProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "id",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Instagram",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "INSTAGRAM"
                                                  ]
                                              },
                                              "pk": {
                                                  "type": "number"
                                              },
                                              "username": {
                                                  "type": "string"
                                              },
                                              "full_name": {
                                                  "type": "string"
                                              },
                                              "profile_pic_url": {
                                                  "type": "string"
                                              },
                                              "biography": {
                                                  "type": "string"
                                              },
                                              "follower_count": {
                                                  "type": "number"
                                              },
                                              "following_count": {
                                                  "type": "number"
                                              },
                                              "is_verified": {
                                                  "type": "boolean"
                                              },
                                              "is_business": {
                                                  "type": "boolean"
                                              },
                                              "is_private": {
                                                  "type": "boolean"
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "UserProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "pk",
                                              "username",
                                              "full_name",
                                              "profile_pic_url",
                                              "biography",
                                              "follower_count",
                                              "following_count",
                                              "is_verified",
                                              "is_business",
                                              "is_private",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Telegram",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TELEGRAM"
                                                  ]
                                              },
                                              "provider_id": {
                                                  "type": "string"
                                              },
                                              "self": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "contact": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "mutual_contact": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "deleted": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "bot": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "verified": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "restricted": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "fake": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "premium": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "close_friend": {
                                                  "anyOf": [
                                                      {
                                                          "type": "boolean"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "first_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "last_name": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "username": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "phone": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "profile_picture_url": {
                                                  "type": "string"
                                              },
                                              "status": {
                                                  "anyOf": [
                                                      {
                                                          "type": "object",
                                                          "properties": {
                                                              "name": {
                                                                  "type": "string"
                                                              },
                                                              "expires": {
                                                                  "type": "number"
                                                              },
                                                              "was_online": {
                                                                  "type": "number"
                                                              }
                                                          },
                                                          "required": [
                                                              "name"
                                                          ]
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "restriction_reason": {
                                                  "anyOf": [
                                                      {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "platform": {
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "type": "string"
                                                                  },
                                                                  "text": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "platform",
                                                                  "reason",
                                                                  "text"
                                                              ]
                                                          }
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "lang_code": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "UserProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "provider_id",
                                              "profile_picture_url",
                                              "object"
                                          ]
                                      },
                                      {
                                          "title": "Twitter",
                                          "type": "object",
                                          "properties": {
                                              "provider": {
                                                  "type": "string",
                                                  "enum": [
                                                      "TWITTER"
                                                  ]
                                              },
                                              "id": {
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "screen_name": {
                                                  "type": "string"
                                              },
                                              "location": {
                                                  "type": "string"
                                              },
                                              "description": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "url": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "entities": {
                                                  "type": "object",
                                                  "properties": {
                                                      "description": {
                                                          "type": "object",
                                                          "properties": {
                                                              "urls": {
                                                                  "type": "array",
                                                                  "items": {}
                                                              }
                                                          },
                                                          "required": [
                                                              "urls"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "description"
                                                  ]
                                              },
                                              "protected": {
                                                  "type": "boolean"
                                              },
                                              "verified": {
                                                  "type": "boolean"
                                              },
                                              "followers_count": {
                                                  "type": "number"
                                              },
                                              "friends_count": {
                                                  "type": "number"
                                              },
                                              "listed_count": {
                                                  "type": "number"
                                              },
                                              "favourites_count": {
                                                  "type": "number"
                                              },
                                              "statuses_count": {
                                                  "type": "number"
                                              },
                                              "created_at": {
                                                  "type": "string"
                                              },
                                              "profile_banner_url": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "profile_image_url_https": {
                                                  "type": "string"
                                              },
                                              "default_profile": {
                                                  "type": "boolean"
                                              },
                                              "default_profile_image": {
                                                  "type": "boolean"
                                              },
                                              "withheld_in_countries": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  }
                                              },
                                              "followed_by": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "following": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "follow_request_sent": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "has_extended_profile": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "notifications": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "advertiser_account_type": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "business_profile_state": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "string"
                                                      }
                                                  ]
                                              },
                                              "require_some_consent": {
                                                  "anyOf": [
                                                      {
                                                          "nullable": true
                                                      },
                                                      {
                                                          "type": "boolean"
                                                      }
                                                  ]
                                              },
                                              "object": {
                                                  "type": "string",
                                                  "enum": [
                                                      "UserProfile"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "provider",
                                              "id",
                                              "name",
                                              "screen_name",
                                              "location",
                                              "description",
                                              "url",
                                              "entities",
                                              "protected",
                                              "verified",
                                              "followers_count",
                                              "friends_count",
                                              "listed_count",
                                              "favourites_count",
                                              "statuses_count",
                                              "created_at",
                                              "profile_image_url_https",
                                              "default_profile",
                                              "default_profile_image",
                                              "withheld_in_countries",
                                              "object"
                                          ]
                                      }
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nUser not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "429": {
                      "description": "\n        ## Too Many Requests\n        ### Too many requests\n        The provider cannot accept any more requests at the moment. Please try again later.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "TooManyRequestsResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/too_many_requests"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              429
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "\n          ## Service Unavailable\n          ### Network down\n          Network is down on server side. Please wait a moment and retry.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/invite": {
          "post": {
              "operationId": "y_addUserByIdentifier",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst provider_id = \"provider id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.sendInvitation({\n\t\taccount_id,\n\t\tprovider_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Send an invitation",
              "description": "Send an invitation to add someone to your contacts. Ensure careful implementation of this action and consult provider limits and restrictions: https://developer.unipile.com/docs/provider-limits-and-restrictions",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "provider_id": {
                                      "description": "The id of the user to add. It has to be the provider’s id.",
                                      "type": "string"
                                  },
                                  "account_id": {
                                      "description": "The id of the account where the user will be added.",
                                      "type": "string"
                                  },
                                  "user_email": {
                                      "format": "emailLike",
                                      "description": "The email address of the user when it's required (Linkedin specific).",
                                      "type": "string"
                                  },
                                  "message": {
                                      "maxLength": 300,
                                      "description": "An optional message to go with the invitation (max 300 chars).",
                                      "type": "string"
                                  }
                              },
                              "required": [
                                  "provider_id",
                                  "account_id"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "UserInvitationSent"
                                          ]
                                      },
                                      "invitation_id": {
                                          "type": "string"
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "invitation_id"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "\n          ## Forbidden\n          ### Feature not subscribed\n          The requested feature has either not been subscribed or not been authenticated properly.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n## Not Found\n### Resource not found\nThe requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "501": {
                      "description": "\n        ## Not Implemented\n        ### Missing feature\n        Requested feature is planned but has not been implemented yet.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotImplementedErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/feature_not_implemented"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              501
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "502": {
                      "description": "\n          ## Bad Request\n          ### Too many characters\n          The provided content exceeds the character limit.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/{identifier}/posts": {
          "get": {
              "operationId": "y_listAllPosts",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst identifier = \"identifier\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllPosts({\n\t\taccount_id,\n\t\tidentifier,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all posts",
              "description": "Returns a list of posts written by a user or a company.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 100.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "is_company",
                      "required": false,
                      "in": "query",
                      "description": "This parameter is related to LinkedIn only. Set it to \"true\" if the posts are from a company.",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "identifier",
                      "required": true,
                      "in": "path",
                      "description": "The entity's provider internal id. Starts with ACo for users, while for companies it's a series of numbers.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "PostList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "provider": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LINKEDIN"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "social_id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "share_url": {
                                                      "type": "string"
                                                  },
                                                  "title": {
                                                      "type": "string"
                                                  },
                                                  "text": {
                                                      "type": "string"
                                                  },
                                                  "date": {
                                                      "type": "string"
                                                  },
                                                  "parsed_datetime": {
                                                      "type": "string"
                                                  },
                                                  "reaction_counter": {
                                                      "type": "number"
                                                  },
                                                  "comment_counter": {
                                                      "type": "number"
                                                  },
                                                  "repost_counter": {
                                                      "type": "number"
                                                  },
                                                  "impressions_counter": {
                                                      "type": "number"
                                                  },
                                                  "author": {
                                                      "type": "object",
                                                      "properties": {
                                                          "public_identifier": {
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "is_company": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "public_identifier",
                                                          "name",
                                                          "is_company"
                                                      ]
                                                  },
                                                  "permissions": {
                                                      "type": "object",
                                                      "properties": {
                                                          "can_react": {
                                                              "type": "boolean"
                                                          },
                                                          "can_share": {
                                                              "type": "boolean"
                                                          },
                                                          "can_post_comments": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "can_react",
                                                          "can_share",
                                                          "can_post_comments"
                                                      ]
                                                  },
                                                  "is_repost": {
                                                      "type": "boolean"
                                                  },
                                                  "repost_id": {
                                                      "description": "The republication ID.",
                                                      "type": "string"
                                                  },
                                                  "reposted_by": {
                                                      "type": "object",
                                                      "properties": {
                                                          "public_identifier": {
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "is_company": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "public_identifier",
                                                          "name",
                                                          "is_company"
                                                      ]
                                                  },
                                                  "repost_content": {
                                                      "description": "The post shared in the current publication.",
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "date": {
                                                              "type": "string"
                                                          },
                                                          "parsed_datetime": {
                                                              "type": "string"
                                                          },
                                                          "author": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "public_identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "is_company": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "public_identifier",
                                                                  "name",
                                                                  "is_company"
                                                              ]
                                                          },
                                                          "text": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "date",
                                                          "parsed_datetime",
                                                          "author",
                                                          "text"
                                                      ]
                                                  },
                                                  "attachments": {
                                                      "type": "array",
                                                      "items": {
                                                          "anyOf": [
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "img"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "sticker": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "sticker"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "video"
                                                                          ]
                                                                      },
                                                                      "size": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "width": {
                                                                                  "type": "number"
                                                                              },
                                                                              "height": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "width",
                                                                              "height"
                                                                          ]
                                                                      },
                                                                      "gif": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "size",
                                                                      "gif"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "audio"
                                                                          ]
                                                                      },
                                                                      "duration": {
                                                                          "type": "number"
                                                                      },
                                                                      "voice_note": {
                                                                          "type": "boolean"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "voice_note"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "file"
                                                                          ]
                                                                      },
                                                                      "file_name": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type",
                                                                      "file_name"
                                                                  ]
                                                              },
                                                              {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "type": "string"
                                                                      },
                                                                      "file_size": {
                                                                          "type": "number"
                                                                      },
                                                                      "unavailable": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "mimetype": {
                                                                          "type": "string"
                                                                      },
                                                                      "url": {
                                                                          "type": "string"
                                                                      },
                                                                      "url_expires_at": {
                                                                          "type": "number"
                                                                      },
                                                                      "type": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "linkedin_post"
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "unavailable",
                                                                      "type"
                                                                  ]
                                                              }
                                                          ]
                                                      }
                                                  },
                                                  "poll": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "total_votes_count": {
                                                              "type": "number"
                                                          },
                                                          "question": {
                                                              "type": "string"
                                                          },
                                                          "is_open": {
                                                              "type": "boolean"
                                                          },
                                                          "options": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "title": "UniqueId",
                                                                          "description": "A unique identifier.",
                                                                          "minLength": 1,
                                                                          "type": "string"
                                                                      },
                                                                      "text": {
                                                                          "type": "string"
                                                                      },
                                                                      "win": {
                                                                          "type": "boolean"
                                                                      },
                                                                      "votes_count": {
                                                                          "type": "number"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "text",
                                                                      "win",
                                                                      "votes_count"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "total_votes_count",
                                                          "question",
                                                          "is_open",
                                                          "options"
                                                      ]
                                                  },
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Post"
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "provider",
                                                  "id",
                                                  "social_id",
                                                  "share_url",
                                                  "text",
                                                  "date",
                                                  "parsed_datetime",
                                                  "reaction_counter",
                                                  "comment_counter",
                                                  "repost_counter",
                                                  "impressions_counter",
                                                  "author",
                                                  "permissions",
                                                  "is_repost",
                                                  "attachments",
                                                  "object"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "paging": {
                                          "type": "object",
                                          "properties": {
                                              "start": {
                                                  "type": "number"
                                              },
                                              "page_count": {
                                                  "type": "number"
                                              },
                                              "total_count": {
                                                  "type": "number"
                                              }
                                          },
                                          "required": [
                                              "start",
                                              "page_count",
                                              "total_count"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor",
                                      "paging"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Recipient cannot be reached\n          One or more recipients might not have an account, or has a misspelled ID.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/users/invite/sent/{invitation_id}": {
          "delete": {
              "operationId": "y_cancelInvitation",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst invitation_id = \"invitation_id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.cancelInvitationSent({\n\t\taccount_id,\n\t\tinvitation_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Cancel an invitation",
              "description": "Cancel a pending invitation sent to someone.",
              "parameters": [
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "invitation_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the invitation to cancel.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Invitation canceled.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "InvitationCanceled"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Bad Request\n          ### api.Error.BadRequest.invalid_invitation_id.title\n          api.Error.BadRequest.invalid_invitation_id.detail\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin/projects": {
          "get": {
              "operationId": "c_getHiringProjects",
              "summary": "Retrieve Recruiter hiring projects",
              "description": "Retrieve list of LinkedIn Recruiter hiring projects.",
              "parameters": [
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "RecruiterHiringProjectList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "RecruiterHiringProject"
                                                      ]
                                                  },
                                                  "id": {
                                                      "type": "string"
                                                  },
                                                  "name": {
                                                      "type": "string"
                                                  },
                                                  "owner_name": {
                                                      "type": "string"
                                                  },
                                                  "owner_id": {
                                                      "type": "string"
                                                  },
                                                  "created_at": {
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "name",
                                                  "owner_name",
                                                  "owner_id",
                                                  "created_at"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {},
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin/company/{identifier}": {
          "get": {
              "operationId": "c_getCompanyProfile",
              "summary": "Retrieve a company profile",
              "description": "Get a company profile from its name or ID.",
              "parameters": [
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "identifier",
                      "required": true,
                      "in": "path",
                      "description": "The identifier of the company: either the public identifier, the ID or the URN.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "CompanyProfile"
                                          ]
                                      },
                                      "id": {
                                          "type": "string"
                                      },
                                      "name": {
                                          "type": "string"
                                      },
                                      "description": {
                                          "type": "string"
                                      },
                                      "entity_urn": {
                                          "type": "string"
                                      },
                                      "public_identifier": {
                                          "type": "string"
                                      },
                                      "profile_url": {
                                          "type": "string"
                                      },
                                      "tagline": {
                                          "type": "string"
                                      },
                                      "followers_count": {
                                          "type": "number"
                                      },
                                      "is_following": {
                                          "type": "boolean"
                                      },
                                      "is_employee": {
                                          "type": "boolean"
                                      },
                                      "messaging": {
                                          "type": "object",
                                          "properties": {
                                              "is_enabled": {
                                                  "type": "boolean"
                                              },
                                              "id": {
                                                  "type": "string"
                                              },
                                              "entity_urn": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "is_enabled"
                                          ]
                                      },
                                      "default_locale": {
                                          "type": "string"
                                      },
                                      "viewer_permissions": {
                                          "type": "object",
                                          "properties": {
                                              "canMembersInviteToFollow": {
                                                  "type": "boolean"
                                              },
                                              "canReadContentSuggestions": {
                                                  "type": "boolean"
                                              },
                                              "canReadMessages": {
                                                  "type": "boolean"
                                              },
                                              "canUpdateOrganizationProfile": {
                                                  "type": "boolean"
                                              },
                                              "canCreateOrganicShare": {
                                                  "type": "boolean"
                                              },
                                              "canReadAdminDashboard": {
                                                  "type": "boolean"
                                              },
                                              "canReadOrganizationActivity": {
                                                  "type": "boolean"
                                              },
                                              "canEditCurators": {
                                                  "type": "boolean"
                                              },
                                              "canManageOrganizationalPageFollow": {
                                                  "type": "boolean"
                                              },
                                              "canReadOrganizationFollowerAnalytics": {
                                                  "type": "boolean"
                                              },
                                              "canInviteMemberToFollow": {
                                                  "type": "boolean"
                                              },
                                              "canReadOrganizationLeadsAnalytics": {
                                                  "type": "boolean"
                                              },
                                              "canEditPendingAdministrators": {
                                                  "type": "boolean"
                                              },
                                              "canManageMessagingAccess": {
                                                  "type": "boolean"
                                              },
                                              "canSeeEmployeeExperienceAsMember": {
                                                  "type": "boolean"
                                              },
                                              "canEmployeesInviteToFollow": {
                                                  "type": "boolean"
                                              },
                                              "canSeeOrganizationAdministrativePage": {
                                                  "type": "boolean"
                                              }
                                          },
                                          "required": [
                                              "canMembersInviteToFollow",
                                              "canReadContentSuggestions",
                                              "canReadMessages",
                                              "canUpdateOrganizationProfile",
                                              "canCreateOrganicShare",
                                              "canReadAdminDashboard",
                                              "canReadOrganizationActivity",
                                              "canEditCurators",
                                              "canManageOrganizationalPageFollow",
                                              "canReadOrganizationFollowerAnalytics",
                                              "canInviteMemberToFollow",
                                              "canReadOrganizationLeadsAnalytics",
                                              "canEditPendingAdministrators",
                                              "canManageMessagingAccess",
                                              "canSeeEmployeeExperienceAsMember",
                                              "canEmployeesInviteToFollow",
                                              "canSeeOrganizationAdministrativePage"
                                          ]
                                      },
                                      "organization_type": {
                                          "anyOf": [
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "PUBLIC_COMPANY"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "EDUCATIONAL"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "SELF_EMPLOYED"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "GOVERNMENT_AGENCY"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "NON_PROFIT"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "SELF_OWNED"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "PRIVATELY_HELD"
                                                  ]
                                              },
                                              {
                                                  "type": "string",
                                                  "enum": [
                                                      "PARTNERSHIP"
                                                  ]
                                              }
                                          ]
                                      },
                                      "locations": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "is_headquarter": {
                                                      "type": "boolean"
                                                  },
                                                  "country": {
                                                      "type": "string"
                                                  },
                                                  "city": {
                                                      "type": "string"
                                                  },
                                                  "postalCode": {
                                                      "type": "string"
                                                  },
                                                  "street": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "description": {
                                                      "type": "string"
                                                  },
                                                  "area": {
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "is_headquarter",
                                                  "country",
                                                  "city",
                                                  "street"
                                              ]
                                          }
                                      },
                                      "logo": {
                                          "type": "string"
                                      },
                                      "localized_description": {
                                          "type": "array",
                                          "items": {
                                              "description": "In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...",
                                              "type": "object",
                                              "x-patternProperties": {
                                                  "^(.*)$": {
                                                      "type": "string"
                                                  }
                                              },
                                              "additionalProperties": true
                                          }
                                      },
                                      "localized_name": {
                                          "type": "array",
                                          "items": {
                                              "description": "In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...",
                                              "type": "object",
                                              "x-patternProperties": {
                                                  "^(.*)$": {
                                                      "type": "string"
                                                  }
                                              },
                                              "additionalProperties": true
                                          }
                                      },
                                      "localized_tagline": {
                                          "type": "array",
                                          "items": {
                                              "description": "In this localized object, the key corresponds to the locale of the value e.g. fr_FR, en_US...",
                                              "type": "object",
                                              "x-patternProperties": {
                                                  "^(.*)$": {
                                                      "type": "string"
                                                  }
                                              },
                                              "additionalProperties": true
                                          }
                                      },
                                      "industry": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          }
                                      },
                                      "activities": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          }
                                      },
                                      "employee_count": {
                                          "type": "number"
                                      },
                                      "website": {
                                          "type": "string"
                                      },
                                      "foundation_date": {
                                          "type": "string"
                                      },
                                      "phone": {
                                          "type": "string"
                                      },
                                      "insights": {
                                          "type": "object",
                                          "properties": {
                                              "employeesCount": {
                                                  "type": "object",
                                                  "properties": {
                                                      "totalCount": {
                                                          "type": "number"
                                                      },
                                                      "averageTenure": {
                                                          "type": "string"
                                                      },
                                                      "employeesCountGraph": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "date": {
                                                                      "type": "string"
                                                                  },
                                                                  "count": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "date",
                                                                  "count"
                                                              ]
                                                          }
                                                      },
                                                      "growthGraph": {
                                                          "type": "array",
                                                          "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "monthRange": {
                                                                      "type": "number"
                                                                  },
                                                                  "growthPercentage": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "monthRange",
                                                                  "growthPercentage"
                                                              ]
                                                          }
                                                      }
                                                  },
                                                  "required": [
                                                      "totalCount",
                                                      "averageTenure",
                                                      "employeesCountGraph",
                                                      "growthGraph"
                                                  ]
                                              }
                                          }
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "id",
                                      "name",
                                      "description",
                                      "entity_urn",
                                      "public_identifier",
                                      "profile_url",
                                      "followers_count",
                                      "is_following",
                                      "is_employee",
                                      "messaging",
                                      "default_locale",
                                      "viewer_permissions",
                                      "organization_type",
                                      "locations"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nCompany not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin": {
          "post": {
              "operationId": "c_getRawData",
              "summary": "Get raw data from any endpoint",
              "description": "This magic route is intended for advanced users who wish to use LinkedIn's features beyond our current capabilities. It enables you to create custom functionalities that are not yet supported by our platform, using connected accounts. To utilize this route, you will need to identify the specific endpoint containing the desired data using web developer tools on LinkedIn, and then copy the URL along with its parameters for implementation.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "title": "UniqueId",
                                      "description": "A unique identifier.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "request_url": {
                                      "title": "LinkedinRequestUrl",
                                      "description": "An url pointing to some Linkedin API feature",
                                      "pattern": "^https://www.linkedin.com/.*$",
                                      "type": "string"
                                  },
                                  "method": {
                                      "description": "The method to be used for the request to be performed. Default is GET.",
                                      "type": "string",
                                      "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE"
                                      ]
                                  },
                                  "headers": {
                                      "description": "A headers object to be added to requests if needed.",
                                      "type": "object",
                                      "x-patternProperties": {
                                          "^(.*)$": {
                                              "type": "string"
                                          }
                                      },
                                      "additionalProperties": true
                                  },
                                  "body": {
                                      "description": "A body object to be passed for POST requests.",
                                      "type": "object",
                                      "x-patternProperties": {
                                          "^(.*)$": {}
                                      },
                                      "additionalProperties": true
                                  },
                                  "query_params": {
                                      "description": "A query parameters object.",
                                      "type": "object",
                                      "x-patternProperties": {
                                          "^(.*)$": {}
                                      },
                                      "additionalProperties": true
                                  },
                                  "encoding": {
                                      "default": true,
                                      "description": "Whether the query params or the body (in case of x-www-form-urlencoded content) should be encoded on the go.",
                                      "type": "boolean"
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "request_url"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "LinkedinRawData"
                                          ]
                                      },
                                      "data": {}
                                  },
                                  "required": [
                                      "object",
                                      "data"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "\n          ## Bad Request\n          ### Malformed request\n          The given request has been rejected by the provider.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin/inmail_balance": {
          "get": {
              "operationId": "c_getInmailBalance",
              "summary": "Get inmail credit balance",
              "description": "Get balance for subscribed premium features.",
              "parameters": [
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "LinkedinInmailBalance"
                                          ]
                                      },
                                      "premium": {
                                          "anyOf": [
                                              {
                                                  "type": "number"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "recruiter": {
                                          "anyOf": [
                                              {
                                                  "type": "number"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "sales_navigator": {
                                          "anyOf": [
                                              {
                                                  "type": "number"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "premium",
                                      "recruiter",
                                      "sales_navigator"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "\n          ## Unprocessable Entity\n          ### Invalid account\n          Provided account is not designed for this feature.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnprocessableEntityResponseSchema",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_account",
                                              "errors/invalid_recipient",
                                              "errors/no_connection_with_recipient",
                                              "errors/blocked_recipient",
                                              "errors/unprocessable_entity",
                                              "errors/invalid_message",
                                              "errors/invalid_post",
                                              "errors/not_allowed_inmail",
                                              "errors/insufficient_credits",
                                              "errors/cannot_resend_yet",
                                              "errors/cannot_invite_attendee",
                                              "errors/parent_mail_not_found",
                                              "errors/invalid_reply_subject",
                                              "errors/invalid_headers",
                                              "errors/send_as_denied",
                                              "errors/invalid_folder",
                                              "errors/limit_too_high",
                                              "errors/unauthorized"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              422
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin/search/parameters": {
          "get": {
              "operationId": "c_getSearchParametersList",
              "summary": "Retrieve LinkedIn search parameters",
              "description": "LinkedIn doesn't accept raw text as search parameters, but IDs. This route will help you get the right IDs for your inputs. Check out our Guide with examples to master LinkedIn search : https://developer.unipile.com/docs/linkedin-search",
              "parameters": [
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 250,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 250.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "keywords",
                      "required": true,
                      "in": "query",
                      "description": "The keywords to start the search from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "type",
                      "required": true,
                      "in": "query",
                      "description": "The type of parameter for the requested search.",
                      "schema": {
                          "anyOf": [
                              {
                                  "title": "Common parameters",
                                  "type": "string",
                                  "enum": [
                                      "LOCATION",
                                      "PEOPLE",
                                      "COMPANY",
                                      "SCHOOL",
                                      "INDUSTRY",
                                      "SERVICE",
                                      "JOB_FUNCTION",
                                      "JOB_TITLE"
                                  ]
                              },
                              {
                                  "title": "Sales navigator specifics",
                                  "type": "string",
                                  "enum": [
                                      "GROUPS",
                                      "DEPARTMENT",
                                      "PERSONA",
                                      "ACCOUNT_LISTS",
                                      "LEAD_LISTS",
                                      "TECHNOLOGIES",
                                      "SAVED_ACCOUNTS",
                                      "SAVED_SEARCHES",
                                      "RECENT_SEARCHES"
                                  ]
                              },
                              {
                                  "title": "Recruiter specifics",
                                  "type": "string",
                                  "enum": [
                                      "GROUPS",
                                      "SKILL",
                                      "DEPARTMENT",
                                      "HIRING_PROJECTS",
                                      "SAVED_SEARCHES",
                                      "SAVED_FILTERS"
                                  ]
                              }
                          ]
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "LinkedinSearchParametersList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "LinkedinSearchParameter"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "title": {
                                                      "type": "string"
                                                  },
                                                  "additional_data": {
                                                      "type": "object",
                                                      "x-patternProperties": {
                                                          "^(.*)$": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "type": "number"
                                                                  },
                                                                  {
                                                                      "type": "boolean"
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "additionalProperties": true
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "title"
                                              ]
                                          }
                                      },
                                      "paging": {
                                          "type": "object",
                                          "properties": {
                                              "page_count": {
                                                  "type": "number"
                                              }
                                          },
                                          "required": [
                                              "page_count"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "paging"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "\n          ## Bad Request\n          ### Invalid parameters\n          One or more request parameters are invalid or missing.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/linkedin/search": {
          "post": {
              "operationId": "c_search",
              "summary": "Perform Linkedin search",
              "description": "Search people and companies from the Linkedin Classic as well as Sales Navigator APIs. Check out our Guide with examples to master LinkedIn search : https://developer.unipile.com/docs/linkedin-search",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 0,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. Can bet set up to 100 results for Sales Navigator, but Linkedin Classic shouldn't exceed 50.",
                          "default": 10,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The ID of the account to trigger the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "anyOf": [
                                  {
                                      "title": "Classic - People",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "classic"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "people"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "industry": {
                                              "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "location": {
                                              "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATIONS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "profile_language": {
                                              "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGE.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 2,
                                                  "maxLength": 2,
                                                  "type": "string"
                                              }
                                          },
                                          "network_distance": {
                                              "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTIONS.",
                                              "type": "array",
                                              "items": {
                                                  "type": "number",
                                                  "enum": [
                                                      1,
                                                      2,
                                                      3
                                                  ]
                                              }
                                          },
                                          "company": {
                                              "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : CURRENT COMPANY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "past_company": {
                                              "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : PAST COMPANY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "school": {
                                              "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.\nLinkedin native filter : SCHOOL.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "service": {
                                              "description": "The ID of the parameter. Use type SERVICE on the List search parameters route to find out the right ID.\nLinkedin native filter : SERVICE CATEGORIES.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "connections_of": {
                                              "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : CONNECTIONS OF.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "followers_of": {
                                              "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : FOLLOWERS OF.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "open_to": {
                                              "description": "Linkedin native filter : OPEN TO.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "proBono",
                                                      "boardMember"
                                                  ]
                                              }
                                          },
                                          "advanced_keywords": {
                                              "type": "object",
                                              "properties": {
                                                  "first_name": {
                                                      "description": "Linkedin native filter : KEYWORDS / FIRST NAME.",
                                                      "type": "string"
                                                  },
                                                  "last_name": {
                                                      "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                      "type": "string"
                                                  },
                                                  "title": {
                                                      "description": "Linkedin native filter : KEYWORDS / TITLE.",
                                                      "type": "string"
                                                  },
                                                  "company": {
                                                      "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                      "type": "string"
                                                  },
                                                  "school": {
                                                      "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                      "type": "string"
                                                  }
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Classic - Companies",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "classic"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "companies"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "industry": {
                                              "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "location": {
                                              "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATIONS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "has_job_offers": {
                                              "description": "Linkedin native filter : JOB LISTINGS ON LINKEDIN.",
                                              "type": "boolean"
                                          },
                                          "headcount": {
                                              "description": "Linkedin native filter : COMPANY SIZE.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              11,
                                                              51,
                                                              201,
                                                              501,
                                                              1001,
                                                              5001,
                                                              10001
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              10,
                                                              50,
                                                              200,
                                                              500,
                                                              1000,
                                                              5000,
                                                              10000
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "network_distance": {
                                              "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTIONS.",
                                              "type": "array",
                                              "items": {
                                                  "type": "number",
                                                  "enum": [
                                                      1,
                                                      2,
                                                      3
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Classic - POSTS",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "classic"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "posts"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "sort_by": {
                                              "description": "Default value is relevance.\nLinkedin native filter : SORT BY.",
                                              "type": "string",
                                              "enum": [
                                                  "relevance",
                                                  "date"
                                              ]
                                          },
                                          "date_posted": {
                                              "description": "Linkedin native filter : DATE POSTED.",
                                              "type": "string",
                                              "enum": [
                                                  "past_day",
                                                  "past_week",
                                                  "past_month"
                                              ]
                                          },
                                          "content_type": {
                                              "description": "Linkedin native filter : CONTENT TYPE.",
                                              "type": "string",
                                              "enum": [
                                                  "videos",
                                                  "images",
                                                  "live_videos",
                                                  "collaborative_articles",
                                                  "documents"
                                              ]
                                          },
                                          "posted_by": {
                                              "minProperties": 1,
                                              "type": "object",
                                              "properties": {
                                                  "member": {
                                                      "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : FROM MEMBER.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "company": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : FROM COMPANY.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "me": {
                                                      "description": "Linkedin native filter : POSTED BY [ME].",
                                                      "type": "boolean"
                                                  },
                                                  "first_connections": {
                                                      "description": "Linkedin native filter : POSTED BY [1ST CONNECTIONS].",
                                                      "type": "boolean"
                                                  },
                                                  "people_you_follow": {
                                                      "description": "Linkedin native filter : POSTED BY [PEOPLE YOU FOLLOW].",
                                                      "type": "boolean"
                                                  }
                                              }
                                          },
                                          "mentioning": {
                                              "minProperties": 1,
                                              "type": "object",
                                              "properties": {
                                                  "member": {
                                                      "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : MENTIONING MEMBER.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "company": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : MENTIONING COMPANY.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "author": {
                                              "minProperties": 1,
                                              "type": "object",
                                              "properties": {
                                                  "industry": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : AUTHOR INDUSTRY.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "company": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : AUTHOR COMPANY.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "keywords": {
                                                      "description": "Linkedin native filter : AUTHOR KEYWORDS.",
                                                      "type": "string"
                                                  }
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Classic - JOBS",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "classic"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "jobs"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "sort_by": {
                                              "description": "Default value is relevance.\nLinkedin native filter : SORT BY.",
                                              "type": "string",
                                              "enum": [
                                                  "relevance",
                                                  "date"
                                              ]
                                          },
                                          "date_posted": {
                                              "description": "The timespan in days since today for the filter to be applied.\nLinkedin native filter : DATE POSTED.",
                                              "type": "number"
                                          },
                                          "region": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : GLOBAL LOCATION.",
                                              "type": "string"
                                          },
                                          "location": {
                                              "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATION.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "location_within_area": {
                                              "description": "The search zone around the location in miles.\nLinkedin native filter : DISTANCE.",
                                              "type": "number"
                                          },
                                          "industry": {
                                              "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "seniority": {
                                              "description": "Linkedin native filter : EXPERIENCE LEVEL.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "executive",
                                                      "director",
                                                      "mid_senior",
                                                      "associate",
                                                      "entry",
                                                      "intern"
                                                  ]
                                              }
                                          },
                                          "function": {
                                              "description": "The ID of the parameter. Use type JOB_FUNCTION on the List search parameters route to find out the right ID.\nLinkedin native filter : JOB FUNCTION.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "role": {
                                              "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.\nLinkedin native filter : TITLE.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "job_type": {
                                              "description": "Linkedin native filter : JOB TYPE.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "full_time",
                                                      "part_time",
                                                      "contract",
                                                      "temporary",
                                                      "volunteer",
                                                      "internship",
                                                      "other"
                                                  ]
                                              }
                                          },
                                          "company": {
                                              "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : COMPANY.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "presence": {
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "on_site",
                                                      "hybrid",
                                                      "remote"
                                                  ]
                                              }
                                          },
                                          "easy_apply": {
                                              "description": "Linkedin native filter : EASY APPLY.",
                                              "type": "boolean"
                                          },
                                          "has_verifications": {
                                              "description": "Linkedin native filter : HAS VERIFICATIONS.",
                                              "type": "boolean"
                                          },
                                          "under_10_applicants": {
                                              "description": "Linkedin native filter : UNDER 10 APPLICANTS.",
                                              "type": "boolean"
                                          },
                                          "in_your_network": {
                                              "description": "Linkedin native filter : IN YOUR NETWORK.",
                                              "type": "boolean"
                                          },
                                          "fair_chance_employer": {
                                              "description": "Linkedin native filter : FAIR CHANCE EMPLOYER.",
                                              "type": "boolean"
                                          },
                                          "benefits": {
                                              "description": "Linkedin native filter : BENEFITS.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "medical_insurance",
                                                      "vision_insurance",
                                                      "dental_insurance",
                                                      "disability_insurance",
                                                      "401(k)",
                                                      "pension_plan",
                                                      "paid_maternity_leave",
                                                      "paid_paternity_leave",
                                                      "commuter_benefits",
                                                      "student_loan_assistance",
                                                      "tuition_assistance"
                                                  ]
                                              }
                                          },
                                          "commitments": {
                                              "description": "Linkedin native filter : COMMITMENTS.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "career_growth_and_learning",
                                                      "diversity_equity_and_inclusion",
                                                      "environmental_sustainability",
                                                      "social_impact",
                                                      "work_life_balance"
                                                  ]
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Sales Navigator - People",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "sales_navigator"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "people"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "saved_search_id": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                              "type": "string"
                                          },
                                          "recent_search_id": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type RECENT_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                              "type": "string"
                                          },
                                          "location": {
                                              "description": "Linkedin native filter : GEOGRAPHY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "industry": {
                                              "description": "Linkedin native filter : INDUSTRY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "first_name": {
                                              "description": "Linkedin native filter : FIRST NAME.",
                                              "type": "string"
                                          },
                                          "last_name": {
                                              "description": "Linkedin native filter : LAST NAME.",
                                              "type": "string"
                                          },
                                          "tenure": {
                                              "description": "Linkedin native filter : YEARS OF EXPERIENCE.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              0,
                                                              1,
                                                              3,
                                                              6,
                                                              10
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              2,
                                                              5,
                                                              10
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "groups": {
                                              "description": "The ID of the parameter. Use type GROUPS on the List search parameters route to find out the right ID.\nLinkedin native filter : GROUPS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "school": {
                                              "description": "Linkedin native filter : SCHOOL.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "profile_language": {
                                              "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGE.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 2,
                                                  "maxLength": 2,
                                                  "type": "string"
                                              }
                                          },
                                          "company": {
                                              "description": "Linkedin native filter : CURRENT COMPANY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "company_headcount": {
                                              "description": "Linkedin native filter : COMPANY HEADCOUNT.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              11,
                                                              51,
                                                              201,
                                                              501,
                                                              1001,
                                                              5001,
                                                              10001
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              10,
                                                              50,
                                                              200,
                                                              500,
                                                              1000,
                                                              5000,
                                                              10000
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "company_type": {
                                              "description": "Linkedin native filter : COMPANY TYPE.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "public_company",
                                                      "privately_held",
                                                      "non_profit",
                                                      "educational_institution",
                                                      "partnership",
                                                      "self_employed",
                                                      "self_owned",
                                                      "government_agency"
                                                  ]
                                              }
                                          },
                                          "company_location": {
                                              "description": "Linkedin native filter : COMPANY HEADQUARTERS LOCATION.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "tenure_at_company": {
                                              "description": "Linkedin native filter : YEARS IN CURRENT COMPANY.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              0,
                                                              1,
                                                              3,
                                                              6,
                                                              10
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              2,
                                                              5,
                                                              10
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "past_company": {
                                              "description": "Linkedin native filter : PAST COMPANY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "function": {
                                              "description": "Linkedin native filter : FUNCTION.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "role": {
                                              "description": "Linkedin native filter : CURRENT JOB TITLE.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "tenure_at_role": {
                                              "description": "Linkedin native filter : YEARS IN CURRENT POSITION.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              0,
                                                              1,
                                                              3,
                                                              6,
                                                              10
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              2,
                                                              5,
                                                              10
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "seniority": {
                                              "description": "Linkedin native filter : SENIORITY LEVEL.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "owner/partner",
                                                              "cxo",
                                                              "vice_president",
                                                              "director",
                                                              "experienced_manager",
                                                              "entry_level_manager",
                                                              "strategic",
                                                              "senior",
                                                              "entry_level",
                                                              "in_training"
                                                          ]
                                                      }
                                                  },
                                                  "exclude": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "owner/partner",
                                                              "cxo",
                                                              "vice_president",
                                                              "director",
                                                              "experienced_manager",
                                                              "entry_level_manager",
                                                              "strategic",
                                                              "senior",
                                                              "entry_level",
                                                              "in_training"
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "past_role": {
                                              "description": "Linkedin native filter : PAST JOB TITLE.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "following_your_company": {
                                              "description": "Linkedin native filter : FOLLOWING YOUR COMPANY.",
                                              "type": "boolean"
                                          },
                                          "viewed_your_profile_recently": {
                                              "description": "Linkedin native filter : VIEWED YOUR PROFILE RECENTLY.",
                                              "type": "boolean"
                                          },
                                          "network_distance": {
                                              "description": "First, second, third+ degree or GROUP.\nLinkedin native filter : CONNECTION.",
                                              "type": "array",
                                              "items": {
                                                  "anyOf": [
                                                      {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              2,
                                                              3
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GROUP"
                                                          ]
                                                      }
                                                  ]
                                              }
                                          },
                                          "connections_of": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : CONNECTIONS OF.",
                                              "type": "string"
                                          },
                                          "past_colleague": {
                                              "description": "Linkedin native filter : PAST COLLEAGUE.",
                                              "type": "boolean"
                                          },
                                          "shared_experiences": {
                                              "description": "Linkedin native filter : SHARED EXPERIENCES.",
                                              "type": "boolean"
                                          },
                                          "changed_jobs": {
                                              "description": "Linkedin native filter : CHANGED JOBS.",
                                              "type": "boolean"
                                          },
                                          "posted_on_linkedin": {
                                              "description": "Linkedin native filter : POSTED ON LINKEDIN.",
                                              "type": "boolean"
                                          },
                                          "mentionned_in_news": {
                                              "description": "Linkedin native filter : MENTIONNED IN NEWS.",
                                              "type": "boolean"
                                          },
                                          "persona": {
                                              "description": "The ID of the parameter. Use type PERSONA on the List search parameters route to find out the right ID.\nLinkedin native filter : PERSONA.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "account_lists": {
                                              "description": "Linkedin native filter : ACCOUNT LISTS.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "lead_lists": {
                                              "description": "Linkedin native filter : LEAD LISTS.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type LEAD_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type LEAD_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "viewed_profile_recently": {
                                              "description": "Linkedin native filter : PEOPLE YOU INTERACTED WITH / VIEWED PROFILE.",
                                              "type": "boolean"
                                          },
                                          "messaged_recently": {
                                              "description": "Linkedin native filter : PEOPLE YOU INTERACTED WITH / MESSAGED.",
                                              "type": "boolean"
                                          },
                                          "include_saved_leads": {
                                              "description": "Linkedin native filter : SAVED LEADS AND ACCOUNTS / ALL MY SAVED LEADS.",
                                              "type": "boolean"
                                          },
                                          "include_saved_accounts": {
                                              "description": "Linkedin native filter : SAVED LEADS AND ACCOUNTS / ALL MY SAVED ACCOUNTS.",
                                              "type": "boolean"
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Sales Navigator - Companies",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "sales_navigator"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "companies"
                                              ]
                                          },
                                          "keywords": {
                                              "description": "Linkedin native filter : KEYWORDS.",
                                              "type": "string"
                                          },
                                          "saved_search_id": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                              "type": "string"
                                          },
                                          "recent_search_id": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type RECENT_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                              "type": "string"
                                          },
                                          "industry": {
                                              "description": "Linkedin native filter : INDUSTRY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "location": {
                                              "description": "Linkedin native filter : HEADQUARTERS LOCATION.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "has_job_offers": {
                                              "description": "Linkedin native filter : JOB OPPORTUNITIES / HIRING ON LINKEDIN.",
                                              "type": "boolean"
                                          },
                                          "headcount": {
                                              "description": "Linkedin native filter : COMPANY HEADCOUNT.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              11,
                                                              51,
                                                              201,
                                                              501,
                                                              1001,
                                                              5001,
                                                              10001
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              10,
                                                              50,
                                                              200,
                                                              500,
                                                              1000,
                                                              5000,
                                                              10000
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "headcount_growth": {
                                              "description": "Linkedin native filter : COMPANY HEADCOUNT GROWTH.",
                                              "type": "object",
                                              "properties": {
                                                  "min": {
                                                      "type": "number"
                                                  },
                                                  "max": {
                                                      "type": "number"
                                                  }
                                              },
                                              "required": [
                                                  "min",
                                                  "max"
                                              ]
                                          },
                                          "department_headcount": {
                                              "description": "Linkedin native filter : DEPARTMENT HEADCOUNT.",
                                              "type": "object",
                                              "properties": {
                                                  "department": {
                                                      "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "min": {
                                                      "type": "number"
                                                  },
                                                  "max": {
                                                      "type": "number"
                                                  }
                                              },
                                              "required": [
                                                  "department",
                                                  "min",
                                                  "max"
                                              ]
                                          },
                                          "department_headcount_growth": {
                                              "description": "Linkedin native filter : DEPARTMENT HEADCOUNT GROWTH.",
                                              "type": "object",
                                              "properties": {
                                                  "department": {
                                                      "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "min": {
                                                      "type": "number"
                                                  },
                                                  "max": {
                                                      "type": "number"
                                                  }
                                              },
                                              "required": [
                                                  "department",
                                                  "min",
                                                  "max"
                                              ]
                                          },
                                          "network_distance": {
                                              "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTION.",
                                              "type": "array",
                                              "items": {
                                                  "type": "number",
                                                  "enum": [
                                                      1,
                                                      2,
                                                      3
                                                  ]
                                              }
                                          },
                                          "annual_revenue": {
                                              "description": "Linkedin native filter : ANNUAL REVENUE.",
                                              "type": "object",
                                              "properties": {
                                                  "currency": {
                                                      "minLength": 3,
                                                      "maxLength": 3,
                                                      "description": "ISO 4217 currency code.",
                                                      "type": "string"
                                                  },
                                                  "min": {
                                                      "type": "number",
                                                      "enum": [
                                                          0,
                                                          0.2,
                                                          1,
                                                          2.5,
                                                          5,
                                                          10,
                                                          20,
                                                          50,
                                                          100,
                                                          500,
                                                          1000
                                                      ]
                                                  },
                                                  "max": {
                                                      "type": "number",
                                                      "enum": [
                                                          0,
                                                          0.2,
                                                          1,
                                                          2.5,
                                                          5,
                                                          10,
                                                          20,
                                                          50,
                                                          100,
                                                          500,
                                                          1000
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "currency",
                                                  "min",
                                                  "max"
                                              ]
                                          },
                                          "followers_count": {
                                              "description": "Linkedin native filter : NUMBER OF FOLLOWERS.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              51,
                                                              101,
                                                              1001,
                                                              5001
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              50,
                                                              100,
                                                              1000,
                                                              5000
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "fortune": {
                                              "description": "Linkedin native filter : FORTUNE.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              0,
                                                              51,
                                                              101,
                                                              251
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              50,
                                                              100,
                                                              250,
                                                              500
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "technologies": {
                                              "description": "The ID of the parameter. Use type TECHNOLOGIES on the List search parameters route to find out the right ID.\nLinkedin native filter : TECHNOLOGIES USED.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "recent_activities": {
                                              "description": "Linkedin native filter : RECENT ACTIVITIES.",
                                              "type": "array",
                                              "items": {
                                                  "type": "string",
                                                  "enum": [
                                                      "senior_leadership_changes",
                                                      "funding_events"
                                                  ]
                                              }
                                          },
                                          "saved_accounts": {
                                              "description": "The ID of the parameter. Use type SAVED_ACCOUNTS on the List search parameters route to find out the right ID.\nLinkedin native filter : SAVED ACCOUNTS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "account_lists": {
                                              "description": "Linkedin native filter : ACCOUNT LISTS.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Recruiter - People",
                                      "type": "object",
                                      "properties": {
                                          "api": {
                                              "type": "string",
                                              "enum": [
                                                  "recruiter"
                                              ]
                                          },
                                          "category": {
                                              "type": "string",
                                              "enum": [
                                                  "people"
                                              ]
                                          },
                                          "keywords": {
                                              "minLength": 1,
                                              "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                              "type": "string"
                                          },
                                          "saved_search": {
                                              "description": "This parameter will override all others.",
                                              "type": "object",
                                              "properties": {
                                                  "id": {
                                                      "minLength": 1,
                                                      "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.",
                                                      "type": "string"
                                                  },
                                                  "project_id": {
                                                      "minLength": 1,
                                                      "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.",
                                                      "type": "string"
                                                  }
                                              },
                                              "required": [
                                                  "id",
                                                  "project_id"
                                              ]
                                          },
                                          "saved_filter": {
                                              "minLength": 1,
                                              "description": "The ID of the parameter. Use type SAVED_FILTERS on the List search parameters route to find out the right ID.",
                                              "type": "string"
                                          },
                                          "location": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : LOCATIONS.",
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "minLength": 1,
                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                          "type": "string"
                                                      },
                                                      "priority": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CAN_HAVE",
                                                              "MUST_HAVE",
                                                              "DOESNT_HAVE"
                                                          ]
                                                      },
                                                      "scope": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CURRENT",
                                                              "OPEN_TO_RELOCATE_ONLY",
                                                              "CURRENT_OR_OPEN_TO_RELOCATE"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "id"
                                                  ],
                                                  "x-scope": {
                                                      "type": "string",
                                                      "enum": [
                                                          "CURRENT",
                                                          "OPEN_TO_RELOCATE_ONLY",
                                                          "CURRENT_OR_OPEN_TO_RELOCATE"
                                                      ]
                                                  }
                                              }
                                          },
                                          "location_within_area": {
                                              "description": "The search zone around the location in miles.",
                                              "type": "number"
                                          },
                                          "industry": {
                                              "description": "Linkedin native filter : INDUSTRIES.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "role": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : JOB TITLES.",
                                                  "anyOf": [
                                                      {
                                                          "title": "ID based",
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                  "type": "string"
                                                              },
                                                              "is_selection": {
                                                                  "description": "Linkedin job titles are either strict filters (only the people with that job) or selections (can include people with related jobs). A strict parameter cannot be used as a selection and vice versa. This information is provided on the List search parameters route results.",
                                                                  "type": "boolean"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              },
                                                              "scope": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CURRENT_OR_PAST",
                                                                      "CURRENT",
                                                                      "PAST",
                                                                      "PAST_NOT_CURRENT",
                                                                      "OPEN_TO_WORK"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "is_selection"
                                                          ],
                                                          "x-scope": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CURRENT_OR_PAST",
                                                                  "CURRENT",
                                                                  "PAST",
                                                                  "PAST_NOT_CURRENT",
                                                                  "OPEN_TO_WORK"
                                                              ]
                                                          }
                                                      },
                                                      {
                                                          "title": "Keywords based",
                                                          "type": "object",
                                                          "properties": {
                                                              "keywords": {
                                                                  "minLength": 1,
                                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                  "type": "string"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              },
                                                              "scope": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CURRENT_OR_PAST",
                                                                      "CURRENT",
                                                                      "PAST",
                                                                      "PAST_NOT_CURRENT",
                                                                      "OPEN_TO_WORK"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "keywords"
                                                          ],
                                                          "x-scope": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CURRENT_OR_PAST",
                                                                  "CURRENT",
                                                                  "PAST",
                                                                  "PAST_NOT_CURRENT",
                                                                  "OPEN_TO_WORK"
                                                              ]
                                                          }
                                                      }
                                                  ]
                                              }
                                          },
                                          "skills": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : SKILLS AND ASSESSMENTS.",
                                                  "anyOf": [
                                                      {
                                                          "title": "ID based",
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type SKILL on the List search parameters route to find out the right ID.",
                                                                  "type": "string"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "id"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Keywords based",
                                                          "type": "object",
                                                          "properties": {
                                                              "keywords": {
                                                                  "minLength": 1,
                                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                  "type": "string"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "keywords"
                                                          ]
                                                      }
                                                  ]
                                              }
                                          },
                                          "company": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : COMPANIES.",
                                                  "anyOf": [
                                                      {
                                                          "title": "ID based",
                                                          "type": "object",
                                                          "properties": {
                                                              "id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                  "type": "string"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              },
                                                              "scope": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CURRENT_OR_PAST",
                                                                      "CURRENT",
                                                                      "PAST",
                                                                      "PAST_NOT_CURRENT"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "id"
                                                          ],
                                                          "x-scope": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CURRENT_OR_PAST",
                                                                  "CURRENT",
                                                                  "PAST",
                                                                  "PAST_NOT_CURRENT"
                                                              ]
                                                          }
                                                      },
                                                      {
                                                          "title": "Keywords based",
                                                          "type": "object",
                                                          "properties": {
                                                              "keywords": {
                                                                  "minLength": 1,
                                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                  "type": "string"
                                                              },
                                                              "priority": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CAN_HAVE",
                                                                      "MUST_HAVE",
                                                                      "DOESNT_HAVE"
                                                                  ]
                                                              },
                                                              "scope": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "CURRENT_OR_PAST",
                                                                      "CURRENT",
                                                                      "PAST",
                                                                      "PAST_NOT_CURRENT"
                                                                  ]
                                                              }
                                                          },
                                                          "required": [
                                                              "keywords"
                                                          ],
                                                          "x-scope": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "CURRENT_OR_PAST",
                                                                  "CURRENT",
                                                                  "PAST",
                                                                  "PAST_NOT_CURRENT"
                                                              ]
                                                          }
                                                      }
                                                  ]
                                              }
                                          },
                                          "company_headcount": {
                                              "description": "Linkedin native filter : COMPANY SIZES.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              11,
                                                              51,
                                                              201,
                                                              501,
                                                              1001,
                                                              5001,
                                                              10001
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              10,
                                                              50,
                                                              200,
                                                              500,
                                                              1000,
                                                              5000,
                                                              10000
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "current_company": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : CURRENT COMPANIES.",
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "minLength": 1,
                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                          "type": "string"
                                                      },
                                                      "priority": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CAN_HAVE",
                                                              "MUST_HAVE",
                                                              "DOESNT_HAVE"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "id"
                                                  ]
                                              }
                                          },
                                          "past_company": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : PAST COMPANIES.",
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "minLength": 1,
                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                          "type": "string"
                                                      },
                                                      "priority": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CAN_HAVE",
                                                              "MUST_HAVE",
                                                              "DOESNT_HAVE"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "id"
                                                  ]
                                              }
                                          },
                                          "school": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : SCHOOLS.",
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "minLength": 1,
                                                          "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                          "type": "string"
                                                      },
                                                      "priority": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CAN_HAVE",
                                                              "MUST_HAVE",
                                                              "DOESNT_HAVE"
                                                          ]
                                                      }
                                                  },
                                                  "required": [
                                                      "id"
                                                  ]
                                              }
                                          },
                                          "groups": {
                                              "description": "The ID of the parameter. Use type GROUPS on the List search parameters route to find out the right ID.\nLinkedin native filter : ALL GROUPS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "graduation_year": {
                                              "description": "A range of years.\nLinkedin native filter : YEAR OF GRADUATION.",
                                              "type": "object",
                                              "properties": {
                                                  "min": {
                                                      "minimum": 1000,
                                                      "maximum": 9999,
                                                      "type": "number"
                                                  },
                                                  "max": {
                                                      "minimum": 1000,
                                                      "maximum": 9999,
                                                      "type": "number"
                                                  }
                                              }
                                          },
                                          "tenure": {
                                              "description": "Linkedin native filter : YEARS OF EXPERIENCE.",
                                              "type": "object",
                                              "properties": {
                                                  "min": {
                                                      "type": "number"
                                                  },
                                                  "max": {
                                                      "type": "number"
                                                  }
                                              }
                                          },
                                          "seniority": {
                                              "description": "Linkedin native filter : SENIORITY.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "owner",
                                                              "partner",
                                                              "cxo",
                                                              "vp",
                                                              "director",
                                                              "manager",
                                                              "senior",
                                                              "entry",
                                                              "training",
                                                              "unpaid"
                                                          ]
                                                      }
                                                  },
                                                  "exclude": {
                                                      "type": "array",
                                                      "items": {
                                                          "type": "string",
                                                          "enum": [
                                                              "owner",
                                                              "partner",
                                                              "cxo",
                                                              "vp",
                                                              "director",
                                                              "manager",
                                                              "senior",
                                                              "entry",
                                                              "training",
                                                              "unpaid"
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "function": {
                                              "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.\nLinkedin native filter : JOB FUNCTIONS.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          },
                                          "network_distance": {
                                              "description": "First, second, third+ degree or GROUP.\nLinkedin native filter : NETWORK RELATIONSHIPS.",
                                              "type": "array",
                                              "items": {
                                                  "anyOf": [
                                                      {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              2,
                                                              3
                                                          ]
                                                      },
                                                      {
                                                          "type": "string",
                                                          "enum": [
                                                              "GROUP"
                                                          ]
                                                      }
                                                  ]
                                              }
                                          },
                                          "hide_previously_viewed": {
                                              "description": "Linkedin native filter : HIDE PREVIOUSLY VIEWED.",
                                              "type": "object",
                                              "properties": {
                                                  "timespan": {
                                                      "description": "The timespan in days since today for the filter to be applied.",
                                                      "type": "number"
                                                  }
                                              },
                                              "required": [
                                                  "timespan"
                                              ]
                                          },
                                          "profile_language": {
                                              "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGES.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 2,
                                                  "maxLength": 2,
                                                  "type": "string"
                                              }
                                          },
                                          "recently_joined": {
                                              "description": "Linkedin native filter : RECENTLY JOINED LINKEDIN.",
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "properties": {
                                                      "min": {
                                                          "type": "number",
                                                          "enum": [
                                                              2,
                                                              8,
                                                              15,
                                                              31
                                                          ]
                                                      },
                                                      "max": {
                                                          "type": "number",
                                                          "enum": [
                                                              1,
                                                              7,
                                                              14,
                                                              30,
                                                              90
                                                          ]
                                                      }
                                                  }
                                              }
                                          },
                                          "first_name": {
                                              "description": "Linkedin native filter : FIRST NAMES.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                  "type": "string"
                                              }
                                          },
                                          "last_name": {
                                              "description": "Linkedin native filter : LAST NAMES.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                  "type": "string"
                                              }
                                          },
                                          "has_military_background": {
                                              "description": "Linkedin native filter : HAS US MILITARY BACKGROUND.",
                                              "type": "boolean"
                                          },
                                          "past_applicants": {
                                              "description": "Linkedin native filter : PAST APPLICANTS.",
                                              "type": "boolean"
                                          },
                                          "hiring_projects": {
                                              "description": "Linkedin native filter : PROJECTS.",
                                              "type": "object",
                                              "properties": {
                                                  "include": {
                                                      "description": "The ID of the parameter. Use type HIRING_PROJECTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  },
                                                  "exclude": {
                                                      "description": "The ID of the parameter. Use type HIRING_PROJECTS on the List search parameters route to find out the right ID.",
                                                      "minItems": 1,
                                                      "type": "array",
                                                      "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                      }
                                                  }
                                              }
                                          },
                                          "recruiting_activity": {
                                              "type": "array",
                                              "items": {
                                                  "description": "Linkedin native filter : RECRUITING ACTIVITY.",
                                                  "type": "object",
                                                  "properties": {
                                                      "id": {
                                                          "type": "string",
                                                          "enum": [
                                                              "messages",
                                                              "tags",
                                                              "notes",
                                                              "projects",
                                                              "resumes",
                                                              "reviews"
                                                          ]
                                                      },
                                                      "priority": {
                                                          "type": "string",
                                                          "enum": [
                                                              "CAN_HAVE",
                                                              "MUST_HAVE",
                                                              "DOESNT_HAVE"
                                                          ]
                                                      },
                                                      "timespan": {
                                                          "description": "The timespan in days since today for the filter to be applied.",
                                                          "type": "number"
                                                      }
                                                  },
                                                  "required": [
                                                      "id"
                                                  ],
                                                  "x-timespan": {
                                                      "description": "The timespan in days since today for the filter to be applied.",
                                                      "type": "number"
                                                  }
                                              }
                                          },
                                          "notes": {
                                              "description": "Linkedin native filter : NOTES.",
                                              "type": "array",
                                              "items": {
                                                  "minLength": 1,
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "required": [
                                          "api",
                                          "category"
                                      ]
                                  },
                                  {
                                      "title": "Search from URL",
                                      "type": "object",
                                      "properties": {
                                          "url": {
                                              "description": "Linkedin's public search URL. Setting this parameter will override the entire body.",
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "url"
                                      ]
                                  },
                                  {
                                      "title": "Cursor",
                                      "description": "In the case of a long cursor, you may want to set it in the body rather than in the query parameters.",
                                      "type": "object",
                                      "properties": {
                                          "cursor": {
                                              "title": "CursorParam",
                                              "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                                              "minLength": 1,
                                              "type": "string"
                                          }
                                      },
                                      "required": [
                                          "cursor"
                                      ]
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "LinkedinSearch"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SearchResult"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "PEOPLE"
                                                              ]
                                                          },
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "public_identifier": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "public_profile_url": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "profile_url": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "profile_picture_url": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "member_urn": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "name": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "first_name": {
                                                              "type": "string"
                                                          },
                                                          "last_name": {
                                                              "type": "string"
                                                          },
                                                          "network_distance": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_1"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_2"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "DISTANCE_3"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUT_OF_NETWORK"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "location": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "industry": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "keywords_match": {
                                                              "type": "string"
                                                          },
                                                          "headline": {
                                                              "type": "string"
                                                          },
                                                          "connections_count": {
                                                              "type": "number"
                                                          },
                                                          "pending_invitation": {
                                                              "type": "boolean"
                                                          },
                                                          "can_send_inmail": {
                                                              "type": "boolean"
                                                          },
                                                          "recruiter_candidate_id": {
                                                              "type": "string"
                                                          },
                                                          "premium": {
                                                              "type": "boolean"
                                                          },
                                                          "open_profile": {
                                                              "type": "boolean"
                                                          },
                                                          "shared_connections_count": {
                                                              "type": "number"
                                                          },
                                                          "last_outreach_activity": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "type": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "SEND_MESSAGE"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "ACCEPT_INVITATION"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  },
                                                                  "performed_at": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "type",
                                                                  "performed_at"
                                                              ]
                                                          },
                                                          "current_positions": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "company": {
                                                                          "type": "string"
                                                                      },
                                                                      "company_id": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "description": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "role": {
                                                                          "type": "string"
                                                                      },
                                                                      "location": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "tenure_at_role": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "years": {
                                                                                  "type": "number"
                                                                              },
                                                                              "months": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      },
                                                                      "tenure_at_company": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "years": {
                                                                                  "type": "number"
                                                                              },
                                                                              "months": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      },
                                                                      "start": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      },
                                                                      "end": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "company",
                                                                      "company_id",
                                                                      "description",
                                                                      "role",
                                                                      "location"
                                                                  ]
                                                              }
                                                          },
                                                          "education": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "degree": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "school": {
                                                                          "type": "string"
                                                                      },
                                                                      "school_id": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "start": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      },
                                                                      "end": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "degree",
                                                                      "school",
                                                                      "school_id",
                                                                      "start"
                                                                  ]
                                                              }
                                                          },
                                                          "work_experience": {
                                                              "type": "array",
                                                              "items": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "company": {
                                                                          "type": "string"
                                                                      },
                                                                      "company_id": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "role": {
                                                                          "type": "string"
                                                                      },
                                                                      "industry": {
                                                                          "anyOf": [
                                                                              {
                                                                                  "type": "string"
                                                                              },
                                                                              {
                                                                                  "nullable": true
                                                                              }
                                                                          ]
                                                                      },
                                                                      "start": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      },
                                                                      "end": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "year": {
                                                                                  "type": "number"
                                                                              },
                                                                              "month": {
                                                                                  "type": "number"
                                                                              }
                                                                          }
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "company",
                                                                      "company_id",
                                                                      "role",
                                                                      "industry",
                                                                      "start"
                                                                  ]
                                                              }
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "id",
                                                          "public_identifier",
                                                          "public_profile_url",
                                                          "profile_url",
                                                          "profile_picture_url",
                                                          "member_urn",
                                                          "name",
                                                          "network_distance",
                                                          "location",
                                                          "industry",
                                                          "headline"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SearchResult"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "COMPANY"
                                                              ]
                                                          },
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "name": {
                                                              "type": "string"
                                                          },
                                                          "location": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "profile_url": {
                                                              "type": "string"
                                                          },
                                                          "industry": {
                                                              "type": "string"
                                                          },
                                                          "summary": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "followers_count": {
                                                              "type": "number"
                                                          },
                                                          "job_offers_count": {
                                                              "type": "number"
                                                          },
                                                          "headcount": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "id",
                                                          "name",
                                                          "location",
                                                          "profile_url",
                                                          "industry",
                                                          "summary"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SearchResult"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "POST"
                                                              ]
                                                          },
                                                          "provider": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LINKEDIN"
                                                              ]
                                                          },
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "social_id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "share_url": {
                                                              "type": "string"
                                                          },
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "text": {
                                                              "type": "string"
                                                          },
                                                          "date": {
                                                              "type": "string"
                                                          },
                                                          "parsed_datetime": {
                                                              "type": "string"
                                                          },
                                                          "reaction_counter": {
                                                              "type": "number"
                                                          },
                                                          "comment_counter": {
                                                              "type": "number"
                                                          },
                                                          "repost_counter": {
                                                              "type": "number"
                                                          },
                                                          "impressions_counter": {
                                                              "type": "number"
                                                          },
                                                          "author": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "public_identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "is_company": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "public_identifier",
                                                                  "name",
                                                                  "is_company"
                                                              ]
                                                          },
                                                          "permissions": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "can_react": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "can_share": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "can_post_comments": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "can_react",
                                                                  "can_share",
                                                                  "can_post_comments"
                                                              ]
                                                          },
                                                          "is_repost": {
                                                              "type": "boolean"
                                                          },
                                                          "repost_id": {
                                                              "description": "The republication ID.",
                                                              "type": "string"
                                                          },
                                                          "reposted_by": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "public_identifier": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "is_company": {
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "public_identifier",
                                                                  "name",
                                                                  "is_company"
                                                              ]
                                                          },
                                                          "repost_content": {
                                                              "description": "The post shared in the current publication.",
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  },
                                                                  "date": {
                                                                      "type": "string"
                                                                  },
                                                                  "parsed_datetime": {
                                                                      "type": "string"
                                                                  },
                                                                  "author": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "public_identifier": {
                                                                              "type": "string"
                                                                          },
                                                                          "name": {
                                                                              "type": "string"
                                                                          },
                                                                          "is_company": {
                                                                              "type": "boolean"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "public_identifier",
                                                                          "name",
                                                                          "is_company"
                                                                      ]
                                                                  },
                                                                  "text": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "date",
                                                                  "parsed_datetime",
                                                                  "author",
                                                                  "text"
                                                              ]
                                                          },
                                                          "attachments": {
                                                              "type": "array",
                                                              "items": {
                                                                  "anyOf": [
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "img"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "sticker": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "sticker"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "video"
                                                                                  ]
                                                                              },
                                                                              "size": {
                                                                                  "type": "object",
                                                                                  "properties": {
                                                                                      "width": {
                                                                                          "type": "number"
                                                                                      },
                                                                                      "height": {
                                                                                          "type": "number"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "width",
                                                                                      "height"
                                                                                  ]
                                                                              },
                                                                              "gif": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "size",
                                                                              "gif"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "audio"
                                                                                  ]
                                                                              },
                                                                              "duration": {
                                                                                  "type": "number"
                                                                              },
                                                                              "voice_note": {
                                                                                  "type": "boolean"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "voice_note"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "file"
                                                                                  ]
                                                                              },
                                                                              "file_name": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type",
                                                                              "file_name"
                                                                          ]
                                                                      },
                                                                      {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              },
                                                                              "file_size": {
                                                                                  "type": "number"
                                                                              },
                                                                              "unavailable": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "mimetype": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url": {
                                                                                  "type": "string"
                                                                              },
                                                                              "url_expires_at": {
                                                                                  "type": "number"
                                                                              },
                                                                              "type": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "linkedin_post"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "unavailable",
                                                                              "type"
                                                                          ]
                                                                      }
                                                                  ]
                                                              }
                                                          },
                                                          "poll": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "id": {
                                                                      "title": "UniqueId",
                                                                      "description": "A unique identifier.",
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  },
                                                                  "total_votes_count": {
                                                                      "type": "number"
                                                                  },
                                                                  "question": {
                                                                      "type": "string"
                                                                  },
                                                                  "is_open": {
                                                                      "type": "boolean"
                                                                  },
                                                                  "options": {
                                                                      "type": "array",
                                                                      "items": {
                                                                          "type": "object",
                                                                          "properties": {
                                                                              "id": {
                                                                                  "title": "UniqueId",
                                                                                  "description": "A unique identifier.",
                                                                                  "minLength": 1,
                                                                                  "type": "string"
                                                                              },
                                                                              "text": {
                                                                                  "type": "string"
                                                                              },
                                                                              "win": {
                                                                                  "type": "boolean"
                                                                              },
                                                                              "votes_count": {
                                                                                  "type": "number"
                                                                              }
                                                                          },
                                                                          "required": [
                                                                              "id",
                                                                              "text",
                                                                              "win",
                                                                              "votes_count"
                                                                          ]
                                                                      }
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "total_votes_count",
                                                                  "question",
                                                                  "is_open",
                                                                  "options"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "provider",
                                                          "id",
                                                          "social_id",
                                                          "share_url",
                                                          "text",
                                                          "date",
                                                          "parsed_datetime",
                                                          "reaction_counter",
                                                          "comment_counter",
                                                          "repost_counter",
                                                          "impressions_counter",
                                                          "author",
                                                          "permissions",
                                                          "is_repost",
                                                          "attachments"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "object": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "SearchResult"
                                                              ]
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "JOB"
                                                              ]
                                                          },
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "reference_id": {
                                                              "type": "string"
                                                          },
                                                          "title": {
                                                              "type": "string"
                                                          },
                                                          "location": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "posted_at": {
                                                              "anyOf": [
                                                                  {
                                                                      "description": "An ISO 8601 UTC datetime (YYYY-MM-DDTHH:MM:SS.sssZ). ⚠️ All links expire upon daily restart, regardless of their stated expiration date. A new link must be generated each time a user clicks on your app to connect.",
                                                                      "example": "2025-12-31T23:59:59.999Z",
                                                                      "pattern": "^[1-2]\\d{3}-[0-1]\\d-[0-3]\\dT\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "reposted": {
                                                              "type": "boolean"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "company": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "public_identifier": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "name": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "profile_url": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          },
                                                                          "profile_picture_url": {
                                                                              "anyOf": [
                                                                                  {
                                                                                      "type": "string"
                                                                                  },
                                                                                  {
                                                                                      "nullable": true
                                                                                  }
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id",
                                                                          "public_identifier",
                                                                          "name",
                                                                          "profile_url",
                                                                          "profile_picture_url"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "object",
                                                          "type",
                                                          "id",
                                                          "reference_id",
                                                          "title",
                                                          "location",
                                                          "posted_at",
                                                          "reposted",
                                                          "url",
                                                          "company"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "config": {
                                          "type": "object",
                                          "properties": {
                                              "params": {
                                                  "anyOf": [
                                                      {
                                                          "title": "Classic - People",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "classic"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "people"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "industry": {
                                                                  "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "location": {
                                                                  "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATIONS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "profile_language": {
                                                                  "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 2,
                                                                      "maxLength": 2,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "network_distance": {
                                                                  "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTIONS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "number",
                                                                      "enum": [
                                                                          1,
                                                                          2,
                                                                          3
                                                                      ]
                                                                  }
                                                              },
                                                              "company": {
                                                                  "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : CURRENT COMPANY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "past_company": {
                                                                  "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : PAST COMPANY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "school": {
                                                                  "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.\nLinkedin native filter : SCHOOL.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "service": {
                                                                  "description": "The ID of the parameter. Use type SERVICE on the List search parameters route to find out the right ID.\nLinkedin native filter : SERVICE CATEGORIES.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "connections_of": {
                                                                  "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : CONNECTIONS OF.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "followers_of": {
                                                                  "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : FOLLOWERS OF.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "open_to": {
                                                                  "description": "Linkedin native filter : OPEN TO.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "proBono",
                                                                          "boardMember"
                                                                      ]
                                                                  }
                                                              },
                                                              "advanced_keywords": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "first_name": {
                                                                          "description": "Linkedin native filter : KEYWORDS / FIRST NAME.",
                                                                          "type": "string"
                                                                      },
                                                                      "last_name": {
                                                                          "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                                          "type": "string"
                                                                      },
                                                                      "title": {
                                                                          "description": "Linkedin native filter : KEYWORDS / TITLE.",
                                                                          "type": "string"
                                                                      },
                                                                      "company": {
                                                                          "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                                          "type": "string"
                                                                      },
                                                                      "school": {
                                                                          "description": "Linkedin native filter : KEYWORDS / LAST NAME.",
                                                                          "type": "string"
                                                                      }
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Classic - Companies",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "classic"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "companies"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "industry": {
                                                                  "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "location": {
                                                                  "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATIONS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "has_job_offers": {
                                                                  "description": "Linkedin native filter : JOB LISTINGS ON LINKEDIN.",
                                                                  "type": "boolean"
                                                              },
                                                              "headcount": {
                                                                  "description": "Linkedin native filter : COMPANY SIZE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  11,
                                                                                  51,
                                                                                  201,
                                                                                  501,
                                                                                  1001,
                                                                                  5001,
                                                                                  10001
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  10,
                                                                                  50,
                                                                                  200,
                                                                                  500,
                                                                                  1000,
                                                                                  5000,
                                                                                  10000
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "network_distance": {
                                                                  "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTIONS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "number",
                                                                      "enum": [
                                                                          1,
                                                                          2,
                                                                          3
                                                                      ]
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Classic - POSTS",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "classic"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "posts"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "sort_by": {
                                                                  "description": "Default value is relevance.\nLinkedin native filter : SORT BY.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "relevance",
                                                                      "date"
                                                                  ]
                                                              },
                                                              "date_posted": {
                                                                  "description": "Linkedin native filter : DATE POSTED.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "past_day",
                                                                      "past_week",
                                                                      "past_month"
                                                                  ]
                                                              },
                                                              "content_type": {
                                                                  "description": "Linkedin native filter : CONTENT TYPE.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "videos",
                                                                      "images",
                                                                      "live_videos",
                                                                      "collaborative_articles",
                                                                      "documents"
                                                                  ]
                                                              },
                                                              "posted_by": {
                                                                  "minProperties": 1,
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "member": {
                                                                          "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : FROM MEMBER.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "company": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : FROM COMPANY.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "me": {
                                                                          "description": "Linkedin native filter : POSTED BY [ME].",
                                                                          "type": "boolean"
                                                                      },
                                                                      "first_connections": {
                                                                          "description": "Linkedin native filter : POSTED BY [1ST CONNECTIONS].",
                                                                          "type": "boolean"
                                                                      },
                                                                      "people_you_follow": {
                                                                          "description": "Linkedin native filter : POSTED BY [PEOPLE YOU FOLLOW].",
                                                                          "type": "boolean"
                                                                      }
                                                                  }
                                                              },
                                                              "mentioning": {
                                                                  "minProperties": 1,
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "member": {
                                                                          "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : MENTIONING MEMBER.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "company": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : MENTIONING COMPANY.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "author": {
                                                                  "minProperties": 1,
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "industry": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : AUTHOR INDUSTRY.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "company": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : AUTHOR COMPANY.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "keywords": {
                                                                          "description": "Linkedin native filter : AUTHOR KEYWORDS.",
                                                                          "type": "string"
                                                                      }
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Classic - JOBS",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "classic"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "jobs"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "sort_by": {
                                                                  "description": "Default value is relevance.\nLinkedin native filter : SORT BY.",
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "relevance",
                                                                      "date"
                                                                  ]
                                                              },
                                                              "date_posted": {
                                                                  "description": "The timespan in days since today for the filter to be applied.\nLinkedin native filter : DATE POSTED.",
                                                                  "type": "number"
                                                              },
                                                              "region": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : GLOBAL LOCATION.",
                                                                  "type": "string"
                                                              },
                                                              "location": {
                                                                  "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.\nLinkedin native filter : LOCATION.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "location_within_area": {
                                                                  "description": "The search zone around the location in miles.\nLinkedin native filter : DISTANCE.",
                                                                  "type": "number"
                                                              },
                                                              "industry": {
                                                                  "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.\nLinkedin native filter : INDUSTRY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "seniority": {
                                                                  "description": "Linkedin native filter : EXPERIENCE LEVEL.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "executive",
                                                                          "director",
                                                                          "mid_senior",
                                                                          "associate",
                                                                          "entry",
                                                                          "intern"
                                                                      ]
                                                                  }
                                                              },
                                                              "function": {
                                                                  "description": "The ID of the parameter. Use type JOB_FUNCTION on the List search parameters route to find out the right ID.\nLinkedin native filter : JOB FUNCTION.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "role": {
                                                                  "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.\nLinkedin native filter : TITLE.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "job_type": {
                                                                  "description": "Linkedin native filter : JOB TYPE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "full_time",
                                                                          "part_time",
                                                                          "contract",
                                                                          "temporary",
                                                                          "volunteer",
                                                                          "internship",
                                                                          "other"
                                                                      ]
                                                                  }
                                                              },
                                                              "company": {
                                                                  "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.\nLinkedin native filter : COMPANY.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "presence": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "on_site",
                                                                          "hybrid",
                                                                          "remote"
                                                                      ]
                                                                  }
                                                              },
                                                              "easy_apply": {
                                                                  "description": "Linkedin native filter : EASY APPLY.",
                                                                  "type": "boolean"
                                                              },
                                                              "has_verifications": {
                                                                  "description": "Linkedin native filter : HAS VERIFICATIONS.",
                                                                  "type": "boolean"
                                                              },
                                                              "under_10_applicants": {
                                                                  "description": "Linkedin native filter : UNDER 10 APPLICANTS.",
                                                                  "type": "boolean"
                                                              },
                                                              "in_your_network": {
                                                                  "description": "Linkedin native filter : IN YOUR NETWORK.",
                                                                  "type": "boolean"
                                                              },
                                                              "fair_chance_employer": {
                                                                  "description": "Linkedin native filter : FAIR CHANCE EMPLOYER.",
                                                                  "type": "boolean"
                                                              },
                                                              "benefits": {
                                                                  "description": "Linkedin native filter : BENEFITS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "medical_insurance",
                                                                          "vision_insurance",
                                                                          "dental_insurance",
                                                                          "disability_insurance",
                                                                          "401(k)",
                                                                          "pension_plan",
                                                                          "paid_maternity_leave",
                                                                          "paid_paternity_leave",
                                                                          "commuter_benefits",
                                                                          "student_loan_assistance",
                                                                          "tuition_assistance"
                                                                      ]
                                                                  }
                                                              },
                                                              "commitments": {
                                                                  "description": "Linkedin native filter : COMMITMENTS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "career_growth_and_learning",
                                                                          "diversity_equity_and_inclusion",
                                                                          "environmental_sustainability",
                                                                          "social_impact",
                                                                          "work_life_balance"
                                                                      ]
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Sales Navigator - People",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "sales_navigator"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "people"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "saved_search_id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                                                  "type": "string"
                                                              },
                                                              "recent_search_id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type RECENT_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                                                  "type": "string"
                                                              },
                                                              "location": {
                                                                  "description": "Linkedin native filter : GEOGRAPHY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "industry": {
                                                                  "description": "Linkedin native filter : INDUSTRY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "first_name": {
                                                                  "description": "Linkedin native filter : FIRST NAME.",
                                                                  "type": "string"
                                                              },
                                                              "last_name": {
                                                                  "description": "Linkedin native filter : LAST NAME.",
                                                                  "type": "string"
                                                              },
                                                              "tenure": {
                                                                  "description": "Linkedin native filter : YEARS OF EXPERIENCE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  0,
                                                                                  1,
                                                                                  3,
                                                                                  6,
                                                                                  10
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  2,
                                                                                  5,
                                                                                  10
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "groups": {
                                                                  "description": "The ID of the parameter. Use type GROUPS on the List search parameters route to find out the right ID.\nLinkedin native filter : GROUPS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "school": {
                                                                  "description": "Linkedin native filter : SCHOOL.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "profile_language": {
                                                                  "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 2,
                                                                      "maxLength": 2,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "company": {
                                                                  "description": "Linkedin native filter : CURRENT COMPANY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "company_headcount": {
                                                                  "description": "Linkedin native filter : COMPANY HEADCOUNT.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  11,
                                                                                  51,
                                                                                  201,
                                                                                  501,
                                                                                  1001,
                                                                                  5001,
                                                                                  10001
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  10,
                                                                                  50,
                                                                                  200,
                                                                                  500,
                                                                                  1000,
                                                                                  5000,
                                                                                  10000
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "company_type": {
                                                                  "description": "Linkedin native filter : COMPANY TYPE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "public_company",
                                                                          "privately_held",
                                                                          "non_profit",
                                                                          "educational_institution",
                                                                          "partnership",
                                                                          "self_employed",
                                                                          "self_owned",
                                                                          "government_agency"
                                                                      ]
                                                                  }
                                                              },
                                                              "company_location": {
                                                                  "description": "Linkedin native filter : COMPANY HEADQUARTERS LOCATION.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "tenure_at_company": {
                                                                  "description": "Linkedin native filter : YEARS IN CURRENT COMPANY.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  0,
                                                                                  1,
                                                                                  3,
                                                                                  6,
                                                                                  10
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  2,
                                                                                  5,
                                                                                  10
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "past_company": {
                                                                  "description": "Linkedin native filter : PAST COMPANY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "function": {
                                                                  "description": "Linkedin native filter : FUNCTION.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "role": {
                                                                  "description": "Linkedin native filter : CURRENT JOB TITLE.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "tenure_at_role": {
                                                                  "description": "Linkedin native filter : YEARS IN CURRENT POSITION.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  0,
                                                                                  1,
                                                                                  3,
                                                                                  6,
                                                                                  10
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  2,
                                                                                  5,
                                                                                  10
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "seniority": {
                                                                  "description": "Linkedin native filter : SENIORITY LEVEL.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "type": "array",
                                                                          "items": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "owner/partner",
                                                                                  "cxo",
                                                                                  "vice_president",
                                                                                  "director",
                                                                                  "experienced_manager",
                                                                                  "entry_level_manager",
                                                                                  "strategic",
                                                                                  "senior",
                                                                                  "entry_level",
                                                                                  "in_training"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "type": "array",
                                                                          "items": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "owner/partner",
                                                                                  "cxo",
                                                                                  "vice_president",
                                                                                  "director",
                                                                                  "experienced_manager",
                                                                                  "entry_level_manager",
                                                                                  "strategic",
                                                                                  "senior",
                                                                                  "entry_level",
                                                                                  "in_training"
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "past_role": {
                                                                  "description": "Linkedin native filter : PAST JOB TITLE.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "following_your_company": {
                                                                  "description": "Linkedin native filter : FOLLOWING YOUR COMPANY.",
                                                                  "type": "boolean"
                                                              },
                                                              "viewed_your_profile_recently": {
                                                                  "description": "Linkedin native filter : VIEWED YOUR PROFILE RECENTLY.",
                                                                  "type": "boolean"
                                                              },
                                                              "network_distance": {
                                                                  "description": "First, second, third+ degree or GROUP.\nLinkedin native filter : CONNECTION.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  2,
                                                                                  3
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "GROUP"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "connections_of": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type PEOPLE on the List search parameters route to find out the right ID.\nLinkedin native filter : CONNECTIONS OF.",
                                                                  "type": "string"
                                                              },
                                                              "past_colleague": {
                                                                  "description": "Linkedin native filter : PAST COLLEAGUE.",
                                                                  "type": "boolean"
                                                              },
                                                              "shared_experiences": {
                                                                  "description": "Linkedin native filter : SHARED EXPERIENCES.",
                                                                  "type": "boolean"
                                                              },
                                                              "changed_jobs": {
                                                                  "description": "Linkedin native filter : CHANGED JOBS.",
                                                                  "type": "boolean"
                                                              },
                                                              "posted_on_linkedin": {
                                                                  "description": "Linkedin native filter : POSTED ON LINKEDIN.",
                                                                  "type": "boolean"
                                                              },
                                                              "mentionned_in_news": {
                                                                  "description": "Linkedin native filter : MENTIONNED IN NEWS.",
                                                                  "type": "boolean"
                                                              },
                                                              "persona": {
                                                                  "description": "The ID of the parameter. Use type PERSONA on the List search parameters route to find out the right ID.\nLinkedin native filter : PERSONA.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "account_lists": {
                                                                  "description": "Linkedin native filter : ACCOUNT LISTS.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "lead_lists": {
                                                                  "description": "Linkedin native filter : LEAD LISTS.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type LEAD_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type LEAD_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "viewed_profile_recently": {
                                                                  "description": "Linkedin native filter : PEOPLE YOU INTERACTED WITH / VIEWED PROFILE.",
                                                                  "type": "boolean"
                                                              },
                                                              "messaged_recently": {
                                                                  "description": "Linkedin native filter : PEOPLE YOU INTERACTED WITH / MESSAGED.",
                                                                  "type": "boolean"
                                                              },
                                                              "include_saved_leads": {
                                                                  "description": "Linkedin native filter : SAVED LEADS AND ACCOUNTS / ALL MY SAVED LEADS.",
                                                                  "type": "boolean"
                                                              },
                                                              "include_saved_accounts": {
                                                                  "description": "Linkedin native filter : SAVED LEADS AND ACCOUNTS / ALL MY SAVED ACCOUNTS.",
                                                                  "type": "boolean"
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Sales Navigator - Companies",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "sales_navigator"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "companies"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "description": "Linkedin native filter : KEYWORDS.",
                                                                  "type": "string"
                                                              },
                                                              "saved_search_id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                                                  "type": "string"
                                                              },
                                                              "recent_search_id": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type RECENT_SEARCHES on the List search parameters route to find out the right ID.\nOverrides all other parameters.",
                                                                  "type": "string"
                                                              },
                                                              "industry": {
                                                                  "description": "Linkedin native filter : INDUSTRY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "location": {
                                                                  "description": "Linkedin native filter : HEADQUARTERS LOCATION.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "has_job_offers": {
                                                                  "description": "Linkedin native filter : JOB OPPORTUNITIES / HIRING ON LINKEDIN.",
                                                                  "type": "boolean"
                                                              },
                                                              "headcount": {
                                                                  "description": "Linkedin native filter : COMPANY HEADCOUNT.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  11,
                                                                                  51,
                                                                                  201,
                                                                                  501,
                                                                                  1001,
                                                                                  5001,
                                                                                  10001
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  10,
                                                                                  50,
                                                                                  200,
                                                                                  500,
                                                                                  1000,
                                                                                  5000,
                                                                                  10000
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "headcount_growth": {
                                                                  "description": "Linkedin native filter : COMPANY HEADCOUNT GROWTH.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "min": {
                                                                          "type": "number"
                                                                      },
                                                                      "max": {
                                                                          "type": "number"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "min",
                                                                      "max"
                                                                  ]
                                                              },
                                                              "department_headcount": {
                                                                  "description": "Linkedin native filter : DEPARTMENT HEADCOUNT.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "department": {
                                                                          "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "min": {
                                                                          "type": "number"
                                                                      },
                                                                      "max": {
                                                                          "type": "number"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "department",
                                                                      "min",
                                                                      "max"
                                                                  ]
                                                              },
                                                              "department_headcount_growth": {
                                                                  "description": "Linkedin native filter : DEPARTMENT HEADCOUNT GROWTH.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "department": {
                                                                          "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "min": {
                                                                          "type": "number"
                                                                      },
                                                                      "max": {
                                                                          "type": "number"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "department",
                                                                      "min",
                                                                      "max"
                                                                  ]
                                                              },
                                                              "network_distance": {
                                                                  "description": "First, second or third+ degree.\nLinkedin native filter : CONNECTION.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "number",
                                                                      "enum": [
                                                                          1,
                                                                          2,
                                                                          3
                                                                      ]
                                                                  }
                                                              },
                                                              "annual_revenue": {
                                                                  "description": "Linkedin native filter : ANNUAL REVENUE.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "currency": {
                                                                          "minLength": 3,
                                                                          "maxLength": 3,
                                                                          "description": "ISO 4217 currency code.",
                                                                          "type": "string"
                                                                      },
                                                                      "min": {
                                                                          "type": "number",
                                                                          "enum": [
                                                                              0,
                                                                              0.2,
                                                                              1,
                                                                              2.5,
                                                                              5,
                                                                              10,
                                                                              20,
                                                                              50,
                                                                              100,
                                                                              500,
                                                                              1000
                                                                          ]
                                                                      },
                                                                      "max": {
                                                                          "type": "number",
                                                                          "enum": [
                                                                              0,
                                                                              0.2,
                                                                              1,
                                                                              2.5,
                                                                              5,
                                                                              10,
                                                                              20,
                                                                              50,
                                                                              100,
                                                                              500,
                                                                              1000
                                                                          ]
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "currency",
                                                                      "min",
                                                                      "max"
                                                                  ]
                                                              },
                                                              "followers_count": {
                                                                  "description": "Linkedin native filter : NUMBER OF FOLLOWERS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  51,
                                                                                  101,
                                                                                  1001,
                                                                                  5001
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  50,
                                                                                  100,
                                                                                  1000,
                                                                                  5000
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "fortune": {
                                                                  "description": "Linkedin native filter : FORTUNE.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  0,
                                                                                  51,
                                                                                  101,
                                                                                  251
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  50,
                                                                                  100,
                                                                                  250,
                                                                                  500
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "technologies": {
                                                                  "description": "The ID of the parameter. Use type TECHNOLOGIES on the List search parameters route to find out the right ID.\nLinkedin native filter : TECHNOLOGIES USED.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "recent_activities": {
                                                                  "description": "Linkedin native filter : RECENT ACTIVITIES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "senior_leadership_changes",
                                                                          "funding_events"
                                                                      ]
                                                                  }
                                                              },
                                                              "saved_accounts": {
                                                                  "description": "The ID of the parameter. Use type SAVED_ACCOUNTS on the List search parameters route to find out the right ID.\nLinkedin native filter : SAVED ACCOUNTS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "account_lists": {
                                                                  "description": "Linkedin native filter : ACCOUNT LISTS.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type ACCOUNT_LISTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Recruiter - People",
                                                          "type": "object",
                                                          "properties": {
                                                              "api": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "recruiter"
                                                                  ]
                                                              },
                                                              "category": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                      "people"
                                                                  ]
                                                              },
                                                              "keywords": {
                                                                  "minLength": 1,
                                                                  "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                  "type": "string"
                                                              },
                                                              "saved_search": {
                                                                  "description": "This parameter will override all others.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "id": {
                                                                          "minLength": 1,
                                                                          "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.",
                                                                          "type": "string"
                                                                      },
                                                                      "project_id": {
                                                                          "minLength": 1,
                                                                          "description": "The ID of the parameter. Use type SAVED_SEARCHES on the List search parameters route to find out the right ID.",
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "id",
                                                                      "project_id"
                                                                  ]
                                                              },
                                                              "saved_filter": {
                                                                  "minLength": 1,
                                                                  "description": "The ID of the parameter. Use type SAVED_FILTERS on the List search parameters route to find out the right ID.",
                                                                  "type": "string"
                                                              },
                                                              "location": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : LOCATIONS.",
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "minLength": 1,
                                                                              "description": "The ID of the parameter. Use type LOCATION on the List search parameters route to find out the right ID.",
                                                                              "type": "string"
                                                                          },
                                                                          "priority": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CAN_HAVE",
                                                                                  "MUST_HAVE",
                                                                                  "DOESNT_HAVE"
                                                                              ]
                                                                          },
                                                                          "scope": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CURRENT",
                                                                                  "OPEN_TO_RELOCATE_ONLY",
                                                                                  "CURRENT_OR_OPEN_TO_RELOCATE"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id"
                                                                      ],
                                                                      "x-scope": {
                                                                          "type": "string",
                                                                          "enum": [
                                                                              "CURRENT",
                                                                              "OPEN_TO_RELOCATE_ONLY",
                                                                              "CURRENT_OR_OPEN_TO_RELOCATE"
                                                                          ]
                                                                      }
                                                                  }
                                                              },
                                                              "location_within_area": {
                                                                  "description": "The search zone around the location in miles.",
                                                                  "type": "number"
                                                              },
                                                              "industry": {
                                                                  "description": "Linkedin native filter : INDUSTRIES.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type INDUSTRY on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "role": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : JOB TITLES.",
                                                                      "anyOf": [
                                                                          {
                                                                              "title": "ID based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "minLength": 1,
                                                                                      "description": "The ID of the parameter. Use type JOB_TITLE on the List search parameters route to find out the right ID.",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "is_selection": {
                                                                                      "description": "Linkedin job titles are either strict filters (only the people with that job) or selections (can include people with related jobs). A strict parameter cannot be used as a selection and vice versa. This information is provided on the List search parameters route results.",
                                                                                      "type": "boolean"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  },
                                                                                  "scope": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CURRENT_OR_PAST",
                                                                                          "CURRENT",
                                                                                          "PAST",
                                                                                          "PAST_NOT_CURRENT",
                                                                                          "OPEN_TO_WORK"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id",
                                                                                  "is_selection"
                                                                              ],
                                                                              "x-scope": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CURRENT_OR_PAST",
                                                                                      "CURRENT",
                                                                                      "PAST",
                                                                                      "PAST_NOT_CURRENT",
                                                                                      "OPEN_TO_WORK"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          {
                                                                              "title": "Keywords based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "keywords": {
                                                                                      "minLength": 1,
                                                                                      "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  },
                                                                                  "scope": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CURRENT_OR_PAST",
                                                                                          "CURRENT",
                                                                                          "PAST",
                                                                                          "PAST_NOT_CURRENT",
                                                                                          "OPEN_TO_WORK"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "keywords"
                                                                              ],
                                                                              "x-scope": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CURRENT_OR_PAST",
                                                                                      "CURRENT",
                                                                                      "PAST",
                                                                                      "PAST_NOT_CURRENT",
                                                                                      "OPEN_TO_WORK"
                                                                                  ]
                                                                              }
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "skills": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : SKILLS AND ASSESSMENTS.",
                                                                      "anyOf": [
                                                                          {
                                                                              "title": "ID based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "minLength": 1,
                                                                                      "description": "The ID of the parameter. Use type SKILL on the List search parameters route to find out the right ID.",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id"
                                                                              ]
                                                                          },
                                                                          {
                                                                              "title": "Keywords based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "keywords": {
                                                                                      "minLength": 1,
                                                                                      "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "keywords"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "company": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : COMPANIES.",
                                                                      "anyOf": [
                                                                          {
                                                                              "title": "ID based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "minLength": 1,
                                                                                      "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  },
                                                                                  "scope": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CURRENT_OR_PAST",
                                                                                          "CURRENT",
                                                                                          "PAST",
                                                                                          "PAST_NOT_CURRENT"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "id"
                                                                              ],
                                                                              "x-scope": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CURRENT_OR_PAST",
                                                                                      "CURRENT",
                                                                                      "PAST",
                                                                                      "PAST_NOT_CURRENT"
                                                                                  ]
                                                                              }
                                                                          },
                                                                          {
                                                                              "title": "Keywords based",
                                                                              "type": "object",
                                                                              "properties": {
                                                                                  "keywords": {
                                                                                      "minLength": 1,
                                                                                      "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                                      "type": "string"
                                                                                  },
                                                                                  "priority": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CAN_HAVE",
                                                                                          "MUST_HAVE",
                                                                                          "DOESNT_HAVE"
                                                                                      ]
                                                                                  },
                                                                                  "scope": {
                                                                                      "type": "string",
                                                                                      "enum": [
                                                                                          "CURRENT_OR_PAST",
                                                                                          "CURRENT",
                                                                                          "PAST",
                                                                                          "PAST_NOT_CURRENT"
                                                                                      ]
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "keywords"
                                                                              ],
                                                                              "x-scope": {
                                                                                  "type": "string",
                                                                                  "enum": [
                                                                                      "CURRENT_OR_PAST",
                                                                                      "CURRENT",
                                                                                      "PAST",
                                                                                      "PAST_NOT_CURRENT"
                                                                                  ]
                                                                              }
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "company_headcount": {
                                                                  "description": "Linkedin native filter : COMPANY SIZES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  11,
                                                                                  51,
                                                                                  201,
                                                                                  501,
                                                                                  1001,
                                                                                  5001,
                                                                                  10001
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  10,
                                                                                  50,
                                                                                  200,
                                                                                  500,
                                                                                  1000,
                                                                                  5000,
                                                                                  10000
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "current_company": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : CURRENT COMPANIES.",
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "minLength": 1,
                                                                              "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                              "type": "string"
                                                                          },
                                                                          "priority": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CAN_HAVE",
                                                                                  "MUST_HAVE",
                                                                                  "DOESNT_HAVE"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id"
                                                                      ]
                                                                  }
                                                              },
                                                              "past_company": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : PAST COMPANIES.",
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "minLength": 1,
                                                                              "description": "The ID of the parameter. Use type COMPANY on the List search parameters route to find out the right ID.",
                                                                              "type": "string"
                                                                          },
                                                                          "priority": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CAN_HAVE",
                                                                                  "MUST_HAVE",
                                                                                  "DOESNT_HAVE"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id"
                                                                      ]
                                                                  }
                                                              },
                                                              "school": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : SCHOOLS.",
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "minLength": 1,
                                                                              "description": "The ID of the parameter. Use type SCHOOL on the List search parameters route to find out the right ID.",
                                                                              "type": "string"
                                                                          },
                                                                          "priority": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CAN_HAVE",
                                                                                  "MUST_HAVE",
                                                                                  "DOESNT_HAVE"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id"
                                                                      ]
                                                                  }
                                                              },
                                                              "groups": {
                                                                  "description": "The ID of the parameter. Use type GROUPS on the List search parameters route to find out the right ID.\nLinkedin native filter : ALL GROUPS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "graduation_year": {
                                                                  "description": "A range of years.\nLinkedin native filter : YEAR OF GRADUATION.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "min": {
                                                                          "minimum": 1000,
                                                                          "maximum": 9999,
                                                                          "type": "number"
                                                                      },
                                                                      "max": {
                                                                          "minimum": 1000,
                                                                          "maximum": 9999,
                                                                          "type": "number"
                                                                      }
                                                                  }
                                                              },
                                                              "tenure": {
                                                                  "description": "Linkedin native filter : YEARS OF EXPERIENCE.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "min": {
                                                                          "type": "number"
                                                                      },
                                                                      "max": {
                                                                          "type": "number"
                                                                      }
                                                                  }
                                                              },
                                                              "seniority": {
                                                                  "description": "Linkedin native filter : SENIORITY.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "type": "array",
                                                                          "items": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "owner",
                                                                                  "partner",
                                                                                  "cxo",
                                                                                  "vp",
                                                                                  "director",
                                                                                  "manager",
                                                                                  "senior",
                                                                                  "entry",
                                                                                  "training",
                                                                                  "unpaid"
                                                                              ]
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "type": "array",
                                                                          "items": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "owner",
                                                                                  "partner",
                                                                                  "cxo",
                                                                                  "vp",
                                                                                  "director",
                                                                                  "manager",
                                                                                  "senior",
                                                                                  "entry",
                                                                                  "training",
                                                                                  "unpaid"
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "function": {
                                                                  "description": "The ID of the parameter. Use type DEPARTMENT on the List search parameters route to find out the right ID.\nLinkedin native filter : JOB FUNCTIONS.",
                                                                  "minItems": 1,
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "network_distance": {
                                                                  "description": "First, second, third+ degree or GROUP.\nLinkedin native filter : NETWORK RELATIONSHIPS.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "anyOf": [
                                                                          {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  2,
                                                                                  3
                                                                              ]
                                                                          },
                                                                          {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "GROUP"
                                                                              ]
                                                                          }
                                                                      ]
                                                                  }
                                                              },
                                                              "hide_previously_viewed": {
                                                                  "description": "Linkedin native filter : HIDE PREVIOUSLY VIEWED.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "timespan": {
                                                                          "description": "The timespan in days since today for the filter to be applied.",
                                                                          "type": "number"
                                                                      }
                                                                  },
                                                                  "required": [
                                                                      "timespan"
                                                                  ]
                                                              },
                                                              "profile_language": {
                                                                  "description": "ISO 639-1 language code.\nLinkedin native filter : PROFILE LANGUAGES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 2,
                                                                      "maxLength": 2,
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "recently_joined": {
                                                                  "description": "Linkedin native filter : RECENTLY JOINED LINKEDIN.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "min": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  2,
                                                                                  8,
                                                                                  15,
                                                                                  31
                                                                              ]
                                                                          },
                                                                          "max": {
                                                                              "type": "number",
                                                                              "enum": [
                                                                                  1,
                                                                                  7,
                                                                                  14,
                                                                                  30,
                                                                                  90
                                                                              ]
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "first_name": {
                                                                  "description": "Linkedin native filter : FIRST NAMES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "last_name": {
                                                                  "description": "Linkedin native filter : LAST NAMES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "description": "Boolean modifiers can be used to refine your search.\nExample : developers AND product owners NOT managers",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "has_military_background": {
                                                                  "description": "Linkedin native filter : HAS US MILITARY BACKGROUND.",
                                                                  "type": "boolean"
                                                              },
                                                              "past_applicants": {
                                                                  "description": "Linkedin native filter : PAST APPLICANTS.",
                                                                  "type": "boolean"
                                                              },
                                                              "hiring_projects": {
                                                                  "description": "Linkedin native filter : PROJECTS.",
                                                                  "type": "object",
                                                                  "properties": {
                                                                      "include": {
                                                                          "description": "The ID of the parameter. Use type HIRING_PROJECTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "exclude": {
                                                                          "description": "The ID of the parameter. Use type HIRING_PROJECTS on the List search parameters route to find out the right ID.",
                                                                          "minItems": 1,
                                                                          "type": "array",
                                                                          "items": {
                                                                              "minLength": 1,
                                                                              "type": "string"
                                                                          }
                                                                      }
                                                                  }
                                                              },
                                                              "recruiting_activity": {
                                                                  "type": "array",
                                                                  "items": {
                                                                      "description": "Linkedin native filter : RECRUITING ACTIVITY.",
                                                                      "type": "object",
                                                                      "properties": {
                                                                          "id": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "messages",
                                                                                  "tags",
                                                                                  "notes",
                                                                                  "projects",
                                                                                  "resumes",
                                                                                  "reviews"
                                                                              ]
                                                                          },
                                                                          "priority": {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                  "CAN_HAVE",
                                                                                  "MUST_HAVE",
                                                                                  "DOESNT_HAVE"
                                                                              ]
                                                                          },
                                                                          "timespan": {
                                                                              "description": "The timespan in days since today for the filter to be applied.",
                                                                              "type": "number"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "id"
                                                                      ],
                                                                      "x-timespan": {
                                                                          "description": "The timespan in days since today for the filter to be applied.",
                                                                          "type": "number"
                                                                      }
                                                                  }
                                                              },
                                                              "notes": {
                                                                  "description": "Linkedin native filter : NOTES.",
                                                                  "type": "array",
                                                                  "items": {
                                                                      "minLength": 1,
                                                                      "type": "string"
                                                                  }
                                                              }
                                                          },
                                                          "required": [
                                                              "api",
                                                              "category"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Search from URL",
                                                          "type": "object",
                                                          "properties": {
                                                              "url": {
                                                                  "description": "Linkedin's public search URL. Setting this parameter will override the entire body.",
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "url"
                                                          ]
                                                      },
                                                      {
                                                          "title": "Cursor",
                                                          "description": "In the case of a long cursor, you may want to set it in the body rather than in the query parameters.",
                                                          "type": "object",
                                                          "properties": {
                                                              "cursor": {
                                                                  "title": "CursorParam",
                                                                  "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                                                                  "minLength": 1,
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "cursor"
                                                          ]
                                                      }
                                                  ]
                                              }
                                          }
                                      },
                                      "paging": {
                                          "type": "object",
                                          "properties": {
                                              "start": {
                                                  "anyOf": [
                                                      {
                                                          "type": "number"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "page_count": {
                                                  "type": "number"
                                              },
                                              "total_count": {
                                                  "type": "number"
                                              }
                                          },
                                          "required": [
                                              "start",
                                              "page_count",
                                              "total_count"
                                          ]
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {
                                                  "title": "CursorParam",
                                                  "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "config",
                                      "paging",
                                      "cursor"
                                  ]
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "\n          ## Bad Request\n          ### Invalid parameters\n          One or more request parameters are invalid or missing.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "BadRequestResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/invalid_parameters",
                                              "errors/malformed_request",
                                              "errors/invalid_url",
                                              "errors/too_many_characters",
                                              "errors/unescaped_characters",
                                              "errors/missing_parameters"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              400
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "\n          ## Unauthorized\n          ### Disconnected account\n          The account appears to be disconnected from the provider service.\nundefined",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nAccount not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "LinkedIn Specific"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/posts/{post_id}": {
          "get": {
              "operationId": "d_getPost",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst post_id = \"post id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getPost({\n\t\taccount_id,\n\t\tpost_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Retrieve a post",
              "description": "Retrieve the details of a post.",
              "parameters": [
                  {
                      "name": "post_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the wanted post.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "provider": {
                                          "type": "string",
                                          "enum": [
                                              "LINKEDIN"
                                          ]
                                      },
                                      "id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "social_id": {
                                          "title": "UniqueId",
                                          "description": "A unique identifier.",
                                          "minLength": 1,
                                          "type": "string"
                                      },
                                      "share_url": {
                                          "type": "string"
                                      },
                                      "title": {
                                          "type": "string"
                                      },
                                      "text": {
                                          "type": "string"
                                      },
                                      "date": {
                                          "type": "string"
                                      },
                                      "parsed_datetime": {
                                          "type": "string"
                                      },
                                      "reaction_counter": {
                                          "type": "number"
                                      },
                                      "comment_counter": {
                                          "type": "number"
                                      },
                                      "repost_counter": {
                                          "type": "number"
                                      },
                                      "impressions_counter": {
                                          "type": "number"
                                      },
                                      "author": {
                                          "type": "object",
                                          "properties": {
                                              "public_identifier": {
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "is_company": {
                                                  "type": "boolean"
                                              }
                                          },
                                          "required": [
                                              "public_identifier",
                                              "name",
                                              "is_company"
                                          ]
                                      },
                                      "permissions": {
                                          "type": "object",
                                          "properties": {
                                              "can_react": {
                                                  "type": "boolean"
                                              },
                                              "can_share": {
                                                  "type": "boolean"
                                              },
                                              "can_post_comments": {
                                                  "type": "boolean"
                                              }
                                          },
                                          "required": [
                                              "can_react",
                                              "can_share",
                                              "can_post_comments"
                                          ]
                                      },
                                      "is_repost": {
                                          "type": "boolean"
                                      },
                                      "repost_id": {
                                          "description": "The republication ID.",
                                          "type": "string"
                                      },
                                      "reposted_by": {
                                          "type": "object",
                                          "properties": {
                                              "public_identifier": {
                                                  "type": "string"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "is_company": {
                                                  "type": "boolean"
                                              }
                                          },
                                          "required": [
                                              "public_identifier",
                                              "name",
                                              "is_company"
                                          ]
                                      },
                                      "repost_content": {
                                          "description": "The post shared in the current publication.",
                                          "type": "object",
                                          "properties": {
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "date": {
                                                  "type": "string"
                                              },
                                              "parsed_datetime": {
                                                  "type": "string"
                                              },
                                              "author": {
                                                  "type": "object",
                                                  "properties": {
                                                      "public_identifier": {
                                                          "type": "string"
                                                      },
                                                      "name": {
                                                          "type": "string"
                                                      },
                                                      "is_company": {
                                                          "type": "boolean"
                                                      }
                                                  },
                                                  "required": [
                                                      "public_identifier",
                                                      "name",
                                                      "is_company"
                                                  ]
                                              },
                                              "text": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "id",
                                              "date",
                                              "parsed_datetime",
                                              "author",
                                              "text"
                                          ]
                                      },
                                      "attachments": {
                                          "type": "array",
                                          "items": {
                                              "anyOf": [
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "img"
                                                              ]
                                                          },
                                                          "size": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "width": {
                                                                      "type": "number"
                                                                  },
                                                                  "height": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "width",
                                                                  "height"
                                                              ]
                                                          },
                                                          "sticker": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "size",
                                                          "sticker"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "video"
                                                              ]
                                                          },
                                                          "size": {
                                                              "type": "object",
                                                              "properties": {
                                                                  "width": {
                                                                      "type": "number"
                                                                  },
                                                                  "height": {
                                                                      "type": "number"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "width",
                                                                  "height"
                                                              ]
                                                          },
                                                          "gif": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "size",
                                                          "gif"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "audio"
                                                              ]
                                                          },
                                                          "duration": {
                                                              "type": "number"
                                                          },
                                                          "voice_note": {
                                                              "type": "boolean"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "voice_note"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "file"
                                                              ]
                                                          },
                                                          "file_name": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type",
                                                          "file_name"
                                                      ]
                                                  },
                                                  {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "type": "string"
                                                          },
                                                          "file_size": {
                                                              "type": "number"
                                                          },
                                                          "unavailable": {
                                                              "type": "boolean"
                                                          },
                                                          "mimetype": {
                                                              "type": "string"
                                                          },
                                                          "url": {
                                                              "type": "string"
                                                          },
                                                          "url_expires_at": {
                                                              "type": "number"
                                                          },
                                                          "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                  "linkedin_post"
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "unavailable",
                                                          "type"
                                                      ]
                                                  }
                                              ]
                                          }
                                      },
                                      "poll": {
                                          "type": "object",
                                          "properties": {
                                              "id": {
                                                  "title": "UniqueId",
                                                  "description": "A unique identifier.",
                                                  "minLength": 1,
                                                  "type": "string"
                                              },
                                              "total_votes_count": {
                                                  "type": "number"
                                              },
                                              "question": {
                                                  "type": "string"
                                              },
                                              "is_open": {
                                                  "type": "boolean"
                                              },
                                              "options": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "text": {
                                                              "type": "string"
                                                          },
                                                          "win": {
                                                              "type": "boolean"
                                                          },
                                                          "votes_count": {
                                                              "type": "number"
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "text",
                                                          "win",
                                                          "votes_count"
                                                      ]
                                                  }
                                              }
                                          },
                                          "required": [
                                              "id",
                                              "total_votes_count",
                                              "question",
                                              "is_open",
                                              "options"
                                          ]
                                      },
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "Post"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "provider",
                                      "id",
                                      "social_id",
                                      "share_url",
                                      "text",
                                      "date",
                                      "parsed_datetime",
                                      "reaction_counter",
                                      "comment_counter",
                                      "repost_counter",
                                      "impressions_counter",
                                      "author",
                                      "permissions",
                                      "is_repost",
                                      "attachments",
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/posts": {
          "post": {
              "operationId": "d_createPost",
              "summary": "Create a post",
              "description": "Publish a post.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "description": "The id of the account to perform the request from.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "text": {
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "attachments": {
                                      "type": "array",
                                      "items": {
                                          "format": "binary",
                                          "type": "string"
                                      }
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "text"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. Post published successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "PostCreated"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/posts/{post_id}/comments": {
          "get": {
              "operationId": "d_listAllComments",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst post_id = \"post id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllPostComments({\n\t\taccount_id,\n\t\tpost_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all comments from a post",
              "description": "Returns a list of either comments on a given post or replies on a given comment.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 100.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "comment_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the comment to get replies from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": true,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "post_id",
                      "required": true,
                      "in": "path",
                      "description": "The ID of the associated post. For Linkedin, this must be the social ID provided in the GET post route response.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "CommentList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "Comment"
                                                      ]
                                                  },
                                                  "id": {
                                                      "title": "UniqueId",
                                                      "description": "A unique identifier.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                  },
                                                  "author": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string"
                                                          },
                                                          {
                                                              "nullable": true
                                                          }
                                                      ]
                                                  },
                                                  "author_details": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "headline": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "profile_url": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "network_distance": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "FIRST_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "SECOND_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "THIRD_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUT_OF_NETWORK"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "headline",
                                                          "profile_url",
                                                          "network_distance"
                                                      ]
                                                  },
                                                  "date": {
                                                      "type": "string"
                                                  },
                                                  "text": {
                                                      "type": "string"
                                                  },
                                                  "reaction_counter": {
                                                      "type": "number"
                                                  },
                                                  "reply_counter": {
                                                      "type": "number"
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "id",
                                                  "author",
                                                  "author_details",
                                                  "date",
                                                  "text",
                                                  "reaction_counter",
                                                  "reply_counter"
                                              ]
                                          }
                                      },
                                      "cursor": {
                                          "anyOf": [
                                              {
                                                  "type": "string"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      },
                                      "total_items": {
                                          "anyOf": [
                                              {
                                                  "type": "number"
                                              },
                                              {
                                                  "nullable": true
                                              }
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "cursor",
                                      "total_items"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          },
          "post": {
              "operationId": "d_sendComment",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst post_id = \"post id\"\nconst text = \"comment\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.sendPostComment({\n\t\taccount_id,\n\t\tpost_id,\n\t\ttext,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Comment a post",
              "description": "Comment a post or reply to a post comment.",
              "parameters": [
                  {
                      "name": "post_id",
                      "required": true,
                      "in": "path",
                      "description": "The id of the post to comment.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "description": "The id of the account to perform the request from.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "text": {
                                      "minLength": 1,
                                      "maxLength": 1250,
                                      "type": "string"
                                  },
                                  "comment_id": {
                                      "minLength": 1,
                                      "description": "The id of the comment to reply to.",
                                      "type": "string"
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "text"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. Comment sent successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "CommentSent"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nPost not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/posts/{post_id}/reactions": {
          "get": {
              "operationId": "d_listAllReactions",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst post_id = \"post id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.getAllPostComments({\n\t\taccount_id,\n\t\tpost_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "List all reactions from a post",
              "description": "Returns a list of reactions to either a post or a post comment.",
              "parameters": [
                  {
                      "name": "cursor",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "title": "CursorParam",
                          "description": "A cursor for pagination purposes. To get the next page of entries, you need to make a new request and fulfill this field with the cursor received in the preceding request. This process should be repeated until all entries have been retrieved.",
                          "minLength": 1,
                          "type": "string"
                      }
                  },
                  {
                      "name": "limit",
                      "required": false,
                      "in": "query",
                      "schema": {
                          "minimum": 1,
                          "maximum": 100,
                          "description": "A limit for the number of items returned in the response. The value can be set between 1 and 100.",
                          "example": 100,
                          "type": "integer"
                      }
                  },
                  {
                      "name": "comment_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the comment to get reactions from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "account_id",
                      "required": false,
                      "in": "query",
                      "description": "The id of the account to perform the request from.",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "post_id",
                      "required": true,
                      "in": "path",
                      "description": "The ID of the associated post. For Linkedin, this must be the social ID provided in the GET post route response.",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. Request succeeded.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "PostReactionList"
                                          ]
                                      },
                                      "items": {
                                          "type": "array",
                                          "items": {
                                              "type": "object",
                                              "properties": {
                                                  "object": {
                                                      "type": "string",
                                                      "enum": [
                                                          "PostReaction"
                                                      ]
                                                  },
                                                  "value": {
                                                      "anyOf": [
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "LIKE"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "PRAISE"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "APPRECIATION"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "EMPATHY"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "INTEREST"
                                                              ]
                                                          },
                                                          {
                                                              "type": "string",
                                                              "enum": [
                                                                  "ENTERTAINMENT"
                                                              ]
                                                          }
                                                      ]
                                                  },
                                                  "author": {
                                                      "type": "object",
                                                      "properties": {
                                                          "id": {
                                                              "title": "UniqueId",
                                                              "description": "A unique identifier.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                          },
                                                          "type": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "INDIVIDUAL"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "COMPANY"
                                                                      ]
                                                                  }
                                                              ]
                                                          },
                                                          "name": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "headline": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "profile_url": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string"
                                                                  },
                                                                  {
                                                                      "nullable": true
                                                                  }
                                                              ]
                                                          },
                                                          "network_distance": {
                                                              "anyOf": [
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "FIRST_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "SECOND_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "THIRD_DEGREE"
                                                                      ]
                                                                  },
                                                                  {
                                                                      "type": "string",
                                                                      "enum": [
                                                                          "OUT_OF_NETWORK"
                                                                      ]
                                                                  }
                                                              ]
                                                          }
                                                      },
                                                      "required": [
                                                          "id",
                                                          "type",
                                                          "name",
                                                          "headline",
                                                          "profile_url"
                                                      ]
                                                  }
                                              },
                                              "required": [
                                                  "object",
                                                  "value",
                                                  "author"
                                              ]
                                          }
                                      },
                                      "paging": {
                                          "type": "object",
                                          "properties": {
                                              "cursor": {
                                                  "anyOf": [
                                                      {
                                                          "type": "string"
                                                      },
                                                      {
                                                          "nullable": true
                                                      }
                                                  ]
                                              },
                                              "start": {
                                                  "type": "number"
                                              },
                                              "page_count": {
                                                  "type": "number"
                                              },
                                              "total_count": {
                                                  "type": "number"
                                              }
                                          },
                                          "required": [
                                              "cursor",
                                              "start",
                                              "page_count",
                                              "total_count"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object",
                                      "items",
                                      "paging"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      },
      "/api/v1/posts/reaction": {
          "post": {
              "operationId": "d_addPostReaction",
              "x-readme": {
                  "code-samples": [
                      {
                          "language": "node",
                          "code": "import { UnipileClient } from \"unipile-node-sdk\"\n\n// SDK setup\nconst BASE_URL = \"your base url\"\nconst ACCESS_TOKEN = \"your access token\"\n// Inputs\nconst account_id = \"account id\"\nconst post_id = \"post id\"\n\ntry {\n\tconst client = new UnipileClient(BASE_URL, ACCESS_TOKEN)\n\n\tconst response = await client.users.sendPostReaction({\n\t\taccount_id,\n\t\tpost_id,\n\t})\n} catch (error) {\n\tconsole.log(error)\n}\n",
                          "name": "unipile-node-sdk",
                          "install": "npm install unipile-node-sdk"
                      }
                  ]
              },
              "summary": "Add a reaction to a post",
              "description": "React to either a post or a post comment.",
              "parameters": [],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "account_id": {
                                      "description": "The id of the account to perform the request from.",
                                      "minLength": 1,
                                      "type": "string"
                                  },
                                  "post_id": {
                                      "minLength": 1,
                                      "description": "The id of the post that will receive the reaction.",
                                      "type": "string"
                                  },
                                  "comment_id": {
                                      "minLength": 1,
                                      "description": "The id of the comment to send a reaction to.",
                                      "type": "string"
                                  },
                                  "reaction_type": {
                                      "type": "string",
                                      "enum": [
                                          "like",
                                          "celebrate",
                                          "support",
                                          "love",
                                          "insightful",
                                          "funny"
                                      ]
                                  }
                              },
                              "required": [
                                  "account_id",
                                  "post_id"
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created. Reaction added successfully.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "object": {
                                          "type": "string",
                                          "enum": [
                                              "ReactionAdded"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "object"
                                  ]
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "## Unauthorized\n\n### Missing credentials - Type: \"errors/missing_credentials\"\nSome credentials are necessary to perform the request.\n\n### Multiple sessions - Type: \"errors/multiple_sessions\"\nLinkedIn limits the use of multiple sessions on certain Recruiter accounts. This error restricts access to this route only, but causing a popup to appear in the user's browser, prompting them to choose a session, which can disconnect the current account. To avoid this error, use the cookie connection method.\n\n### Wrong account - Type: \"errors/wrong_account\"\nThe provided credentials do not match the correct account.\n\n### Invalid credentials - Type: \"errors/invalid_credentials\"\nThe provided credentials are invalid.\n\n### Invalid checkpoint solution - Type: \"errors/invalid_checkpoint_solution\"\nThe checkpoint resolution did not pass successfully. Please retry.\n\n### Checkpoint error - Type: \"errors/checkpoint_error\"\nA checkpoint seems not to be resolvable. It the issue persists, please contact support.\n\n### Expired credentials - Type: \"errors/expired_credentials\"\nInvalid credentials. Please check your username and password and try again.\n\n### Expired link - Type: \"errors/expired_link\"\nThis link has expired. Please return to the application and generate a new one.\n\n### Insufficient privileges - Type: \"errors/insufficient_privileges\"\nThis resource seems to be out of your scopes.\n\n### Disconnected account - Type: \"errors/disconnected_account\"\nThe account appears to be disconnected from the provider service.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "UnauthorizedResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/missing_credentials",
                                              "errors/multiple_sessions",
                                              "errors/invalid_checkpoint_solution",
                                              "errors/checkpoint_error",
                                              "errors/invalid_credentials",
                                              "errors/expired_credentials",
                                              "errors/insufficient_privileges",
                                              "errors/disconnected_account",
                                              "errors/invalid_credentials_but_valid_account_imap",
                                              "errors/expired_link",
                                              "errors/wrong_account"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              401
                                          ]
                                      },
                                      "connectionParams": {
                                          "type": "object",
                                          "properties": {
                                              "imap_host": {
                                                  "type": "string"
                                              },
                                              "imap_encryption": {
                                                  "type": "string"
                                              },
                                              "imap_port": {
                                                  "type": "number"
                                              },
                                              "imap_user": {
                                                  "type": "string"
                                              },
                                              "smtp_host": {
                                                  "type": "string"
                                              },
                                              "smtp_port": {
                                                  "type": "number"
                                              },
                                              "smtp_user": {
                                                  "type": "string"
                                              }
                                          },
                                          "required": [
                                              "imap_host",
                                              "imap_port",
                                              "imap_user",
                                              "smtp_host",
                                              "smtp_port",
                                              "smtp_user"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "403": {
                      "description": "## Forbidden\n\n### Insufficient permissions - Type: \"errors/insufficient_permissions\"\nValid authentication but insufficient permissions to perform the request.\n\n### Account restricted - Type: \"errors/account_restricted\"\nAccess to this account has been restricted by the provider.\n\n### Session mismatch - Type: \"errors/session_mismatch\"\nToken User id does not match client session id.\n\n### Feature not subscribed - Type: \"errors/feature_not_subscribed\"\nThe requested feature has either not been subscribed or not been authenticated properly.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ForbiddenResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/account_restricted",
                                              "errors/insufficient_permissions",
                                              "errors/session_mismatch",
                                              "errors/feature_not_subscribed"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              403
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "\n        ## Not Found\n        ### Resource not found\n        The requested resource were not found.\nPost not found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "NotFoundResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/resource_not_found",
                                              "errors/invalid_resource_identifier"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              404
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "## Internal Server Error\n\n### Unexpected error - Type: \"errors/unexpected_error\"\nSomething went wrong. {{moreDetails}}\n\n### Provider error - Type: \"errors/provider_error\"\nThe provider is experiencing operational problems. Please try again later.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "InternalServerErrorResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/unexpected_error",
                                              "errors/provider_error"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              500
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "503": {
                      "description": "## Service Unavailable\n\n### No client session - Type: \"errors/no_client_session\"\nNo client session is currently running.\n\n### No channel - Type: \"errors/no_channel\"\nNo channel to client session.\n\n### Handler missing - Type: \"errors/no_handler\"\nHandler missing for that request.\n\n### Network down - Type: \"errors/network_down\"\nNetwork is down on server side. Please wait a moment and retry.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "ServiceUnavailableResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/no_client_session",
                                              "errors/no_channel",
                                              "errors/no_handler",
                                              "errors/network_down"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              503
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  },
                  "504": {
                      "description": "## Gateway Timeout\n\n### Request timed out - Type: \"errors/request_timeout\"\nRequest Timeout. Please try again, and if the issue persists, contact support.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "GatewayTimeoutResponse",
                                  "type": "object",
                                  "properties": {
                                      "title": {
                                          "type": "string"
                                      },
                                      "detail": {
                                          "type": "string"
                                      },
                                      "instance": {
                                          "type": "string"
                                      },
                                      "type": {
                                          "type": "string",
                                          "enum": [
                                              "errors/request_timeout"
                                          ]
                                      },
                                      "status": {
                                          "type": "number",
                                          "enum": [
                                              504
                                          ]
                                      }
                                  },
                                  "required": [
                                      "title",
                                      "type",
                                      "status"
                                  ]
                              }
                          }
                      }
                  }
              },
              "tags": [
                  "Users"
              ],
              "security": [
                  {
                      "Access-Token": []
                  }
              ]
          }
      }
  },
  "info": {
      "title": "Unipile API Reference",
      "description": "Unipile Communication is an **HTTP API**. It has predictable resource-oriented `URLs`, accepts **form-encoded** or **JSON-encoded** request bodies, returns **JSON-encoded responses**, and uses standard HTTP response codes, authentication, and verbs.",
      "version": "1.0",
      "contact": {}
  },
  "tags": [
      {
          "name": "Accounts",
          "description": "Accounts  management",
          "externalDocs": {
              "url": "https://www.unipile.com/integrations/",
              "description": "Related guide : Integrations"
          }
      },
      {
          "name": "Messaging",
          "description": "Messaging management"
      },
      {
          "name": "Users",
          "description": "Users features"
      },
      {
          "name": "LinkedIn Specific",
          "description": "Linkedin specific use cases"
      },
      {
          "name": "Emails",
          "description": "Emails management"
      },
      {
          "name": "Webhooks",
          "description": "Webhooks management"
      }
  ],
  "servers": [
      {
          "url": "https://{subdomain}.unipile.com:{port}",
          "description": "live server",
          "variables": {
              "subdomain": {
                  "default": "api1"
              },
              "port": {
                  "default": "13111"
              }
          }
      },
      {
          "url": "http://127.0.0.1:3114"
      }
  ],
  "components": {
      "securitySchemes": {
          "Access-Token": {
              "type": "apiKey",
              "in": "header",
              "name": "X-API-KEY"
          },
          "bearer": {
              "scheme": "bearer",
              "bearerFormat": "JWT",
              "type": "http"
          }
      },
      "schemas": {}
  }
}